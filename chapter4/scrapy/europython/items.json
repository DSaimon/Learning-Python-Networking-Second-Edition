[
{"title": ["Citizen Science with Python"], "author": ["Ian Ozsvald"], "description": ["You could make a difference in the world with a little science and Python. We\u2019ll look at several data-driven humanitarian and healthcare projects developed using Python and, all going well, run some audience experiments. By the end of the talk I hope you\u2019ll be looking to run your own experiments with the scientific Python stack."], "date": ["Friday 27 July"], "tags": ["Science", "Data"]},
{"title": ["Creating a Culture of Software Craftsmanship\u202f"], "author": ["Keith Harrison"], "description": ["This time it\u2019ll be different. It\u2019s a green field project and you\u2019ve learned from your mistakes. You\u2019re not going to make the same ones again.", "Fast forward several months and you\u2019re in a mess. A change in one place causes bugs in a completely different place. Adding a simple feature means making changes all over your application. Progress is getting slower and slower. You\u2019re lost in complexity.", "Why does this keep happening and what can we do about it? ", "This talk will try to answer those questions.", "I\u2019ll show how complex software really is, define the different types of complexity found in software, explain the issues complexity causes and discuss different techniques we can use to manage it.", "This talk is suitable for anyone who has worked or will work on a software development project. No development experience is required."], "date": ["Friday 27 July"], "tags": ["Best Practice", "Agile", "Clean Code"]},
{"title": ["CatBoost - the new generation of Gradient Boosting"], "author": ["Anna Veronika Dorogush"], "description": ["Gradient boosting is a powerful machine-learning technique that achieves state-of-the-art results\nin a variety of practical tasks. For a number of years, it has remained the primary method for\nlearning problems with heterogeneous features, noisy data, and complex dependencies: web search,\nrecommendation systems, weather forecasting, and many others.\nCatBoost (http://catboost.yandex) is a new open-source gradient boosting library, that outperforms existing publicly available implementations of gradient boosting in terms of quality. It has a set of addional advantages.", "CatBoost is able to incorporate categorical features in your data (like music genre, URL, search query, etc.) in predictive models with no additional preprocessing. For more details on our approach please refer to our NIPS 2017 ML Systems Workshop paper (http://learningsys.org/nips17/assets/papers/paper_11.pdf).", "CatBoost inference is 20-60 times faster then in other open-source gradient boosting libraries, which makes it possible to use CatBoost for latency-critical tasks.", "CatBoost has the fastest GPU and multi GPU training implementations of all the openly available gradient boosting libraries.", "CatBoost requires no hyperparameter tunning in order to get a model with good quality.", "CatBoost is highly scalable and can be efficiently trained using hundreds of machines", "The talk will cover a broad description of gradient boosting and its areas of usage and the differences between CatBoost and other gradient boosting libraries. We will also briefly explain the details of the proprietary algorithm that leads to a boost in quality."], "date": ["Thursday 26 July"], "tags": ["Data Science", "Machine-Learning", "Open-Source", "Big Data"]},
{"title": ["Code Review Skills for Pythonistas"], "author": ["Nina Zakharenko"], "description": ["As teams and projects grow, code review becomes increasingly important to support the maintainability of complex codebases. In this talk, I\u2019ll cover guidelines for writing consistent python code beyond pep8, how to look out for common python gotchas, and what python tools are available to automate various parts of the review process. Most importantly, I\u2019ll cover the human aspect of code reviews - how we can be better at approaching reviews with empathy and understanding from the perspective of both a reviewer and a submitter. Following these successful code review practices will lead to happier teams and healthier code bases.", "This talk is useful for python developers with any amount of experience. No prerequisite knowledge is necessary. \n- For those who are just starting out, it will be a great general overview.\n- Intermediate developers may not know about the wide variety of tooling that\u2019s available.\n- Advanced developers will learn techniques for performing code reviews with empathy.", "This talk will enable you to have better code reviews on your teams at work, and a better approach to code reviews in open source projects. You\u2019ll leave with 3 main takeaways:\n 1. Code Reviews are most effective when conducted with empathy. If you do reviews with growth and learning in mind, they become tools for sharing knowledge instead of an opportunity to bruise egos or show off esoteric knowledge.\n 2. Python has powerful tooling available for code reviews such as pep8 as a style guide, pylint as a linter, coverage.py to identify test coverage, and vulture to identify dead code.\n 3. That python style guides beyond pep8 have clear benefits in terms of producing more consistent code that\u2019s easier to review and easier to maintain."], "date": ["Thursday 26 July"], "tags": ["Development", "Clean Code", "Programming", "Open-Source", "Code Analysis"]},
{"title": ["Creating Solid APIs"], "author": ["Rivo Laks"], "description": ["Increasingly, our apps are used not by humans but by other apps - via their APIs. Thus it is increasingly important that your APIs are well-designed and easy to consume for other developers.", "Adding a few API endpoints to your application for internal consumption is easy. Creating APIs that other developers will love to use is a much harder problem.\nYou\u2019ll need to think about solving variety of topics such as versioning, authentication, response structure, documentation and more. There are existing good practices for each of them, but often developers who haven\u2019t done a lot of API work aren\u2019t familiar with them.", "My talk will show how to find reasonable solutions for those problems.\nI will talk about importance and intricacies of good documentation and why auto-generating it from your code is useful. I\u2019ll show how to make use of familiarity by using standards such as JSON API and show benefits brought by its standardized response structure that makes lives of 3rd-party developers easier.", "Authentication will be discussed, including introduction to OAuth2. I\u2019ll talk about when OAuth2 is a good choice and when not, as well as dig into some trickier parts of it.\nWe\u2019ll then move on to versioning and how you can change your API without breaking all existing apps.\nFinally we\u2019ll wrap it all up by looking at some major APIs that are using the same principles."], "date": ["Friday 27 July"], "tags": ["Best Practice", "RESTful", "Web General", "APIs"]},
{"title": ["Building a Question Answering System using Deep Learning Techniques "], "author": ["Rricha Jalota"], "description": ["Question Answering is an active area of research where the goal is to provide brief and crisp answers to natural language questions. Given a question and a text passage, the task is to answer the question based on the information given in the passage. Traditionally, NLP techniques like noise removal, tokenization,  dependency parsing, named entity recognition etc. are used to extract an answer from the passage. With Deep Learning techniques gaining traction, the focus has now shifted to how neural network architectures can improve the accuracy of Question Answering Systems. \nThis talk will help the audience understand how QA systems work and enable them to build one on their own! \nTalk Outline :\n1. Introduction to Question Answering(Reading Comprehension, in particular)\n2. Discuss available datasets\n3. Baseline Approach to solving the problem using NLP techniques\n4. Walk through the pipeline of deploying Deep Learning models (i.e. preprocessing dataset, generating  word embeddings, building an encoder-decoder model using LSTMs, attention networks and evaluating it) ", "Pre-requisites: Python, Basics of Neural Networks and NLP, Keras   "], "date": ["Friday 27 July"], "tags": ["Scientific Libraries (Numpy/Pandas/SciKit/...)", "Data Science", "Deep Learning", "Jupyter/iPython", "Natural Language Processing"]},
{"title": ["Change music in two epochs"], "author": ["Marcel Raas"], "description": ["This talk is about applying deep learning to music. We will look at the raw music data and discover the following:", "Instead of applying it to existing music we will generate our own music using some simple musical rules. The benefit of this is that we are in control of the complexity and we know exactly what is being played. We start out simple and then start adding more instruments, different timbres, etc. As we go up in complexity, we shall see how to adapt our models to be able to deal with it. This gives interesting insights in what structures in deep nets work well.", "I will show:", "For more info, see the github repository at https://github.com/marcelraas/music-generator"], "date": ["Friday 27 July"], "tags": ["Deep Learning", "Algorithms", "Machine-Learning", "Scientific Libraries (Numpy/Pandas/SciKit/...)"]},
{"title": ["Building new NLP solutions with spaCy and Prodigy"], "author": ["Matthew Honnibal"], "description": ["Commercial machine learning projects are currently like start-ups: many projects fail, but some are extremely successful, justifying the total investment. While some people will tell you to \u201cembrace failure\u201d, I say failure sucks \u2014 so what can we do to fight it? In this talk, I will discuss how to address some of the most likely causes of failure for new Natural Language Processing (NLP) projects. My main recommendation is to take an iterative approach: don\u2019t assume you know what your pipeline should look like, let alone your annotation schemes or model architectures. I will also discuss a few tips for figuring out what\u2019s likely to work, along with a few common mistakes. To keep the advice well-grounded, I will refer specifically to our open-source library spaCy, and our commercial annotation tool Prodigy."], "date": ["Thursday 26 July"], "tags": ["Deep Learning", "Data Science", "Natural Language Processing"]},
{"title": ["Bytecodes and stacks: A look at CPython\u2019s compiler and its execution model"], "author": ["Petr Viktorin"], "description": ["So, you wrote some Python code. What needs to happen before it starts running? And once it\u2019s running, how does Python keep track of what it\u2019s doing?", "I\u2019ll talk about CPython\u2019s tokenization, parsing, bytecode and its serialization and cache, the stack-based virtual machine, line number tables, and code, frame and function objects.", "Don\u2019t worry if you\u2019ve never heard of these concepts. While even experts should learn something new, the talk is aimed at anyone who\u2019s worked on a Python project or two."], "date": ["Friday 27 July"], "tags": ["Compiler and Interpreters", "CPython"]},
{"title": ["Automating testing and deployment with Github and Travis"], "author": ["Alex Gr\u00f6nholm"], "description": ["Maintaining an open source project can be a drag. Especially when you have dozens of them. Besides being tedious , making a new release can be a very error prone process. Maybe you forgot to run the full test suite, forgot to update the release version or tag the release on VCS or maybe you bungled up the upload to PyPI. Fortunately there are things you can do to eliminate entire categories of human errors in the release process \u2013 by automating them.", "This talk uses a trivial project as an example to present a release pipeline, from packaging and testing to deployment, that only requires you to push a git tag to your Github repository. Automation then takes care of the rest and you end up with a new release on PyPI (yay!).", "This talk is mostly useful for open source developers using Github to house their projects, as it heavily leans on Travis, its continuous integration provider . You also need to be at least somewhat familiar with Python packaging and testing in order to follow along. Familiarity with common tools like pytest and tox helps but is not strictly required."], "date": ["Friday 27 July"], "tags": ["Best Practice", "Packaging", "Deployment/Continuous Integration and Delivery", "Tooling"]},
{"title": ["Asyncio in Python 3.7 and 3.8."], "author": ["Yury Selivanov"], "description": ["The talk is aimed to give attendees a clear picture of new asyncio features in Python 3.7 and give an idea of what to expect in Python 3.8.  As a CPython core developer and the lead asyncio maintainer I believe I have a unique perspective to share with EuroPython guests.", "Python 3.7 boasts a number of new amazing features: ", "The first part of the talk will be focusing on new APIs to explain them and give ideas how they can be used in production.", "The second part of the talk will be focused on what to expect to see in asyncio in Python 3.8:", "Some of these ideas are borrowed from Trio and Curio (two other popular async/await Python frameworks), many are borrowed from languages like Erlang and Scala. One thing I can say for certain is that 3.8 will be the biggest and most interesting asyncio release ever!"], "date": ["Wednesday 25 July"], "tags": ["Best Practice", "Distributed Systems", "ASYNC / Concurreny", "failures/mistakes", "Use Case"]},
{"title": ["Bad hotel again? Find your perfect match!"], "author": ["Elisabetta Bergamini"], "description": ["For most travellers, online reviews play a major role when it comes to choosing which hotel to stay in. But can we actually trust a hotel review? And if yes, how can we select which are the most meaningful and interesting for us among the billions available in platforms such as Booking.com, Tripadvisor, Facebook (just to mention a few)?\nFor 10 years now, at TrustYou we have built processes that analyze terabytes of hotel reviews at a global scale, and strive to understand what people complain about or like in the hotels worldwide.\nDealing with a huge amount of reviews written in tens of different languages - each having its own subtle shades of meanings - is the challenge we work on everyday. In this talk, we will show what goes on behind the scenes of the TrustYou Metareview and dive into the technologies and the algorithms that allow us to provide travellers with all the information they need to find the perfect hotel. "], "date": ["Wednesday 25 July"], "tags": ["Data Science", "Machine-Learning", "Natural Language Processing"]},
{"title": ["Asyncio in production"], "author": ["Hrafn Eiriksson"], "description": ["Much has been written about asynchronous programming in Python, especially after the introduction of asyncio into the standard library of the language. We\u2019ve all seen the benchmarks that tell us how asyncio-powered web servers massively outperform their non-asyncio counterparts for trivial routes and we\u2019ve seen the articles that tell us how to make the move from flask to aiohttp and why we should. ", "Despite all of this, the question remains: How is it to use asyncio in a production setting? What are the pain points of migrating a large application to use asyncio? How does the performance of this real-world application differ after the migration? Is it still just unicorns and fairy tales? The goal of this talk is to address these questions. ", "If you are curious about taking the step from asyncio-dabbling to creating actual mission critical software systems in asyncio; this is the talk for you!"], "date": ["Wednesday 25 July"], "tags": ["Python 3", "ASYNC / Concurreny"]},
{"title": ["Bridging the Gap: from Data Science to Production"], "author": ["Florian Wilhelm"], "description": ["A recent but quite common observation in industry is that although there is an overall high adoption of data science, many companies struggle to get it into production. Huge teams of well-payed data scientists often present one fancy model after the other to their managers but their proof of concepts never manifest into something business relevant. The frustration grows on both sides, managers and data scientists.", "In my talk I elaborate on the many reasons why data science to production is such a hard nut to crack. I start with a taxonomy of data use cases in order to easier assess technical requirements. Based thereon, my focus lies on overcoming the two-language-problem which is Python/R loved by data scientists vs. the enterprise-established Java/Scala. From my project experiences I present three different solutions, namely 1) migrating to a single language, 2) reimplementation and 3) usage of a framework. The advantages and disadvantages of each approach is presented and general advices based on the introduced taxonomy is given. ", "Additionally, my talk also addresses organisational as well as problems in quality assurance and deployment. Best practices and further references are presented on a high-level in order to cover all facets of data science to production.", "With my talk I hope to convey the message that breakdowns on the road from data science to production are rather the rule than the exception, so you are not alone. At the end of my talk, you will have a better understanding of why your team and you are struggling and what to do about it.    "], "date": ["Wednesday 25 July"], "tags": ["Best Practice", "Data Science", "Clean Code", "DevOps general", "Business"]},
{"title": ["Building a Naive Bayes Text Classifier with scikit-learn"], "author": ["Obiamaka Agbaneje"], "description": ["Machine learning algorithms used in the classification of text are Support Vector Machines, k Nearest Neighbors but the most popular algorithm to implement is Naive Bayes because of its simplicity based on Bayes Theorem.", "The Naive Bayes classifier is able to memorise the relationships between the training attributes and the outcome and predicts by multiplying the conditional probabilities of the attributes with the assumption that they are independent of the outcome.  It is popularly used in classifying data sets that have a large number of features that are sparse or nearly independent such as text documents.", "In this talk, I will describe how to build a model using the Naive Bayes algorithm with the scikit-learn library using the spam/ham youtube comment dataset from the UCI repository.  Preprocessing techniques such as Text normalisation and Feature extraction will be also be discussed."], "date": ["Thursday 26 July"], "tags": ["Scientific Libraries (Numpy/Pandas/SciKit/...)", "Data", "Natural Language Processing"]},
{"title": ["Autism in development"], "author": ["Ed Singleton"], "description": ["Autism is a condition that correlates with engineering.  Many people in the industry are diagnosed autistic, undiagnosed autistic, or near autistic.  There are many lessons that can be learned from how to deal with autistic people that are very useful in our industry.  These lessons are often also useful when dealing with non-autistic people.  There are many lessons on how to deal with your own autism that are useful to undiagnosed autistic people and near autistic people.", "We will cover the basics of autism, and related conditions.  We will cover simple tricks that can make discussions and changes easier in workplaces (\"10 Simple tricks to make your autistic colleagues shout less!\").  We will also cover techniques you can use for dealing with your own autistic tendencies (\"100 coping mechanisms to pretend that you are normal!\").", "I am a late diagnosis autistic person myself, and will discuss the difference between knowing and not knowing that you are autistic.  "], "date": ["Wednesday 25 July"], "tags": ["The Answer to Life the Universe and Everything Else", "Diversity", "workforce", "Community"]},
{"title": ["The pytest/tox/devpi help desk"], "author": ["Oliver Bestwalter"], "description": ["We\u2019ll try to help everyone with their questions around pytest, tox and devpi and how they work together to test and release your packages.", "If you have concrete questions or just want to learn more about these tools, come around and have a chat with us.", "Potential topics and questions are:"], "date": ["Wednesday 25 July"], "tags": ["Best Practice", "Packaging", "Testing"]},
{"title": ["OpenStack Help Desk"], "author": ["Daniel Abad"], "description": ["Come and chat with us about OpenStack! The free and open-source software platform for cloud computing. Get the advantages of infrastructure-as-a-service without the vendor lockin.", "We can answer questions about OpenStack, help you with specific problems or help you get started with contributing to an OpenStack project. Your helpers will be OpenStack developers with years of experience using and developing on a number ofdifferent OpenStack projects.", "We will  have a OpenStack deployment that we can use to demonstrate some of the possibilities."], "date": ["Friday 27 July"], "tags": ["OpenStack"]},
{"title": ["Help desk: choosing (or not) the right NoSQL database"], "author": ["Alexys Jacob"], "description": ["During this ", "help desk", ", some Numberly\u2019s folks will make their ", "field expertise", " available to ", "help you decide on the right database", " for your project.", "The NoSQL databases ecosystem evolved a lot over the last decade and it may be hard to keep up with all their strengths and design patterns. So let\u2019s take this occasion to discuss about them!", "If you are ", "starting up a new project or facing problems and limitations with your current implementation", ", we will try our best to help you choose (or not) the right NoSQL database."], "date": ["Wednesday 25 July"], "tags": ["System Architecture", "Infrastructure", "NoSQL", "Distributed Systems", "Databases"]},
{"title": ["Extending Python with C/C++"], "author": ["Paul Ross"], "description": ["If you want your Python code to run really fast you can get dramatic performance improvements if you are willing to write some of your code in C/C++. There are several ways to do this from traditional Python C extensions to using environments such as Cython or Pybind11. This help desk is here so you can choose the best approach to achieve that magical 100x performance increase without pain."], "date": ["Friday 27 July"], "tags": ["Cython", "Open-Source", "CPython", "Performance"]},
{"title": ["Basic Data Science tools"], "author": ["Sarah Diot-Girard"], "description": ["The aim of this session is to help data scientists with little experience in Python : ", "Set their environment development: install Python, Jupyter, set Virtualenv , install scientific libraries: Pandas, Numpy, Scipy.. ", "Get started with Jupyter, Pandas  ", "Solve practical issues with Pandas and other scientific libraries  ", "Get started with Matplotlib and other dataviz tools "], "date": ["Thursday 26 July"], "tags": ["Visualization", "Data Science", "Jupyter/iPython Notebook", "Scientific Libraries (Numpy/Pandas/SciKit/...)"]},
{"title": ["What do a model boat and a giant laser have in common?"], "author": ["Thomas Kluyver"], "description": ["Last year, I was part of a team building a small autonomous sailing boat. This year, I started working at European XFEL, a research facility built around a 3km long X-ray laser. Both projects use Python in their control systems, and despite the vastly different size and budget, they have surprisingly similar architectures, with separate processes sending data to each other using sockets.", "We wrote the code for our sailing boat using an open source framework called the Robot Operating System, or ROS. ROS is built around the concept of communicating nodes: a node can publish messages on a named topic, and any other nodes subscribed to that topic will receive the message. Our boat runs about 15 nodes (the precise number depends on what task it\u2019s doing). This isn\u2019t the only way to drive a robot boat: the team from Aberystwyth, whose code is also open, use a very different architecture.", "European XFEL, in Hamburg, is a new \u20ac1.2 billion collaboration between 12 countries. The control and data analysis systems are built on a framework called Karabo, developed in-house. Karabo \u2018devices\u2019 - which can encapsulate hardware interfaces or software processing - communicate using both a central message broker and point-to-point channels.", "I\u2019ll describe each of these projects, and the similarities and differences between their software systems. Then I\u2019ll talk about what has been good and bad on each project, and what patterns and ideas we can take from them for designing other systems, including systems that don\u2019t control hardware."], "date": ["Friday 27 July"], "tags": ["Science", "Engineering", "Robotics", "Architecture", "Case Study"]},
{"title": ["Python Game Console"], "author": ["Radomir Dopieralski"], "description": ["Learning to make video games is a great way to learn about computers. They are not only very motivating and rewarding, but also teach a very difficult kind of programming \u2014 real-time, interactive applications. In the process you also learn about graphics, sound, graphs, artificial intelligence, data structures and algorithms, not because someone tries to teach you, but simply because you actually need all this to make your game. Knowledge gained this way has its own unique quality.\nUnfortunately, while Python is an excellent language for learning, it doesn\u2019t make it easy to make games. The number of hoops you have to jump through for installing and configuring everything on every single computer on which you want to run your game makes it really hard to start, and even harder to show your creations to your friends.\nTo make things easier, I have built a number of devices dedicated to game development, which remove as many of the obstacles as possible to let you simply start on making your game, without distractions."], "date": ["Thursday 26 July"], "tags": ["Gadgets", "Teaching", "Education", "Game-Development", "MicroPython"]},
{"title": ["Python and Raspberry Pi"], "author": ["Ben Nuttall"], "description": ["Explore physical computing and more using Python on Raspberry Pi", "The Raspberry Pi is a small affordable computer which runs a Debian-based operating system called Raspbian. It has been designed for the purpose of education, and it is also used by hobbyists and in industry across the globe.", "The Raspberry Pi Foundation is a charity that works to put the power of digital making into the hands of people all over the world by making computing accessible to all. More than 15 million Raspberry Pi computers have been sold since the first product launch in 2012, and all sales profits go towards the Foundation\u2019s educational programmes, courses, and resources.", "The poster covers:"], "date": ["Friday 27 July"], "tags": ["Internet of Things (IoT)", "Other Hardware", "Raspberry PI", "Education", "Open-Source"]},
{"title": ["Plone and modern frontend frameworks"], "author": ["Paul Roeland"], "description": ["Plone has a long track record in being the premier Python-based web CMS. Yet, recent years have seen an acceleration in frontend technologies. With a stable restful API, it is now possible to use your favorite frameworks like React or Angular to create modern and bespoke frontends and apps, while still using all of  the  stability, security and workflow that a mature product such as Plone provides.  ", "Cake. Have. Eat. ", "The poster will highlight the state-of-the-art, used-in-production methods, widget libraries and updated UI/UX."], "date": ["Thursday 26 July"], "tags": ["CMS", "JavaScript", "RESTful", "Plone", "Open-Source"]},
{"title": ["Making neural networks portable with ONNX"], "author": ["Micha\u0142 Karzy\u0144ski"], "description": ["The world of deep learning frameworks is complex. It seems that every major company has their own product in this space. Some have great features, others have great performance, so its very difficult to choose the right one. But what if you didn\u2019t have to limit your choice to just one? What if you could use the most developer-friendly framework for designing a neural network, the most efficient framework for training and finally the lightest one for inference on edge devices? That\u2019s the idea people at Facebook, Microsoft and Amazon were thinking about when they created the ONNX format.", "Open Neural Network Exchange (ONNX) is a binary file format, based on Protocol Buffers, designed to store representations of neural networks. Networks are stored as computational graphs and the format supports saving both the network architecture and trained weighs.", "ONNX is an open standard and it\u2019s gaining broad community support. Tools already exist for importing and exporting models from frameworks such as Caffe2, PyTorch, Microsoft Cognitive Toolkit (CNTK), Apache MXNet, Chainer, TensorFlow, SciKit-Learn. ONNX support will be built directly into Windows and Apple\u2019s CoreML. Runtimes exist for other environments such as servers and neural network accelerators (Intel\u2019s nGraph), GPUs (NVIDIA\u2019s TensorRT) and more. Other tools such as Netron and Visual DL allow you to visualize and inspect your ONNX models.", "My poster will describe the capabilities of ONNX and demonstrate them through code samples and screenshots. We\u2019ll also cover ONNX\u2019s current limitations and areas of future development."], "date": ["Friday 27 July"], "tags": ["Deep Learning", "Data Science", "Open-Source", "Machine-Learning"]},
{"title": ["introduce Python community/conf, and cross region community in Asia."], "author": ["Noah Chen"], "description": ["PSF(Python Software Foundation)  help most people who want to learn Python, and we also join so many meetup/event/conference organized by PSF or related to PSF. in Europe, thanks EuroPython Society doing a lot of jobs in handle or manage so many different region. \nPython is also very popular in Asia. me , Noah who is from Taipei, learn Python and join Taipei.py and PyConTW since 2014. I received the passion from member of Python Community in Taipei, not only in Taiwan, we also have 9 python communities in different cities around Taiwan, included KaoHsung, TaiChung, Tainan, HwaLien, TaoYoung, and we also have 2 female community which called: PyLadies Taipei, and DjangoGirls Taipei. \nin Taipei, we already have so many open source event or conference , what different to Python Community or PyConTW? the reason I want to join and contribute Python is : I can connect the world through Python. PyConTW is found by yyc(Yung-Yu Chen) since 2012. at 2012, PyConTW always invite famous people in Python to present in PyConTW, and also, outstanding speakers always bring their outstanding python friends. PyConTW is the first and most foreigner audiences or speakers international Open Source Conference I joined. this is way I can connect the world, face to face. \nnot only PyConTW, I also try to connect PyCon around Asia, like PyCon Japan, and Korea, I am be a volunteer since 2016, and going on. being a volunteer of PyConMY APAC and PyConID in 2017. this is the contact and connect the world we want to share in Python, and want to contribute in Python in Asia.\nnow , I join FOSSASIA, being a volunteer of FOSSASIA, I can help to promote my experience of Python and FOSS to people in Taipei. and now, I want to share my Asia experience to python friends in Europe."], "date": ["Friday 27 July"], "tags": ["Python Software Foundation (PSF)", "Communication", "Conferences and Meet-Ups", "Diversity", "Community"]},
{"title": ["Human Mobility Patterns"], "author": ["Antonia Tugores"], "description": ["Research on mobility has traditionally relied on surveys and datasets generally composed of small samples with a low spatio-temporal resolution. However, the situation is now changing with digital data sources. We use geolocated data from different contexts to analyse human mobility at different levels and predict people fluxes between cities.", "Studies can be done at different levels ranging from intracity to intercontinental trips. Do tourists and residents behave in the same way when in the same city? Are we prone to visit some cities if we have visited another one? What about train and private transport networks, do people from different countries show different patterns? Can we predict people fluxes between cities?", "Being one of the main programming languages when talking about data analysis and data science,  Python and its data analysis ecosystem have been the barebones of this research."], "date": ["Thursday 26 July"], "tags": ["Science", "Physics", "Predictions", "Data", "Analytics"]},
{"title": ["Hardening Plaintext Secrets in Configuration Files"], "author": ["Mois\u00e9s Guimar\u00e3es"], "description": ["Many applications and services rely on configuration data in order to behave according to the customer needs. The standard library gives us ConfigParser, and many projects use it to achieve easy configuration with plaintext config files.", "OpenStack Common Libraries (Oslo) has an enhanced alternative called oslo.config with support to command line arguments, option deprecation, and much more. With the addition of the source drivers feature, it is possible to increase the security of config values storing them in a safer place.", "The source drivers feature allows extra sources of configuration data other than plaintext config files adding the possibility to have other layers of security around the configuration values and increasing the fail-safe options."], "date": ["Thursday 26 July"], "tags": ["Development", "Best Practice", "Security", "Open-Source", "Command-Line"]},
{"title": ["Fifty Shades of Disaster - Human Error and Complex Systems"], "author": ["Paul Ross"], "description": ["This four part tutorial describes the failures that can happen when humans interact with complex systems. Complete with case studies, this gives valuable lessons for developers, project managers and DevOps engineers. Learn from the mistakes of others as you won\u2019t live long enough to make them all yourself and this talk gives you that opportunity!", "Part 1: Complexity, Coupling and Systems Failures\nA gentle introduction to \u201cmodern accident theory\u201d. We examine the essential characteristics of complex systems and the operators who control them. A life hack is here along with two case studies of software disasters.", "Part 2/4: A Concise History of Civil Aviation\nCivil aviation has moved from very risky to extraordinarily safe. How this was done has valuable lessons for other industries. We looks at the challenges faced by civil aviation, how they were overcome and what we could learn from this.", "Part 3/4: Blame and the Fallacy of Root Cause Analysis\nSo disaster has finally happened, now, how do you go about preventing futures disasters? The obvious ways are wrong. So how do you investigate failure and how do you apply those lessons?", "Part 4/4: Skill, Luck and Sheer Professionalism\nSometimes the human element, the operators, are not hapless perpetrators complicit in the disaster but actively prevent catastrophe. This talk is full of case studies where this happened. An analysis of these case studies will help you to improve your own resilience."], "date": ["Wednesday 25 July"], "tags": ["Operations", "Case Study", "Best Practice", "DevOps general", "failures/mistakes"]},
{"title": ["Discovering the nuclear reactor\u2019s stability with SLEPc and Python"], "author": ["Javier Jorge"], "description": ["Different engineering models such as physic simulations or information retrieval rely on modelling and solving large-scale sparse eigenvalue problems, such as fluid simulation or document retrieval. SLEPc (http://slepc.upv.es) is a software library for the solution of this kind of algebraic problems on distributed computers. We can use this with Python through slepc4py to provide solutions to these computationally expensive problems, using parallelization with different schemes.", "In this poster we introduce slepc4py (https://bitbucket.org/slepc/slepc4py), a python wrapper for SLEPc, along with the problem of determining the nuclear reactor\u2019s stability, a problem that is modeled as obtaining the eigenvalues of certain matrices that are large and sparse. We introduce the techniques that are implemented in SLEPc for solving a problem with these characteristics."], "date": ["Friday 27 July"], "tags": ["Scientific Libraries (Numpy/Pandas/SciKit/...)", "Case Study", "Data", "C-Languages", "Science"]},
{"title": ["Create your own Artificial Intelligence to monitor your Linux System!"], "author": ["Maha Mdini"], "description": ["The object of this session is to explain how one may apply simple statistical calculations and Machine Learning techniques to monitor one\u2019s Linux system. Systems, running services and installed applications generate a large amount of logs. One may create also customized logs for a particular purpose. ", "These logs may be processed in real time or in demand by the means of smart Python scripts for varied purposes:", "1- Optimizing the performance of the system by monitoring the systems logs  (e.g. boot logs) and modeling metrics such as CPU/memory usage, monitoring the performance of services such as HTTP,  MySQL\u2026", "2- Securing the system from external threats by monitoring browsing, ports, login logs \u2026, as well as from internal crashes by monitoring kernel logs", "3- Modeling one\u2019s daily behavior by measuring the frequency/correlations of the usage of applications/services \u2026  "], "date": ["Thursday 26 July"], "tags": ["Scientific Libraries (Numpy/Pandas/SciKit/...)", "Data Science", "Open-Source", "Linux"]},
{"title": ["Double the money you give PSF, etc., without paying more!"], "author": ["Steve Barnes"], "description": ["Many organisations, especially the larger ones, have \u201cmatching gifts\u201d programs.", "If you work for such an organisation you can potentially double or more the value of any gifts that you give to the EuroPython Society, (EPS), & Python Software Foundation, (PSF), and others.", "No coding experience is needed just a varying amount of persistence & patience."], "date": ["Wednesday 25 July"], "tags": ["Python Software Foundation (PSF)", "EPS", "The Answer to Life the Universe and Everything Else"]},
{"title": ["Cloud-Agnostic Deployment of Distributed TensorFlow"], "author": ["Javier Jorge"], "description": ["In this poster we will see how to deploy the required infrastructure to create a TensorFlow cluster, and then provision the software to train the model. For doing this, we will use the Infrastructure Manager (http://www.grycap.upv.es/im/index.php) that supports API\u2019s from different virtual platforms, making user applications Cloud-agnostic. In addition, it integrates a contextualization system, based on Ansible, to enable the installation and configuration of all the required applications providing a fully functional Deep Learning infrastructure on the Cloud provider that we need.", "Outline: "], "date": ["Thursday 26 July"], "tags": ["Science", "Deep Learning", "Scientific Libraries (Numpy/Pandas/SciKit/...)", "Machine-Learning", "Case Study"]},
{"title": ["Best practices for elegant experimentation in data science projects (case study)"], "author": ["K K"], "description": ["In the course of the project, data scientists face multiple issues. Difficulties with reproducibility, lack of the ability to prepare experiments quickly and dirty data are just three examples. Data science projects involve a lot of experimentation and quick adoption of new ideas and technologies. Such environment makes it difficult to keep the code clean as well as keep track of small changes that makes new experiment successful.", "Here, we use an instance segmentation challenge - called Mapping Challenge - hosted on the crowdAI platform to show: 1) our best practices when working in data science projects, 2) competition results. Our best practices involve usage of the steppy library, which provides minimal interface for building machine learning pipelines. Besides this, we organized our work in a transparent and open way, publishing code, tasks and experiments results.", "On the poster, we share our results regarding pre- and post-processing routines, network architectures and training scheme. We also present technology stack that we use. It is a blend of well established Python packages (like numpy and sklearn) and our own open source initiatives, that is steppy and steppy-toolkit.", "Poster is for Pythonists looking for: 1) example solution to the instance segmentation task, 2) ideas how to organize data science project."], "date": ["Friday 27 July"], "tags": ["Best Practice", "Data Science", "Clean Code", "Open-Source", "Machine-Learning"]},
{"title": ["Asynchronous operations at scale"], "author": ["Hubert Bry\u0142kowski"], "description": ["This talk will cover main purpose, differences, advantages and shortcoming of synchronous and asynchronous operations. Using real life  infrastructure as an example, Hubert will demonstrate how actions like adding a new content can be processed in a non-blocking way. Such approach is more taxing on development time but can be highly beneficial if your application has to sustain high access rate and respond swiftly.\nBy attending the talk you will learn how we build application that support >100M monthly users, what problem arise in such high pace environments and what trade off application developer has to make."], "date": ["Wednesday 25 July"], "tags": ["Performance", "Microservices", "ASYNC / Concurreny", "Architecture", "Multi-Processing"]},
{"title": ["Writing and Running Tests in Docker"], "author": ["Alexandre Figura"], "description": ["\u201cHow to Launch your Tests with Docker Compose: Best Practices and Traps to Avoid\": that would make a great title for a book! Unfortunately, there is no such book available currently. In the meantime, we are all struggling on how to make our applications running in Docker\u2026 Because there is so many ways to do it, it\u2019s often hard to find out what is the best way to do it.", "But with some practice, and many trials/errors, some patterns take shape. That\u2019s what we will see during this training session. We will start by writing some tests for a web application with Pytest. Then, we will automate them with Tox. And to finish, we will run them in Docker Compose. Our development workflow will be managed with Invoke, and our goal will be to have tests independent of the running environment, so they can be run both locally or on a continuous integration server (e.g., GitLab with Kubernetes runners).", "Requirements:"], "date": ["Tuesday 24 July", "Tuesday 24 July"], "tags": ["Best Practice", "Docker", "Deployment/Continuous Integration and Delivery", "Test Libraries (pyTest/node/...)", "Tooling"]},
{"title": ["Ridiculously Advanced Python"], "author": ["Francesco Pierfederici"], "description": ["If you have been using Python for some time already and want to reach new heights in your language mastery, this training session is for you!", "Python has a number of features which are extremely powerful but, for some reason are not particularly well known in the community. This makes progressing in our Python knowledge quite hard after we reach an intermediate level. Fear not: this session has you covered!", "We will look at some advanced features of the Python language including properties,  class decorators, the descriptor protocol, annotations, data classes and meta-classes. If time allows we will even delve into the abstract syntax tree (AST) itself. ", "We will use Python 3.7 and strongly recommend that attendees install a reasonably recent version of Python 3 to make the most out of the training.", "Warning: some of the topics presented will almost certainly assure an early end to an otherwise successful career in software engineering :-)", "Source code available on GitHub: https://github.com/pythoninside/europython2018"], "date": ["Monday 23 July", "Monday 23 July", "Monday 23 July"], "tags": ["Software Design", "Type-Hinting", "Meta Classes", "Programming", "Python 3"]},
{"title": ["Real-time transcription and sentiment analysis of audio streams"], "author": ["Aaron Bassett"], "description": ["In this training session, we\u2019re going to learn how to create a virtual rapporteur. A digital assistant who can join any conference call; record it and provide participants with real-time insights into the overall tone of the call. Once the call is complete, we\u2019ll look at how we can use the call recording to provide participants with a text transcript as well as meta information about the call such as the most talked about concepts, keywords and entities.", "Attendees", ": you should be familiar with Python and the command line.  You will also need to sign-up for a free ", "Nexmo", " and ", "IBM Watson", " account to access their APIs.", "We\u2019ll be coding the application in Python and JavaScript, with the ", "Hug", ", ", "Tornado", " frameworks; so a knowledge of both languages would be beneficial but is not required. We will be making heavy use of several APIs, so experience with REST and WebSockets will help."], "date": ["Monday 23 July", "Monday 23 July"], "tags": ["Visualization", "JavaScript", "Natural Language Processing", "Machine-Learning", "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)"]},
{"title": ["Technologies to master Parallelism in Python"], "author": ["Shailen Sobhee"], "description": ["Parallelism in Python has been a mysterious pinnacle of language mastery for many years, and with a few advancements in the community it has become even easier to do so.  From easy imported threadpool controls, to advanced multiprocessing affinity and pinning techniques, the options to achieve parallelism are now quite within reach.  In this workshop, learn how to use these frameworks to augment one\u2019s Python code to enable granular control over parallelism workloads and combat oversubscription.", "Slides: https://www.scribd.com/document/384826546/EuroPython-2018-Shailen-Sobhee"], "date": ["Tuesday 24 July", "Tuesday 24 July"], "tags": ["Performance", "Multi-Threading", "Scientific Libraries (Numpy/Pandas/SciKit/...)", "Multi-Processing"]},
{"title": ["Introduction to Pandas, Testing and Test-Driven Data Analysis"], "author": ["Nick Radcliffe"], "description": ["This is replacement training for Sandrine\u2019s Intro to Pandas and SciKit Learn, which she sadly won\u2019t be able to present because she has recently broken her nose!", "This training will introduce Pandas (and Numpy) for people who either haven\u2019t used them at all or are just getting started with them. It will then go on to introduce testing in Python (in general), with unittest, and testing analytical code, in particular, with the test-driven data analysis package.", "Planned content:", "Pandas and Numpy:\n  - what they are\n  - why you should used them\n  - how to use them\n  - basic numpy concepts (arrays, dtypes, array operations, zeros, ones, creating new arrays, where, choose, sum, size etc.)\n  - pandas basics: DataFrames, creating DataFrames, loading data, indices\n  - creating new columns, appending DataFrames, merging DataFrames, groupby operations, plotting.\n  - loading and saving data (pickle; csv, feather)", "Testing\n  - the idea of testing and test-driven development\n  - the unittest library basics: unittest.TestCase, unittest.main, verbosity, self.assertEqual and friends.\n  - slightly advanced unittest basics: setUp, tearDown, setUpClass, tearDownClass\n  - unit tests vs. integration and system tests\n  - pytest as an alternative to unittest", "Test-Driven Data Analysis:\n  - making the case for testing analytical processes\n  - extending the ideas from software testing to reference tests for analytical processes with ReferenceTestCase from the TDDA library\n  - Using constraints to test data (input; output; intermediates).\n       - Automatically generating constraints from known good data\n       - Verifying data against generated (or hand-created) constraints \n       - Detecting bad data (and anomalies)", "PREPARATION:", "As a bare minumum, you will need a working Python (preferably 3.6 or 3.7, though 2.7 could be used) with numpy and pandas installed, preferably with JupyterLab. Anaconda is a great way to get all this.", "Ideally, you should also have installed the TDDA library, the feather library and the pmmif library in case the network is overloaded during training.", "All dependencies are available from Github:"], "date": ["Monday 23 July", "Monday 23 July"], "tags": ["Test Driven Development (TDD)", "Data Science", "Testing", "Scientific Libraries (Numpy/Pandas/SciKit/...)"]},
{"title": ["Introduction to Big Data Processing using Spark and Python"], "author": ["Raoul-Gabriel Urma"], "description": ["This workshop will provide a hands-on introduction to the Big Data ecosystem, Hadoop and Apache Spark in practice. Through practical activities in Python, you will learn how to apply Apache Spark on a range of datasets to process and analyse data at scale. ", "After taking this workshop you will be able to: ", "SETUP\nDownload / Clone the repository: http://gitlab.cambridgespark.com/pub/bigdata-spark", "Follow the instructions in the SETUP.md file: http://gitlab.cambridgespark.com/pub/bigdata-spark/blob/master/SETUP.md"], "date": ["Monday 23 July", "Monday 23 July"], "tags": ["Data Science", "Big Data", "Jupyter/iPython"]},
{"title": ["Get your documentation right"], "author": ["Daniele Procida"], "description": ["This workshop introduces, and helps you implement, an approach that ", "will", " improve your project\u2019s documentation.", "This approach focuses on documentation ", "structure", ". Based on sound, well-established principles concerning a number of topics (including learning, understanding, praxis, pedagogy amongst others) it provides a documentation framework that is easy to understand, straightforward to put into practice, and above all, immediately and enduringly effective.", "In the workshop we\u2019ll use a hypothetical documentation set for examples, but attendees should have some actual documentation - whether already extant or in the planning phase - to apply it.", "The principles used in this workshop are outlined at https://www.divio.com/en/blog/documentation/. This work has been presented in numerous conference talks, such as https://www.youtube.com/watch?v=t4vKPhjcMZg.", "It has been applied successfully to many software projects, making the documentation better for users, and more manageable for its maintainers."], "date": ["Tuesday 24 July", "Tuesday 24 July"], "tags": ["Documentation"]},
{"title": ["Fast native code with Cython"], "author": ["Stefan Behnel"], "description": ["Cython", " is not only an excellent and widely used tool to speed up computational Python code, it\u2019s also a very comfortable way to talk to native code and libraries. The Cython compiler translates Python code to C or C++ code, and supports static type annotations to allow direct use of C/C++ data types and functions. The tight integration of all three languages makes it possible to freely mix Python features like generators and comprehensions with C/C++ features like native data types, pointer arithmetic or manually tuned memory management in the same code.", "This tutorial by a core developer introduces the Cython compiler by interactive code examples, and shows how you can make it generate fast binary modules that talk to native libraries, as easily as Python itself.", "Attendees should make sure they have a C compiler installed and configured to build binary Packages for CPython. We will use CPython 3.6/7, although all examples can also be followed with CPython 2.7. If you\u2019re not on Linux, I recomment using a ", "conda", " environment with gcc.", "Update 2018-07-23", ": Please set up a virtualenv or conda-env with the following tools:"], "date": ["Tuesday 24 July", "Tuesday 24 July"], "tags": ["Cython", "Compiler and Interpreters", "C-Languages", "Performance"]},
{"title": ["Building your own sports trading bot"], "author": ["Tomasz Dziopa"], "description": ["In this workshop participants will get a glimpse into the world of automated sports trading. The workshop will start out with an introduction into the realm of betting exchanges, trading bots and the strategies that can be employed to successfully trade sports. After the introduction we will move into a more \u201chands on\u201d session where everyone will get API access to the Smarkets betting exchange and a skeleton of a trading bot which can then be extended with the ultimate goal of creating your first sports trading bot!", "The requirements for this workshop will be basic knowledge of Python and RESTful APIs. Basic knowledge of statistics would also be helpful but is not essential. Last but not least: Do bring your laptops!"], "date": ["Tuesday 24 July", "Tuesday 24 July"], "tags": ["python", "Trading", "APIs"]},
{"title": ["Privacy for Data Scientists"], "author": ["Andreas Dewes"], "description": ["As data and information security become core components of managing user data, data scientists are keen to expand their knowledge and skills relating to data privacy and security basics. As of May 2018, the European General Data Protection Regulation affects how European residents can access and grant consent to use their data. As European data scientists, we now have an obligation as well as distinct motivation, to practice data science with attention to data privacy.", "In this workshop, we will introduce some of the basics in terms of defining privacy within the realm of data collection, modeling and machine learning. A focus on practical knowledge and code, we will cover how one can implement some of these algorithms with Python. Students will be presented with these theories along with recent research on privacy-preserving models, so they can leave with a better understanding of how to apply privacy principles to data science in their work and study."], "date": ["Tuesday 24 July", "Tuesday 24 July"], "tags": ["Security", "Data", "Jupyter/iPython", "Machine-Learning", "Privacy"]},
{"title": ["Descriptors and Metaclasses - Understanding Python's More Advanced Features"], "author": ["Mike M\u00fcller"], "description": ["Descriptors and metaclasses are advanced Python features. While it is possible to write Python programs without active knowledge of them, knowing more about them facilitates a deeper understanding of the language. With examples, you will learn how they work and how to write your own descriptors and metaclasses. Furthermore, you will understand when to use and when better not to use them.", "This tutorial is a systematic introduction to descriptors and metaclasses. It covers all relevant information with a focus on practical applications for common tasks.", "In hand-on sessions you will learn how to write your own descriptors that adapt attribute access to your needs. You will experience how metaclasses can help you to get more insight into a code base.", "Use cases provide working code that can serve as a basis for your own solutions. You will gain a deeper understanding of more advanced concepts that can help to write better programs.", "The training is designed for Python 3 (3.6+ preferred). Most of the material will work with Python 2.7, sometimes requiring minor modifications. I will use  a ", "Jupyter Notebook", " in [Jupyterlab] ( https://github.com/jupyterlab/jupyterlab) in the training. I encourage you to try them out. Otherwise any editor, IDE, or interactive Python environment your prefer works. No other 3rd party libraries to install. Please download the ", "course material", ".\nI\u2019ve been delivering these topics over the last years as a part of numerous advanced corporate trainings and open courses as well as trainings at PyCon US, EuroPython, PyCon PL, PyCon DE, and PyCon IE. The material has been continuously refined based on the  feedback from participants."], "date": ["Tuesday 24 July", "Tuesday 24 July"], "tags": ["Best Practice", "Python general", "Programming", "Use Case"]},
{"title": ["Data Wrangling & Visualisation with Pandas & Jupyter"], "author": ["Alexander Hendorf"], "description": ["One of the best tools around for data wrangling and analysis in Python is is Pandas. With Pandas dealing with data-analysis is easy and simple but there are some things you need to get your head around first as Data-Frames and Data-Series. ", "After this tutorial you will be able to work with Pandas and make simple data analytics incl. visualisations. \nPandas is not only useful in data science it\u2019s also a great tool for creating e.g. sales reports or any other data-driven report required in business.\n It\u2019s easy to make fancy analytics while integrating with fellow co-workers used working with Excel.", "Please do come prepared and follow these simple ", " installation instructions", "Pandas features directly accessible, powerful visualisations.", "The workshop will be provided as Jupyter notebook for the attendees to follow along."], "date": ["Tuesday 24 July", "Tuesday 24 July"], "tags": ["Scientific Libraries (Numpy/Pandas/SciKit/...)", "Data Science", "Business", "Analytics"]},
{"title": ["Build, Deploy, Win with Serverless Applications"], "author": ["Kyle Knapp"], "description": ["Serverless applications make it easy for you to run your code without managing servers. Serverless applications can range anywhere from running web applications, to real-time data processing systems, to cron jobs in the cloud. Taking a hands-on approach, this tutorial will teach you how to write and deploy serverless applications in a matter of minutes! No prior experience with serverless applications needed.", "Using AWS Chalice, a Python serverless microframework for AWS, you will be developing serverless applications that run on AWS Lambda, a service run that lets you run code without provisioning or managing servers. In the process of developing these serverless applications, you will learn how to:", "\u2022   Quickly and effectively develop and deploy serverless applications", "\u2022   Utilize best practices in developing serverless applications", "\u2022   Build a wide range of serverless applications by leveraging other AWS services alongside AWS Lambda", "No prior experience in serverless application or AWS is needed, but please make sure your development environment meets the prerequisites of the workshop:", "\u2022   Python 2.7 or 3.6", "\u2022   Virtualenv", "\u2022   AWS credentials", "\u2022   git", "More information on environment setup can be found in the following link: \nhttps://chalice-workshop.readthedocs.io/en/latest/env-setup.html"], "date": ["Monday 23 July", "Monday 23 July"], "tags": ["Public Cloud (AWS/Google/...)", "Web", "Best Practice", "APIs", "Microservices"]},
{"title": ["Best Practices for a Blazing Fast Machine Learning Pipeline"], "author": ["David Liu"], "description": ["Getting through preprocessing to analytics to insights quickly has been the crux of many a Data Scientist.  In this workshop, learn about the best tools, techniques, and frameworks that allow for a fast machine learning pipeline\u2014topics covered will include preprocessing vectorization tricks, distributed dataframe handling, along with tips and tricks to help scale out one\u2019s machine learning code out to cloud or clusters. ", "Workshop Overview:", "-Introduction", "-Tools and Techniques", "-Data preprocessing", "-Break (15 min)", "-Data Visualization", "-Machine Learning", "-Options for scaling and pipelining", "-Break (15 min)", "-Hands-on: Advanced tools", "-Hands-on: Chaining it together", "-Prerequisites are from the two Github repos utilized for the training: (slides in repo)https://github.com/triskadecaepyon/ep_2018_workshop  and https://github.com/IntelPython/workshop"], "date": ["Monday 23 July", "Monday 23 July"], "tags": ["Scientific Libraries (Numpy/Pandas/SciKit/...)", "Data Science", "Machine-Learning"]},
{"title": ["A Python-flavored Introduction to Containers And Kubernetes"], "author": ["Ruben Orduz"], "description": ["NOTE: This workshop is for very beginners. If you already have had experience with containers and/or Kubernetes, you likely not get much out of this training.", "While not required, if you want to follow along, please follow this link below to set your environment up:\n", "requirements", "Containers have more or less taken over the world of application, web APIs, mobile endpoints and other forms of deployment. They have become the currency, the \u201ctable stakes\u201d and de-facto application deployment unit. Their raise to the fore has brought about a whole host of use cases which weren\u2019t practical or accessible in the world of \u201cclassic\u201d paradigms of infrastructure and virtualization. Containers have also brought application deployment closer and more accessible to developers. ", "But as more use cases, deployment styles and exponential adoption of containers was ongoing, a new set of problems began to surface: how do you manage the ever growing number of containers in a deployment? How do you make sure containers have the right resources, deployed to the right machine, running with the correct parameters, how do you scale in and out without disruption? How do you make sure in a fleet of X containers that they\u2019re all running and in healthy state? Enter Kubernetes.", "The goal of this course is to give the attendees a solid foundation of the core concepts mentioned above both in theory and hand-on practice using docker, kubernetes and friends to deploy a sample multi-tier python web application. All attendees need is a laptop with minikube installed and an Internet connection.", "Full course outline and abstract (because character limit) ", "here", ". ", "This training is an up-to-date version of the training delivered at last year\u2019s EuroPython"], "date": ["Monday 23 July", "Monday 23 July"], "tags": ["Docker", "DevOps general"]},
{"title": ["Writing good error messages"], "author": ["Paul Keating"], "description": ["Anyone who has ever conducted an elementary programming course, or even answered a question on StackOverflow, will know that reading error messages is a skill that beginners have to learn. \nIt is less widely appreciated that writing good error messages is also a skill that must be learnt.\nThis talk is in two parts. \nThe first covers the commonest error message gaffes:\n\u2022   Insufficiently explicit messages.\n\u2022   Issuing the same message for two different conditions.\n\u2022   Suppressing the stack trace.\n\u2022   Polluting the stack trace.\nThe second part describes a way to ensure usable, actionable error messages, even when the writer of the message is not a professional coder. This was developed for an environment where superusers code up most of the dozens of data validation rules and the accompanying messages, and the application in which Python is embedded suppresses the stack trace."], "date": ["Friday 27 July"], "tags": ["Python general", "Programming"]},
{"title": ["Winning card games with 1000+ CPUs"], "author": ["vincent warmerdam"], "description": ["Vincent was playing a card game against his girlfriend and he kept loosing. So he wanted to train a bot to play on his behalf. This is our story.", "We\u2019re using AWS Lambda to get better at a card game named SushiGO. We make a small genetic algorithm in Python that uses AWS Lambda as a backend. The talk consists of these parts:", "This talk will discuss an algorithm that we\u2019ve tried to improve in three ways:", "We will conclude by discussing whether or not AWS Lambda is suitable for a gridsearch/grid simulation (hint, it\u2019s not meant for this task, but it actually kind of works very well)."], "date": ["Friday 27 July"], "tags": ["Predictions", "Algorithms", "ASYNC / Concurreny", "Command-Line", "Python 3"]},
{"title": ["Why develop a CLI (Command Line Interface) first?"], "author": ["Steve Barnes"], "description": ["One of the core concepts of Application Development, (not just in python), is the separation between the Business Logic and the User Interface. However there is a strong temptation to start with the user interface and add the business logic to it some methodologies emphasize this with the process of prototyping the (G)UI first. The danger is that your business logic code can get too entangled with the UI and a change of platform or framework becomes almost impossible.", "This presentation will show how to maintain a clear separation between the Business Logic and the User Interface by starting with a command line interface using argparse and growing a GUI on top.", "We will cover:\n - Why maintain the seperation\n - Using argparse\n - Adding a GUI layer with wxPython\n - Automating the GUI generation\n - Adding a web interface\n - Testing advantages of this approach\n - Scripting advantages\n - Some packaging models.", "Slides and Samples all uploaded to https://github.com/GadgetSteve/EP2018_Talk"], "date": ["Thursday 26 July"], "tags": ["Software Design", "Development", "Packaging", "Command-Line", "Cross-Platform-Development"]},
{"title": ["When to use Machine Learning: Tips, Tricks and Warnings"], "author": ["Pascal van Kooten"], "description": ["Artificial Intelligence, and machine learning in particular, is one of the hottest topics in tech/business.\nI will explain the core of machine learning, and the main goal of this talk will be to help you judge the success whenever someone yells \u201cI know! let\u2019s solve this using machine learning!\u201d. I will also provide tips and tricks on how to increase the success of such projects. The second part of the talk will be about 2 open-source python projects I\u2019ve created, as well as a project I\u2019m working on regarding the trading of cryptocurrency\u2026 and their relation to machine learning. Specifically, the challenges and findings in making these cases work will be explored."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Machine-Learning", "Open-Source", "failures/mistakes", "Use Case"]},
{"title": ["What's new in Python 3.7"], "author": ["Stephane Wirtel"], "description": ["Scheduled for release in mid-June before the conference, Python 3.7 is shaping up to be a feature-packed release! \nThis talk will cover all the new features of Python 3.7, including the Data Classes and the Context Variables for the asynchronous programming with asyncio."], "date": ["Wednesday 25 July"], "tags": ["Python general", "ASYNC / Concurreny", "CPython"]},
{"title": ["What makes coding for MicroPython different?"], "author": ["Andrey Vlasovskikh"], "description": ["A microcontroller unit is a CPU, memory modules, and I/O devices on a single chip. There are tens of billions of microcontrollers in world: they are everywhere from watches to cars. Developers program them mostly in C, since their tiny hardware resources make it very hard to use higher-level langauges such as Python. In 2014 the MicroPython project was started with the goal of making it possible to program microcontrollers in Python.", "Was it hard to make Python work on a device with only 16 KB of RAM? Is MicroPython a Python dialect or is it a different language? I\u2019ll start with the most important optimizations and the key differences in the language implementation to give you an idea of what MicroPython really is.", "Most of us are not contributors to MicroPython though and it\u2019s much more important for us to understand how Python coding for microcontrollers is different from, say, web development or scripting. What do you need to learn in order to program your mictrocontroller-based IoT devices? I\u2019ll talk about several traits of Python coding for microcontrollers that make it different, but exciting to learn."], "date": ["Wednesday 25 July"], "tags": ["Internet of Things (IoT)", "MicroPython", "Programming", "Tooling", "Architecture"]},
{"title": ["Washing away code smells"], "author": ["Yenny Cheung"], "description": ["Does your code smell? Have a weird fragrance? It turns out code smells are a real thing and an amazing conceptualization of suboptimal design. This talk helps you identify code smells in Python. It also shows you how to wash them away by the technique of refactoring. You will learn the art of writing Pythonic, clean and maintainable code.", "Code smells refer to the symptoms of problematic code design. Identifying different types of code smells is the first step to successful refactoring. I will talk through some classic examples:", "Knowing what to refactor, I will share a few learnings that lead to good quality code:", "I will also share tips on using refactoring at your company, which includes convincing your product manager, looking out for code smells during code reviews, and employing automatic tools.", "The speaker has previously presented on Talk Python To Me Podcast: https://talkpython.fm/episodes/show/150/technical-lessons-learned-from-pythonic-refactoring, and at PyCon.DE: https://www.youtube.com/watch?v=Yq9-b2JKUyU."], "date": ["Wednesday 25 July"], "tags": ["Beginners", "Best Practice", "legacy-code", "Clean Code", "Software Design"]},
{"title": ["Walking the Random Forest and boosting the trees"], "author": ["Kevin Lemagnen"], "description": ["Deep Learning is all the rage, but ensemble models are still in the game. With libraries such as the recent and performant LightGBM, the Kaggle superstar XGboost or the classic Random Forest from scikit-learn, ensembles models are a must-have in a data scientist\u2019s toolbox. They\u2019ve been proven to provide good performance on a wide range of problems, and are usually simpler to tune and interpret. This talk focuses on two of the most popular tree-based ensemble models. You will learn about Random Forest and Gradient Boosting, relying respectively on bagging and boosting. This talk will attempt to  build a bridge between the theory of ensemble models and their implementation in Python.", "Notebook: ", "https://github.com/klemag/europython2018_walking_the_random_forest"], "date": ["Friday 27 July"], "tags": ["Case Study", "Data Science", "Machine-Learning", "Scientific Libraries (Numpy/Pandas/SciKit/...)"]},
{"title": ["Using Pandas and Dask to work with large columnar datasets  in Apache Parquet"], "author": ["Peter Hoffmann"], "description": ["Apache Parquet is a binary, efficient columnar data format. It uses various\ntechniques to store data in a CPU and I/O efficient way like row groups,\ncompression for pages in column chunks or dictionary encoding for columns.\nIndex hints and statistics to quickly skip over chunks of irrelevant data\nenable efficient queries on large amount of data.", "Apache Parquet files can be read into Pandas DataFrames with the two libraries\nfastparquet and Apache Arrow. While Pandas is mostly used to work with data\nthat fits into memory, Apache Dask allows us to work with data larger then memory\nand even larger than local disk space. Data can be split up into partitions\nand stored in cloud object storage systems like Amazon S3 or Azure Storage.", "Using Metadata from the partiton filenames, parquet column statistics and\ndictonary filtering allows faster performance for selective queries without\nreading all data. This talk will show how use partitioning, row group skipping \nand general data layout to speed up queries on large amount of data."], "date": ["Wednesday 25 July"], "tags": ["python", "Scientific Libraries (Numpy/Pandas/SciKit/...)", "Big Data", "NoSQL", "Databases"]},
{"title": ["Using Bonobo, Airflow and Grafana to visualize your business"], "author": ["Romain Dorgueil"], "description": ["Zero-to-one hands-on introduction to building a business dashboard using Bonobo ETL, Airflow, and a bit of Grafana (because graphs are cool).", "There is no need of prior knowledge about any of those tools.", "After a short introduction about the tools, we\u2019ll go through the following topics, using the real data of a small SaaS software:", "One can expect to be able to build a similar system at the end of the talk in a few days (of course, the implementation is only a small part of this process, data is what really matters).", "\u00abMetrics you watch tend to improve over time\u00bb"], "date": ["Wednesday 25 July"], "tags": ["Case Study", "Databases", "Open-Source", "Business", "Analytics"]},
{"title": ["Understanding and Implementing Recurrent Neural Networks using Python"], "author": ["Anmol Krishan Sachdeva"], "description": ["Recurrent Neural Networks (RNNs) have become famous over time due to their property of retaining internal memory. These neural nets are widely used in recognizing patterns in sequences of data, like numerical timer series data, images, handwritten text, spoken words, genome sequences, and much more. Since these nets possess memory, there is a certain analogy that we can make to the human brain in order to learn how RNNs work. RNNs can be thought of as a network of neurons with feedback connections, unlike feedforward connections which exist in other types of Artificial Neural Networks.", "The flow of talk will be as follows: - Self Introduction - Introduction to Deep Learning - Artificial Neural Networks (ANNs) - Diving DEEP into Recurrent Neural Networks (RNNs) - Comparing Feedforward Networks with Feedback Networks - Quick walkthrough: Implementing RNNs using Python (Keras) - Understanding Backpropagation Through Time (BPTT) and Vanishing Gradient Problem - Towards more sophisticated RNNs: Gated Recurrent Units (GRUs)/Long Short-Term Memory (LSTMs) - End of talk - Questions and Answers Session"], "date": ["Wednesday 25 July"], "tags": ["Visualization", "Data Science", "Developing with Python Track", "Machine-Learning", "Deep Learning"]},
{"title": ["Understanding and Applying CQRS"], "author": ["Vinicius Pacheco"], "description": ["Creating scalable applications has a number of complex variables and one of them is to work with scalability and performance in the database layer. Command Query Responsibility Segregation (CQRS) is a design pattern that helps produce more performance and resilience in applications where data access is intense.\nIn this talk, we will understand when to use and the problems that CQRS solves. We will also apply CQRS in a Python application using the Nameko framework.\u00a0", "The outline talk is:\n        \u25cb (4 minutes) - Present a real problem of a web application, when creating new instances is not a solution, because the database receives an overwrite of writing and unfeasible to read the data, collapsing the application. \n        \u25cb (6 minutes) - Present the CQRS pattern conceptually and how this design pattern solves this type of problem using the structure of Command Stack and Query Stack \n        \u25cb (3 minutes) - Show Nameko as an interesting tool to apply the CQRS. It will demonstrate the use of HTTP, RPC and the possibility of applying pub/sub. \n        \u25cb (6 minutes) - Create (live code) the Command Stack layer using Nameko on a Postgresql database.\n        \u25cb (5 minutes) - Create (live code) the Query Stack layer using Nameko over a MongoDB database. \n        \u25cb (3 minutes) - Explain common myths and mistakes about CQRS \n(3 minutes) - Q & A Session\u00a0"], "date": ["Thursday 26 July"], "tags": ["Software Design", "python", "Architecture"]},
{"title": ["Type annotations with larger codebases"], "author": ["Stephan Jaensch"], "description": ["You\u2019ve heard about type annotations, you know they help reduce bugs and improve documentation especially for large codebases, and you\u2019ve attended an introductory talk or read a tutorial about using them. But how do you get started using them with your big, existing codebase? How do you make sure your colleagues will be annotating new code they write - or existing code they\u2019re changing? And how do you get around some of the issues you might run into when using the still-beta type checker mypy on your codebase?", "This talk will start where the typical introductory Python type annotation talks end and discuss the real-world challenges when starting to annotate types with an existing codebase of tens or hundreds of thousands of lines of code. I\u2019ll walk you through best practices learned from doing just that at Yelp, telling you about some of the roadblocks we hit (and how we got past them).", "We\u2019ll also take a look at:\n- how you can get the most out of type annotations even with non-annotated third-party libraries\n- how to deal with code patterns that currently don\u2019t always work well with annotations\n- when the only way to get proper type checking is through refactoring your code."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Type-Hinting", "Python 3"]},
{"title": ["Trust me, I'm a Data Scientist - ethics for builders of data-based applications"], "author": ["Sarah Diot-Girard"], "description": ["Data Science is gonna save the world, right? Or is it? \nMachine Learning epic fails are being largely commented. It\u2019s easy to convince ourselves that they are due to the inconsiderate misuse of Data Science. But is it really so? Is it possible that innocuous choices lead an honnest team to a disaster?", "During the course of this talk, we will build together an (imaginary) application: a disruptive AI-based smart virtual assistant, pledging to help high-schoolers with their university choice. We will see how unintended biaises may creep in at every step, even with the best of intentions. We will explore different topics, such as algorithmic fairness, model interpretability and the handling of minority classes.", "Through this practical example, this talk will present a review of major ethical pitfalls identified in the Machine Learning community along with suggestions on how to avoid them.", "This talk is intended for beginner to intermediate Data Scientists, and people working with Data Scientists, even without specific technical knowledge.", "Slides : https://sdgjlbl.github.io/Presentations/Data%20Science%20and%20Ethics/presentation.html#/"], "date": ["Friday 27 July"], "tags": ["Data Science", "Machine-Learning"]},
{"title": ["Trio: A pythonic way to do async programming"], "author": ["Emmanuel Leblond"], "description": ["Concurrent programs are super useful: think of web apps juggling lots\nof simultaneous downloads and websocket connections, chat bots\ntracking multiple concurrent conversations, or web spiders fetching\npages in parallel. But writing concurrent programs is complicated,\nintimidating to newcomers, and often challenging even for experts.", "Does it have to be? Python is famous for being simple and\nstraightforward; can Python make concurrent programming simple and\nstraightforward too?\nTrio is an attempt to address this question by the positive !", "By taking advantage of new Python 3 features (async/await keywords,\nasync loops and context managers etc.) while dropping legacy concepts that\nolder asynchronous frameworks has to maintain, Trio defines a new set of\nprimitives that make it dramatically easier to write correct concurrent programs.", "In this talk, we will describe those primitives, and demonstrate how to\nuse them to implement a basic algorithm for speeding up TCP connections.\nCompared to the best previous Python implementation, our version turns out to\nbe easier to understand, more correct, and dramatically shorter."], "date": ["Wednesday 25 July"], "tags": ["Open-Source", "Programming", "ASYNC / Concurreny", "Architecture"]},
{"title": ["The Web is Terrifying! Using the PyData stack to spy on the spies."], "author": ["Sarah Bird"], "description": ["We all know the internet can be a scary place. In this talk I\u2019ll focus on two ways I\u2019ve found it positively terrifying. First, digging into tracking technologies, I have learned about the breadth and depth of ways our online activity is monitored, stored, and repackaged. Second, when starting out to learn a new skill, the tidal wave of information available online can be overwhelming.", "Using the PyData stack to explore and visualize different data sources, including a new dataset from Mozilla, we\u2019ll examine some of the many types of online tracking. My goal is to leave the audience with:", "1) A sense of the breadth of tools in the PyData toolbox that can be applied to a real-world analysis\n  2) An understanding of a few methods of online tracking so they can be more informed internet citizens", "In particular, now that the EU\u2019s General Data Protection Regulation (GDPR) has come into force, we can explore the data in light of EU citizens\u2019 new rights, and the new responsibilities of companies worldwide.", "Along the way, I\u2019ll also talk about becoming a software engineer, then a builder of data science tools, and my new journey into data science. Being self-taught can be, lonely, scary, and full of embarrassing pitfalls. I\u2019ll share some stories about my learning journey, and the people and resources that have supported me."], "date": ["Thursday 26 July"], "tags": ["Visualization", "Data Science", "Data", "Web Crawling", "Privacy"]},
{"title": ["The rise of Python in the data communities"], "author": ["Alexys Jacob"], "description": ["A retrospective and prospective of Python\u2019s adoption in the ", "data-driven industries", " and how it has and should influence its ecosystem and communities.", "Thanks to its versatility, Python\u2019s usage and adoption has changed a lot over the last decade to go beyond the very act of software programming.", "From Developers to SysOps, closely followed by Scientists and Data analysts, Python has spread to become a common tongue for a wide range of people.", "We will start by looking at how this increased adoption impacted Python ecosystem and is still shaping it today. While ", "this talk is not walk through all the Python technologies around data", ", some of them will be outlined so you will hear words like Numpy, Pandas or Jupyter.", "Then we will try to project ourselves in the future and by ", "highlighting the pitfalls Python has to overcome", " to keep up with its pace and mature in its ability to ", "scale", "!", "Draft of the agenda"], "date": ["Thursday 26 July"], "tags": ["Community", "Engineering", "Data Science", "Big Data", "DevOps general"]},
{"title": ["The na\u00efve programmer"], "author": ["Daniele Procida"], "description": ["Since Picasso encountered Henri Rousseau over a century ago, modern art has been acutely aware of the value of the contributions that the na\u00efve artist can make. Art negotiates the relationship between sophistication and na\u00efvety with care and intelligence.", "What does our programming culture make of the na\u00efve programmer?  What can programming gain or learn from this encounter? ", "The na\u00efve programmer is simply an unsophisticated programmer. Nobody is born sophisticated. Even the most sophisticated programmers were once na\u00efve programmers. What\u2019s more, the adoption of programming simply as a tool to solve immediate problems, by ever more people without any formal training, means that the number of na\u00efve programmers will become greater, not less. Are we ready for this?", "This talk will explore the relationship, illuminating it with examples from the world of painting, art and music, and will offer some lessons that our own industry and culture should be ready to learn from.", "(This talk will already have been presented as a keynote at DjangoCon Europe 2018)"], "date": ["Wednesday 25 July"], "tags": ["Beginners", "Best Practice", "Education", "Learning"]},
{"title": ["The Challenges of Maintaining a Popular Open-Source Project"], "author": ["Raphael Pierzina"], "description": ["In this talk, I will give an insight into what it means to maintain a popular project for me personally, what it involves and what we as a community can do to help out and finally why I think it\u2019s an important discussion to have.", "Cookiecutter is a command-line utility that creates projects from templates. It is free and open-source software distributed under the terms of a permissive BSD-3 license. With around 180 individual contributors, more than 1000 public templates on GitHub alone, and multiple talks at conferences, it is fair to say that there is a small community around it.", "But who are the people behind the project and what is it that they are doing?", "It\u2019s been three years since I was granted the commit bit by the core team. I have learned a lot about FOSS communities and also about myself. At times I struggle with balancing my day job as a full-time Software Engineer and maintaining Cookiecutter and other FOSS projects in my spare time. By now I\u2019m OK with not responding to issues immediately and closing pull requests. However it took me quite a while to get to this point.", "Maintaining FOSS projects can be incredibly rewarding and fun, but it can also be quite frustrating. It involves so much more than writing code or merging PRs, and yet sometimes it feels like that\u2019s what most people think. The goal of this talk is to start a conversation around this topic and hear what other EuroPython attendees think about it and their challenges as contributors or maintainers."], "date": ["Friday 27 July"], "tags": ["Open-Source", "Community"]},
{"title": ["The Boring Python Office Talk - Automate Powerpoint, Excel, and PDF with Python"], "author": ["Stefan Baerisch"], "description": ["We will have a quick tour of the many ways Python gives us to handle DOCX, XLSX, PPTX, and PDF and automate some boring office tasks.", "Many things are more interesting than office file formats like DOCX, XLSX, PPTX, and PDF. Still, while working with office formats does not seem to be the most fun, it is useful. But we can do better than just useful. With the Python and some great libraries, it is possible to have Python do much of the work you would have to do otherwise:", "In this talk, we will have a look at a usual working day for Bob and Ann, two fictional office works. Both Bob and Ann work office jobs, but while Bob does all of his work by hand, but Ann knows Python. We will look at different tasks that Bob wants to do, such as preparing an Excel report, building a Powerpoint presentation, or rearranging a PDF. Then, we will look how Ann use Python and some exciting libraries to automate these task.", "During the talk, we will use Bob and Ann to consider different task related to office file formats. We will then look at the Python libraries that are available. Then, using this library, we will see how an otherwise boring task can be automated. \nThe goal of the task is to showcase the libraries to Python offers to work with standard office formats and provide you with a starting point for your own office automation.", "After this talk, you will know how to automate at least some of your daily office tasks. You may also be bored because Python is doing so much of your work for you.  If you know basic Python programming, you will be right at home. There will be some use of Pandas,  but it is not required."], "date": ["Friday 27 July"], "tags": ["Python general", "Python 3"]},
{"title": ["System testing with Pytest, Docker, and Flask"], "author": ["Neil Gall"], "description": ["The composability of fixtures in pytest is an improvement over traditional\nxUnit setup/teardown, reducing the incentive to commit testing crimes such as\nmulti-stage and stepwise tests. This is great out of the box for unit tests,\nbut I\u2019m going to show how to combine the power of pytest fixtures with Docker\nto build high-level integration tests for microservices or other complex\nsystems with multiple components. I\u2019ll then build on that to show how to embed\nmock web services written with Flask right into the test code.", "With a sample Java application that makes use of some external resources to\noffer a data processing service I\u2019ll first quick an overview of Pytest, Docker,\nand Flask. Then I\u2019ll mix some pre-built code with live test coding to\ndemonstrate how to build high-level system tests which spin up the application\nand its dependencies in Docker. I\u2019ll then mock one of the external dependencies\nusing Flask, allowing the test to control and verify interaction between the\nsystem components. Finally I\u2019ll show how to wrap the Flask application in a\nWSGI middleware that lets the test inspect interaction with the mocked service.", "From a learning and development point of view, building your own is better than\nre-using someone else\u2019s code so I\u2019ll show how the support code for these\nfeatures is relatively simple and how the audience can build it themselves to\nexactly meet their own needs. And I\u2019ll do it all with a sense of fun, a joke\nor two and maybe a little storytelling."], "date": ["Friday 27 July"], "tags": ["python", "Docker", "Test Libraries (pyTest/node/...)", "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)"]},
{"title": ["Rust and Python - Oxidize Your Snake"], "author": ["Sven-Hendrik Haase"], "description": ["Rust is a safe and modern systems programming language that is easily able to call and be called from Python. As such, it is a prime candidate for replacing C for writing Python modules that have to be fast or that have to interact with other native code. Rust is extremely fast and makes it very hard to get concurrency wrong.", "Many ways of making Python call into lower level have appeared over the years such as CFFI, ctypes, boost.python, cython, SWIG. All of them are cumbersome in their own ways. PyO3 is a Rust library that makes it easy and simple to write native Python modules with minimal glue code and no crazy tooling required. It even works cross-platform without problems.", "The talk shows some sample code of PyO3-based modules and compares it with the code of the alternatives as well as the alternative\u2019s cross-platform support and tooling.", "The goal is for the audience to be informed about a new safe and modern way of writing native Python modules.", "The audience doesn\u2019t need any prerequisites except for a healthy interest in native code and Python modules. C knowledge is optional."], "date": ["Friday 27 July"], "tags": ["Performance", "Python general", "C-Languages", "All Other Programming Languages", "Compiler and Interpreters"]},
{"title": ["Succinct data structures for python"], "author": ["Konstantin Ignatov"], "description": ["This is a presentation of and call for participation in development and testing of Python bindings to Succinct Data Structure Library.", "From Wikipedia: Succinct data structures can represent an object (such as a bitvector or a tree) in space close to the information-theoretic lower bound of the object while supporting operations of the original object efficiently. The theoretical time complexity of an operation performed on the classical data structure and the equivalent succinct data structure are (most of the time) identical.", "Currently bindings are provided for:", "Original library:  https://github.com/simongog/sdsl-lite\nMost of examples from SDSL cheat sheet and SDSL tutorial are implemented."], "date": ["Thursday 26 July"], "tags": ["Algorithms", "Data", "Science Track", "Structures", "C-Languages"]},
{"title": ["SSLError, now what?"], "author": ["Christian Heimes"], "description": ["TLS/SSL is the most important and widely-used protocol for secure and encrypted communication, e.g. HTTPS. It offers more than just encryption. TLS also ensures data integrity and strong authentication with X.509 certificates. But it provides merely a false sense of security, if you use it wrong.", "Have you ever encountered ssl.SSLError: [SSL: CERTIFICATE", "VERIFY", "FAILED], while connecting to a server, but you didn\u2019t understand what is going on? Are you running production code without TLS/SSL protection or with certificate validation disabled, because you couldn\u2019t figure out how to make it work correctly?", "I\u2019ll give you the rundown of the basic cryptographic building blocks, protocol handshake, inner structure of certificates, and PKI. You\u2019ll learn about the best practices, debugging tools and tips how to diagnose TLS/SSL and how to deal with certificates."], "date": ["Wednesday 25 July"], "tags": ["Security", "Infrastructure", "HTTP", "failures/mistakes", "Internet"]},
{"title": ["Reliability in distributed systems"], "author": ["Jiri Benes"], "description": ["Is your system stable? Do you know what happens if any of your system\u2019s dependency will start failing? Do you even know what exactly each part of your system does or did any time in the past? Or how fast you will identify root of the problem in case your system goes down at 2am?", "The talk focuses on distributed systems (microservices, APIs that communicate with databases, memory, third party services, etc.), monitoring, their failures and recovery in order to help you answer yourself questions above.", "First part aims on importance of monitoring such systems on several levels - monitoring of hardware, application monitoring, monitoring from outside of the systems, detecting malfunctions based on anomalies within system\u2019s data flows.", "Second part presents several standard techniques for preventing system failure in case of outage of dependency and technique how to recover from inconsistent state after outage.", "Content of presentation is helpful and interesting for beginners and intermediates. Senior developers and developers working on reliable distributed systems should bear in mind content of this presentation and master shown techniques."], "date": ["Wednesday 25 July"], "tags": ["Best Practice", "Microservices", "Engineering", "Architecture", "failures/mistakes"]},
{"title": [" Standardize Testing in Python"], "author": ["Bernat Gabor"], "description": ["In this talk, Bernat will introduce tox, an open source tool with the bold vision of standardizing testing. From a CIs point of view, testing contains much more than just unit and/or integration tests; other things like code style checks, packaging, testing under various versions of Python, and checking that documentation still generates, are just as important. Things quickly start to spiral out of control once you add into the mix that there are many tools and ways to accomplish each of these tasks. In this talk, we will learn how tox tries to abstract away all this complexity, how to easily run CI tests on your local machine, and how one can use this tool inside your CI frameworks to ensure high quality and easily maintainable packages."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Agile", "Testing", "Python general", "Open-Source"]},
{"title": ["Rehabilitating Pickle"], "author": ["Alex Willmer"], "description": ["Pickle is a compact serialisation protocol for Python objects.  It could be a convenient way for Python programs and distributed systems to communicate. Unfortunately pickle is widely considered to be unsafe, and it has lead to several vulnerabilities over the years. As the Python manual warns", "The pickle module is not secure against erroneous or maliciously \n  constructed data. Never unpickle data received from an untrusted\n  or unauthenticated source.", "Does this have to be the case? Can we use Pickle safely?", "This talk will be a deep dive into what an attacker can do with a maliciously constructed pickles. I\u2019ll show what defences you can implement against the common attacks, especially those that gain arbitrary code execution. I will present new research into other attacks, and mitigations. Finally I will review a few less known alternatives to pickle.", "This talk will expand on a ", "PyLondinium 2018 lightning talk"], "date": ["Friday 27 July"], "tags": ["Configuration Management (Ansible/Fabric/Chef/...)", "Security", "Python general", "Messaging and Job Queues (RabbitMQ/Redis/...)", "Distributed Systems"]},
{"title": ["reno: A New Way to Manage Release Notes"], "author": ["Doug Hellmann"], "description": ["reno is a tool for managing release notes in projects that support multiple branches of development, and releases, simultaneously. It solves the problem of managing release notes within patches that fix bugs, and makes it easier to cherry-pick changes between branches (allowing backports or forward ports). This talk will cover the requirements, and constraints, that led us to design and build reno. I will also show how to use it to create notes and publish them in your packages and via Sphinx-based documentation. Then I will talk about the impact reno, and the release notes publishing automation, had on our project and release processes."], "date": ["Wednesday 25 July"], "tags": ["Tooling", "Open-Source"]},
{"title": ["Recursion, Fractals, and the Python Turtle Module"], "author": ["Hayley Denbraver"], "description": ["To understand recursion you must first understand recursion. Alternatively, you could come to a talk that will demonstrate the basics of recursion, using fractals drawn by the python turtle module! ", "What are fractals? Fractals are psychedelic designs that appear basically the same regardless of scale. They also appear all over nature\u2013consider how a tree trunk and branches is similar in structure to branches and twigs or how a wave is made of mini waves. Best of all, fractals can be constructed using recursive functions. ", "What is the turtle module? It is part of the standard python library that can be used to draw amazing things and is commonly used as a tool for learning to code. ", "Come for the recursion, stay for the amazing fractals, and leave knowing that no turtles were harmed in the making of this talk.", "This talk is suitable for all python enthusiasts. Those who love mathematics will love this talk. Advanced developers will learn more about a tool that can be used to teach people to code. There is something for everyone. "], "date": ["Wednesday 25 July"], "tags": ["Beginners", "Fun and Humor", "Education", "Python general"]},
{"title": ["Quantum Computing: a Very Gentle Glimpse into a Possible Future"], "author": ["Nick Radcliffe"], "description": ["This talk will aim to demystify quantum computing and will assume no prior knowledge. The speaker, while having studied Quantum Field Theory many years ago, has only relatively recently started learning properly about  Quantum Computing, and is going to try to take advantage of the fact that the ideas are relatively new to him to explain the key concepts simply, to an audience (probably) consisting mostly of non-experts in quantum computing.", "Key questions I will try to cover are likely to include\n  * What is quantum mechanics anyway?\n  * What are quantum computers? Are they real? And are they really faster/more powerful than classical computers?\n  * What is a qubit (the quantum computing analogue of a bit)\n  * What problems are likely to be solved well by quantum computers?\n  * How do you program a quantum computer?\n  * How do you get results out of a quantum computer? What kind of results are they anyway? Do you have to visit other universes to get them?\n  * Can you get access to quantum computers online and use Python to program them (kind-of!)\n  * Will quantum computers break all encryption?\n  * What are Shor\u2019s and Grover\u2019s algorithms and (just possibly) how do they work?\n  * What are the challenges with building practical quantum computers?\n  * What is the Python story with Quantum Computing?"], "date": ["Wednesday 25 July"], "tags": ["Other Hardware", "Universe", "Mind Bending", "Physics", "Cryptography"]},
{"title": ["Recipe for text analysis in social media:"], "author": ["Eulalia Veny"], "description": ["The analysis of text data in social media is gaining more and more importance every day. The need for companies to know what people think and want is key to invest money in providing customers what they want. The first approach to text analysis was mainly statistical, but adding linguistic information has been proven to work well for improving the results.", "One of the problems that you need to address when analyzing social media is time. People are constantly exchanging information, users write comments every day about what they think of a product, what they do or the places they visit. It is difficult to keep track of everything that happens. Moreover, information is sometimes expressed in short sentences, keywords, or isolated ideas, such as in Tweets. Language is usually unstructured because it is composed of isolated ideas, or without context.", "I will talk about the problem of text analysis in social media. I will also explain briefly Na\u00efve Bayes classifiers, and how you can easily take advantage of them to analyse sentiment in social media, and I will use an example to show how linguistic information can help improve the results. I will also evaluate the pros and cons of supervised vs unsupervised learning.", "Finally, I will introduce opinion lexicons, both dictionary based and corpus-based, and how lexicons can be used in semi-supervised learning and supervised learning. If I have time left, I will explain about other use cases of text analysis."], "date": ["Wednesday 25 July"], "tags": ["Case Study", "Notebook", "Natural Language Processing"]},
{"title": ["Quart a asyncio alternative to Flask"], "author": ["Philip Jones"], "description": ["Flask is a great web mirco-framework, that is best utilised with\nevent-loop concurrency. Sadly with Flask the event-loop framework\ncan\u2019t be asyncio, although some extensions (Flask-Aiohttp) have\ntried. Quart is the solution as it shares the Flask API and is\nbased on asyncio. In addition Quart goes beyond Flask adding\nHTTP/2 and websockets.", "This talk will outline why event-loop concurrency is a good\nchoice for web servers, why asyncio is a good choice and then\ngive an overview of Quart, demonstrating features that go beyond\nthe Flask framework."], "date": ["Friday 27 July"], "tags": ["HTTP"]},
{"title": ["Pythonic code vs. performance"], "author": ["\u0141ukasz K\u0105kol"], "description": ["Idiomatic Python is beautiful. If you\u2019re new to Python, this talk is for you because I\u2019m going to reveal the charm of python in front of you. I\u2019ll present how boilerplate code can be replaced with idiomatic python. If you\u2019re experienced python developer, this talk is also for you because I\u2019ll compare the performance of the idiomatic code, both from CPU and memory point of view. Some of these results may surprise you."], "date": ["Wednesday 25 July"], "tags": ["python", "Performance", "Best Practice", "Programming", "failures/mistakes"]},
{"title": ["Python, Docker, Kubernetes, and beyond ?"], "author": ["Peter Babics"], "description": ["Have you ever tried to manage deployment of multiple python applications through various\nlinux distributions ? If so, you must have heard of Docker and maybe also Kubernetes.\nDistributing python applications using docker is simple and allows to create static packages\ncontaining everything required for them to run. Also it allows to freeze everything, packages, available\nlibraries, files on filesystem.\nIn my speech I would like to tell you about our brief journey, of moving our trading platform\nfrom standalone application directly on host system, through deploying it in docker and latter\nmoving it to kubernetes. I will explain our struggles with implementing stable and fast CI using Gitlab CI and Docker,\nimage (package) storage and cleanup of old images and finally I will tell you how we are deploying\nour platform to kubernetes, with nothing more than yaml-s and templating."], "date": ["Wednesday 25 July"], "tags": ["Docker", "Infrastructure", "Deployment/Continuous Integration and Delivery"]},
{"title": ["Python in scientific computing: what works and what doesn't"], "author": ["Michele Simionato"], "description": ["There is no want of technologies for doing scientific calculations in Python. In this talk I will share some hard-learned knowledge about what works and what doesn\u2019t with the libraries we are using at GEM (the Global Earthquake Model foundation).\nI will show how the following libraries fare with respect to our main concerns of performance, simplicity, reliability and portability", "and I will talk about several library bugs we found and had to work around. I will also talk about some libraries that we do not use (such as cython, numba, dask, pytables, \u2026) and the reason why we do not use them.\nHopefully this will be useful to people using or planning to use a similar software stack.", "My slides are here: https://gitpitch.com/micheles/papers/europython2018"], "date": ["Wednesday 25 July"], "tags": ["Science", "Scientific Libraries (Numpy/Pandas/SciKit/...)", "Case Study"]},
{"title": ["Python on Windows is Okay, Actually"], "author": ["Steve Dower"], "description": ["Packages that won\u2019t install, encodings that don\u2019t work, installers that ask too many questions, and having to own a PC are all great reasons to just ignore Windows. Or they would be, if they were true.\nDespite community perception, more than half of Python usage still happens on Windows, including web development, system administration, and data science, just like on Linux and Mac. And for the most part, Python works the same regardless of what operating system you happen to be using. Still, many library developers will unnecessarily exclude half of their potential audience by not even attempting to be compatible.\nThis session will walk through the things to be aware of when creating cross-platform libraries. From simple things like using pathlib rather than bytestrings, through to all the ways you can get builds and tests running on Windows for free, by the end of this session you will have a checklist of easy tasks for your project that will really enable the whole Python world to benefit from your work."], "date": ["Wednesday 25 July"], "tags": ["Windows", "Best Practice", "CPython", "Cross-Platform-Development"]},
{"title": ["Python Decorators: Gift or Poison?"], "author": ["Anastasiia Tymoshchuk"], "description": ["Why would you ever need to use decorators in Python? ", "\nHave you ever had the task when you need to use one function in few places and you really wanted to avoid of code duplicating? For example to add some logging into functions or timers, etc. Decorators in Python are super powerful with these tasks, but at the same time they are super complicated, sometimes even magical. When I started learning Python, Decorators were really like a magic: how to use them, how are they working, lots of questions. The goal is to make the things easier and clear to answer a question: to use or not to use Decorators in your project. ", "\nWhat\u2019s in the Talk: ", "\n- Functions nature in Python ", "\n- Magic of a Decorator ", "\n- Basics ", "\n- When to use Decorators ", "\n- Examples ", "\n- Even more Python magic", "My slides are here: https://atymo.me/projects/presentations/GiftOrPoison/ ", "\nCode examples: https://github.com/atymoshchuk/python_tutorials"], "date": ["Wednesday 25 July"], "tags": ["Best Practice", "Python general", "Clean Code", "failures/mistakes", "Use Case"]},
{"title": ["Python and Web Sockets"], "author": ["Anton Caceres"], "description": ["Modern web-apps require bi-directional communication, reacting not only to user actions but also to server events. This can be achieved elegantly using Web Sockets, a protocol standardized by W3C to be a default tool for full-duplex connections on the Web.", "Although most web-frameworks do not support Web Socket integration out of the box, Python has multiple options available making it a piece of cake. This talk showcases integrating Web Sockets in Python web-apps, focusing on situations that can make good use of it and presenting implementations with most popular frameworks: Tornado and Django. We will explore a similar style but different underlying technologies of both, and finish with a live demo."], "date": ["Thursday 26 July"], "tags": ["Web", "Web Track", "Django", "ASYNC / Concurreny", "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)"]},
{"title": ["Python and GraphQL"], "author": ["Alec MacQueen"], "description": ["GraphQL query language is gaining popularity and seeing more adoption.\nThis is mainly due to the efficiency with which consumers can get their data, the ease with which you can document and explore your API and the powerful tooling that has been built around the query language.", "This talk is for novices and experts of GraphQL alike and aims to cover the basics of the query language, how to implement it using Flask and SQLAlchemy and to take a deeper dive into how Python\u2019s type-hinting can be used to generate your GraphQL schema. ", "I\u2019ll also be talking about some of the tooling that can be used to provide consumers and developers working on your API with a great development experience. Next I\u2019ll cover some ways you can use these tools to empower your development process and get you developing \u2018API First\u2019. ", "To get the most out of this talk you should have a general understanding of APIs, Python frameworks and Python ORMs. However, my aim is to make it as accessible as possible for developers of all experience levels."], "date": ["Friday 27 July"], "tags": ["Web", "Python 3", "APIs"]},
{"title": ["Python 2 is dead! Drag your old code into the modern age."], "author": ["Becky Smith"], "description": ["The clock is ticking on Python 2.7, with support to be dropped in January 2020.  With major dependencies such as Django, NumPy and pandas moving to Python 3 only, the time has come for even big established codebases to consider upgrading.  Many organisations are still postponing for various reasons; we will attempt to demonstrate that with a bit of planning and perseverance, and the assistance of some handy tools, we can embrace the future!", "This session will provide a first-hand perspective on how we upgraded a large (~65,000 lines of python code) 8-year-old Django project with multiple external dependencies from Python 2.7 to Python 3.6.  ", "We will briefly discuss the benefits of upgrading to Python 3, and architectural considerations.  The session will primarily focus on the practicalities of upgrading the code itself.  We will not try to provide a single \u201cbest\u201d solution for upgrading to Python 3, but rather will introduce some of the available tools, provide an insight into how we used them, and their advantages and disadvantages from our experience.  We will discuss preparatory steps and approaches, strategies for dealing with external dependencies, and \u201cgotchas\u201d that we encountered during the process.", "The aim of this session is to provide an example of how a Python 3 upgrade on an established commercial product can be successfully completed, and to furnish audience members with a set of tools and strategies to help them with their own projects.  ", "Prerequisites: basic knowledge of Python. "], "date": ["Wednesday 25 July"], "tags": ["Case Study", "GEO and GIS", "Python 3", "Django"]},
{"title": ["Python 3: ten years later"], "author": ["Victor Stinner"], "description": ["Draft of the talk:", "Growing populary of the Python programming language", "Port Python 2 code to Python 3", "Port Python 2 code to Python 3", "No: \u201cAdd support for Python 3\u201d, don\u2019t loose Python 2 support", "Port Python 3 code to Python 2", "Python changes to make the transition smoother:", "PEP 414: u\"syntax\u201d reintroduced in Python 3.3", "Analysis of the transition", "Bugs that won\u2019t be fixed in Python 2 anymore", "Performance", "Evolutions of the Python language", "Python 3.5", "PEP 492: async/await \u201ckeywords\u201d for asyncio.\n(Really keywords in Python 3.7.)", "PEP 448: Generalized unpacking:\n", "head, *tail = list", "\n", "mylist = [1, 2, **other_list]", "\n", "mydict = {\"key\": \"value\", **other_dict}", "Python 3.6", "PEP 515: ", "million = 1_000_000", "Bury Python 2?"], "date": ["Friday 27 July"], "tags": ["Python 2", "Python 3", "CPython"]},
{"title": ["PyPI: Past, Present and Future"], "author": ["Nicole Harris"], "description": ["The Python Package Index (PyPI) is the principal repository of software packages for the Python programming language.", "In May 2018, PyPI served 12.3 billion HTTP requests, with 1.4 million people visiting pypi.org via their web browser.", "The Python community depends on PyPI for the ongoing functioning of the entire Python ecosystem."], "date": ["Thursday 26 July"], "tags": ["PyPi"]},
{"title": ["Proper Django Testing"], "author": ["Martin Angelov"], "description": ["I\u2019m currently working in a Django project, We have a lot of tests (~ 2000) and a fair amount of code coverage currently. The system and the requirements of the client grows everyday (like in every other project these days). I\u2019ve convinced that the effort we put in making each of these tests pays off daily.", "Speaking with other Django and Python developers I\u2019ve noticed that people often \u201coverengineer\u201d their unit tests and they usually tend to break their principles.", "In this presentation I will talk mainly about unit tests. - what packages we use and how and when to use them (properly). We will take a look on how we structure our projects and how this structure actually helps us write proper unit tests. I will start with the very basic tests and continue with the mocking technique. In the end I\u2019m going to refer to other testing methods (integration, E2E, validation testing,  visual regression, etc.).", "The goal of this talk is to make people better in testing and to show them how these skills will fasten the development process and  help them maintain their project and it\u2019s quality."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Django", "clients", "Testing", "APIs"]},
{"title": ["Programming paradigms for physical computing and IoT"], "author": ["Ben Nuttall"], "description": ["A look at the GPIO Zero library for Raspberry Pi yields the blueprint for a Pythonic API for programming the behaviour of interconnected devices.", "GPIO Zero provides a multi-paradigm programming interface to GPIO devices:\n- procedural (polling)\n- procedural (blocking)\n- event-driven (callbacks)\n- declarative", "Start with simple scripts to control LEDs and buttons on a breadboard, learn to prototype ideas and move on to declaring interaction between more advanced devices in the home and beyond.", "These options for device programming, along with the extensibility of the library, provide the means to program complex behaviour using simple Pythonic code. "], "date": ["Friday 27 July"], "tags": ["Gadgets", "Internet of Things (IoT)", "Sensors", "Raspberry PI", "Hardware/IoT Track"]},
{"title": ["Productionizing your ML code seamlessly"], "author": ["Lauris Jullien"], "description": ["Data science and Machine Learning are hot topics right now for Software Engineers and beyond. And there are a lot of python tools that allow you to hack together a notebook to quickly get insight on your data, or train a model to predict, or classify. Or you might have inherited some data wrangling and modeling {Jupyter/Zeppelin} notebook code from someone else, like the resident data scientist. ", "The code works on test data, when you run the cells in the right order (skipping cell 22), and you believe that the insight gained from this work would be a valuable game changer. But now how do you take this experimental code into production, and keep it up-to-date with a regular retraining schedule? And what do you need to do after that, to ensure that it remains reliable and brings value in the long term?", "These will be the questions this talk will answer, focusing on 2 main themes:\n     1. What does running an ML model in production involve?\n     2. How to improve your development workflow to make the path to production easier?", "This talk will draw examples from real projects at Yelp, like migrating a pandas/sklearn classification project into production with pyspark, while aiming to give advice that is not dependent on specific frameworks, or tools, and is useful for listeners from all backgrounds."], "date": ["Friday 27 July"], "tags": ["Best Practice", "Scientific Libraries (Numpy/Pandas/SciKit/...)", "Data Science", "Notebook", "Machine-Learning"]},
{"title": ["Processing Geodata using Python and Open Source Modules"], "author": ["Martin Christen"], "description": ["The need for processing small-scale to large-scale spatial data is huge. In this talk, it is shown how to analyze, manipulate and visualize geospatial data by using Python and various open source modules.", "The following modules will be covered:", "Github repo: https://github.com/martinchristen/EP2018_Geo"], "date": ["Friday 27 July"], "tags": ["Visualization", "Data", "Jupyter/iPython", "Big Data", "Science"]},
{"title": ["Postgres at any scale"], "author": ["Craig Kerstiens"], "description": ["We\u2019ll start with the basics you need to know as an app developer about interacting with your database, then dig into how you can start to analyze performance. We\u2019ll look at things you need to know for a small application, then the things you should be cautious of as you start to layer in other items you need to be aware of for performance including:"], "date": ["Wednesday 25 July"], "tags": ["PostgreSQL", "Databases"]},
{"title": ["PEP 557* versus the world"], "author": ["Guillaume Gelin"], "description": ["Python 3.7 will ship with a new module called ", "dataclasses", ", which has been defined in PEP 557.", "This talk will deeply cover ", "dataclasses", ", but also ", "attrs", ", ", "box", ", ", "thingy", ", and others.", "Post-conference notes:\n- Slides: https://slides.com/ramnes/pep-557\n- Implementations and micro-benchmark: https://github.com/ramnes/pep-557-vs-the-world"], "date": ["Thursday 26 July"], "tags": ["Software Design", "Data Structures", "Clean Code", "Python 3", "Developing with Python Track"]},
{"title": ["My Story with Python and Open Source"], "author": ["Nicola Iarocci"], "description": ["This is the story of how I (and with me, my company) went from lonely, introvert, C# developer to open-source Python author and maintainer, speaker, trainer, consultant, and all-around community junkie. With some luck, in the process, you will also hear a few hints on how to become a good open source contributor and have a chance to ponder on the pros and cons (yes there are cons too) of going full monty with open source. We will also look at what changed in my company as we slowly switched from closed, in-house eco-systems to the open source field."], "date": ["Wednesday 25 July"], "tags": ["python", "Open-Source"]},
{"title": ["More Than You Ever Wanted To Know About Python Functions"], "author": ["Mark Smith"], "description": ["What exactly ", "are", " functions? Let\u2019s talk about functions, methods, callables and closures - what they are, what you can give them, what they can give you, what you can do with them \u2026 and what\u2019s inside.", "You probably think you already know everything about functions, but you probably don\u2019t!", "Input & Output", ": How do you get things in and out of functions? I\u2019ll cover parameters and the myriad of ways they can be specified, provided and accessed - including helpful hints to avoid common mistakes! I\u2019ll cover return values, briefly, along with variable scopes and exceptions.", "Closures", ": What are they, how do they work and how they can affect memory usage.", "Methods", ": How does a method differ from a function, when are they made, how do they work (where does ", "self", " come from?) and how to access the function inside every method.", "__magic__", ":Make your own callables from any object!", "Introspection", ": Using modern Python techniques, what can you find out about a function, and what can you do with that information?", "Bytecode", ": What happens if you open up a function and look at its insides? Can you change it and put it back together again? (Spoiler: Yes, you can.)", "By the end of this talk, I guarantee* you\u2019ll know more about callables than when you walked in, along with techniques both practical and so extreme your colleagues will never let you merge them to master.", "(*This guarantee is legally non-binding and cannot be redeemed in any way.)"], "date": ["Thursday 26 July"], "tags": ["Type-Hinting", "Mind Bending", "Programming", "Functional Programming"]},
{"title": ["Mocks, fakes, dummies, stubs and spies: Successfully isolating the snake"], "author": ["Mario Corchero"], "description": ["Ever wonder what mocks, fakes, dummies stubs or spies are? Or what the differences are between them and when one should be used instead of another? We will take a deep look into these concepts, what they mean and examples on how to use/create them in Python.", "In this talk, we will quickly explore the reasons for using mock and how it works, quickly jumping into the different concepts of testing doubles and how they can be used in Python. The talk will include as part of the examples from some features in mock coming in Python 3.7 that might change how usual mocking is performed. The talk builds on the writings of Gerard Meszaros and Martin Fowler about testing doubles, focusing on how to apply them to Python.", "This session, which will review test isolation concepts and the unittest.mock module, is structured in a way that both beginners and intermediate developers will learn from it. A basic knowledge of testing is recommended. Intermediate developers will leave the room with a clear understanding of the tools - further than just using simple mocks - to successfully fake dependencies. Multiple \u201cnot so well known\u201d features of unittest.mock will be presented so we can shape those objects to behave functionally different.\nUnittest.mock is an extremely useful library which is commonly underused, this talk aims to bring clarity into stubbing in general and into medium/advanced mock features to ease and remove pain when users work with it.", "Outline: ", "\u2022 Intro (1\u2019)\n\u2022 Why doubles are important (1\u2019)\n\u2022 Main qualities of a double (2\u2019)\n\u2022 Overview of unittest.mock (5\u2019)\n\u2022 Testing doubles (15\u2019)\n    o   Doubles (1\u2019)\n    o   Stubs (2\u2019)\n    o   Spies (3\u2019)\n    o   Mocks (5\u2019)\n    o   Fakes (2\u2019)\n\u2022 Wrap up, conclusion and pointers (2\u2019)\n\u2022 Q&A (Expected 5\u2019)"], "date": ["Thursday 26 July"], "tags": ["python", "Testing", "Python general"]},
{"title": ["Microservices and Serverless in Python projects"], "author": ["Jose Manuel Ortega"], "description": ["Monoliths, microservices and now Serverless. Function as a Service (FaaS) platforms give us new ways to attack old problems. The possibility of executing functions as a service allows designing scalable and highly parallel applications, but on the other hand, this kind of applications require a particular programming style. For example, bundling dependencies and managing state is not trivial.", "However, there are plenty of tools and frameworks to help you code serverless applications with Python, and once you get started it is not complicated.", "In this talk we will mention the advantages of Serverless and we will focus on the situations in which we can introduce it into our Python projects. We will use AWS Lambda for the examples.", "These could be the main talking points:", "Introducing Serverless and Function as a Service (FaaS) in Python projects\nAdvantages of Microservices and Serverless \nAWS Lambda functions with chalice\nTesting AWS lambda with docker"], "date": ["Thursday 26 July"], "tags": ["Public Cloud (AWS/Google/...)", "Microservices", "Docker", "Architecture", "DevOps general"]},
{"title": ["May the Fuzz be with you"], "author": ["Heidi Thorpe"], "description": ["This talk will explore how Long short-term memory (LSTM) recurrent neural networks combined with Python can use Artificial Intelligence to provide invalid, unexpected, or random data as inputs for testing software and finding network security vulnerabilities. The technique of machine generated test inputs is an established testing approach and is sometimes referred to as fuzzing. I will take this idea further by presenting how various types of machine learning can provide novel outlier test cases to harden software and networks in a way that is superior to using only randomness. Instead, I will discuss how to train neural networks to produce better fuzzing data.This is a natural progression from my work with machine learning and image processing using support vector machines (SVM) and Generative Adversarial Networks (GAN) which I have applied to this new domain of software testing.\nThis a beginner level talk aimed at all software developers and testers with a goal to giving attendees a basic understanding of fuzz testing.", "Timing of presentation\n1 Introduction 0-5 minutes \n2 What is a neural fuzzing 5-10 minutes \n3 How does fuzzing work 10-15 minutes \n4 Steps to train a deep neural network 15-20 minutes \n5 Implementing a basic LSTM neural network for security testing 20-25 minutes \n6 Conclusion and Questions 25-30 minutes"], "date": ["Thursday 26 July"], "tags": ["python", "Security", "Testing", "Programming", "Data Science"]},
{"title": ["Let\u2019s Build a Python Profiler in 25 LOC"], "author": ["Noam Elfanbaum"], "description": ["A profile is a set of statistics that describes how often and for how long various parts of the program executed. Most profilers run inside your Python process.  If you\u2019re inside a Python program you generally have pretty easy access to its stack, hence we can gather information about time spent in each level.", "In this talk we\u2019ll build a Python profiler from scratch and so learn about the dynamic nature of Python and how do well-known profilers such as cProfile. ", "We\u2019ll also learn the difference between a tracing and a sampling profiler and which one to use in what circumstance."], "date": ["Wednesday 25 July"], "tags": ["Performance", "CPython"]},
{"title": ["Marge: A bot for better Git'ing"], "author": ["Mika Bostr\u00f6m"], "description": ["Over the past decade, development workflows across industries have converged towards Continuous Integration (CI) with pull requests (PR). Automated testing and artifact generation is useful, but the logic is often flawed: test are run against the source branch, and side effects from successful merges are not accounted for. Marge-bot improves this workflow by allowing to test the PR against the target branch while providing a host of other conveniences."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Development", "Deployment/Continuous Integration and Delivery", "Git", "Tooling"]},
{"title": ["Lies, damned lies, and statistics"], "author": ["Marco Bonzanini"], "description": ["Statistics show that eating ice cream causes death by drowning.", "If this sounds baffling, this talk will help you to understand correlation, bias, statistical significance and other statistical techniques that are commonly (mis)used to support an argument that leads, by accident or on purpose, to drawing the wrong conclusions.", "The casual observer is exposed to the use of statistics and probability in everyday life, but it is extremely easy to fall victim of a statistical fallacy, even for professional users.", "The purpose of this talk is to help the audience understand how to recognise and avoid these fallacies, by combining an introduction to statistics with examples of lies and damned lies, in a way that is approachable for beginners. ", "Agenda:"], "date": ["Friday 27 July"], "tags": ["Beginners", "Education"]},
{"title": ["Let\u2019s embrace WebAssembly!"], "author": ["Almar Klein"], "description": ["WebAssembly (WASM) is an open, low level binary format designed to be compact and run at native speed, while being memory-safe. WASM is primarily intended to run code in browsers, but its by no means limited to this. This makes it an interesting intermediate language (IR); code that compiles to WASM will (in the future) run basically anywhere. In short: WASM is coming and its great!", "Unsurprisingly, WASM is being embraced by many communities, such as C++, Rust, Lua, and .NET. Sadly, there does not seem to be a lot of enthusiasm from the Python community yet\u2026", "Perhaps this is because Python is interpreted and can therefore not (easily) use WASM as a compilation target. It should be possible to compile a Python interpreter (like CPython or Pypy) to WASM and thereby run Python code in a browser. But the result would be pretty heavy-weight, so it would arguably not be a very practical.", "Within the PPCI project (a pure Python compiler infrastructure) tooling has been developed to load, inspect, compile and even run WASM modules. This allows combining WASM and Python in new ways. In this talk we discuss two approaches by which the Python community might embrace WASM. ", "Firstly, various projects already exist that compile Python functions to other languages (e.g. Numba, PScript), and we have type annotations. If Python functions would be compiled to WASM, the resulting code would run in any WASM runtime (e.g. the browser). This will be demonstrated with an example, for which the resulting code can be run either in a browser or inside Python itself. In either case, it\u2019s pretty darn fast.", "Secondly, rather than ", "using", " WASM, it might be interesting for Python to function as a platform to ", "run", " and ", "bind", " WASM modules. Two of Python\u2019s greater strengths are its rich ecosystem and its ability to glue things together. Let\u2019s build on that! Imagine creating an application that consists of multiple WASM modules, perhaps compiled from different languages, and binding these together into a single Python app.", "This will be demonstrated with a game, which is written in Rust, compiled to WASM, and running inside a Python process. The WASM module consumes a drawing API, which is in this case provided by Python, and Python feeds the WASM module with user input.", "I hope that this talk inspires other Pythonistas to think about the advantages that WASM can bring to our ecosystem, and also about the role that Python can play in the growing WASM ecosystem."], "date": ["Wednesday 25 July"], "tags": ["Web", "All Other Programming Languages", "Community"]},
{"title": ["JavaScript for Python Developers"], "author": ["\u017dan Anderle"], "description": ["Having a hard time keeping track of where the modern JavaScript is going? Are you familiar only with jQuery and you want to know more? Or maybe you\u2019re not familiar with JavaScript at all and want to learn it but you don\u2019t know where to start? Then this talk is for you!", "You\u2019ll learn about modern JavaScript from a perspective of a Python developer. By the end of the talk you\u2019ll know everything you need to know about the language, its ecosystem, and different tools and frameworks. You\u2019ll be able to start using JavaScript more confidently and be familiar with different tools that are at your disposal.", "We\u2019ll go over all the things I wish I\u2019d known when I first got started with JavaScript.:"], "date": ["Thursday 26 July"], "tags": ["Web", "JavaScript", "Web General", "JavaScript Web Frameworks (AngularJS/ReactJS/...)"]},
{"title": ["Iteration Inside Out - Python's Iteration Protocol"], "author": ["Naomi Ceder"], "description": ["Using for loops and list comprehensions in Python is basic and quite common, right? But how does iteration in Python actually work \u201cunder the hood\u201d? The words \u201citerator\u201d and \u201citerable\u201d each occur over 500 times in the Python documentation, but what does an iterator actually ", "do", ", as opposed to an iterable? And how do they do it? Learn the details as we turn the iteration protocol inside out, with live coded demonstrations along the way.", "This talk will start from the way Python iterates of over a sequence, in comparison with iterating by index, like C. The key point of iterating over a sequence is that something needs to track which item in the sequence is next, which is something that Python\u2019s  iteration protocol manages.", "The iterable section will demonstrate creating a simple object that returns items by index (e.g., a fibonacci series), showing that ", "getitem", " is really all you need for an iterable, since an iterator is created for such objects when iterated upon. BUT, this doesn\u2019t answer the question of how Python keeps track of which item is next.", "The iterator section answers that question by converting the iterable just created to an iterator - adding ", "iter", " and ", "next", " methods and showing how the iterator saves state and essentially drives the iteration protocol. ", "Having an accurate understanding of iteration protocol will help developing Pythonistas reason better about both iterating over existing objects and creating their own iterables and iterators."], "date": ["Thursday 26 July"], "tags": ["Python 2", "Programming", "Python general", "Python 3"]},
{"title": ["Leadership of Technical Teams"], "author": ["Owen Campbell"], "description": ["Over the years, I\u2019ve led, and been a member of, numerous technical teams on a wide variety of projects. Based on that experience, this talk will describe my personal observations on the role of the leader in that sort of team.", "The talk will be in 5 sections:", "There is no prior knowledge or experience required whatsoever. The talk is aimed equally at anyone  considering a leadership role for the first time or who has been doing so for many years."], "date": ["Wednesday 25 July"], "tags": ["Best Practice", "Business"]},
{"title": ["Is your code tainted? Finding security vulnerabilities using taint-tracking."], "author": ["Mark Shannon"], "description": ["\u201cTaint tracking\u201d is a technique used in code analysis to find security vulnerabilities and other problems.", "Any data that comes from an untrusted source, for example a HTTP request, is treated as \u201ctainted\u201d.\nIf that \u201ctainted\u201d data is able to reach a vulnerable part of your code, then you have a problem.\nSophisticated code analysis tools can track this data, and reveal potential security problems.\nExamples of the sort of problem that can be found include  cross-site scripting (XSS), code injection, SQL injection and others.", "In this talk I will show how taint tracking analysis works in practice, introducing the concepts of source, sink and sanitizer.\nI will then demonstrate using taint tracking to find a XSS vulnerability in a django app.\n(We will chose a project that is designed to teach django security, where the vulnerability is deliberate.)", "I will also explain how thinking in terms of \u201ctaint\u201d can help you write safer code,\neven without access to code analysis.", "During this talk I will use the code analysis tools on lgtm.com to demonstrate the analysis.\nlgtm.com is free to use for open-source projects. A paid version is available."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Security", "Code Analysis"]},
{"title": ["Integration Tests with Super Powers"], "author": ["Alexandre Figura"], "description": ["You are maybe like me: I never learned at school how to write tests. My teachers gave me at first a broad overview of computer history. Then, they explained me some basic design patterns. And to finish, I often had to write more or less basic programs, to validate and demonstrate my skills. Not the kind of code I would be really proud of today: the procrastinator monkey living in my head at this time was more thinking about planning my summer holidays, rather than writing Ninja code!", "And to make things worse, my studies focused on network and system engineering. Not software architecture. Funny story, because I decided to become programmer a couple of years later\u2026", "What I realize now is that I don\u2019t have as much time as before to learn. And in a world driven by business, where time is money, and where tradeoffs are the rule, there is rarely enough money to write both shiny new features and a complete test suite.", "People who practice Test-Driven Development know how complicated it can be to write proper tests. TDD is often discouraging at first: the learning curve is steep. But this problem also exists in the testing world in general. Because writing good tests is hard, many beginners get headaches trying to reach this goal. How to convince project managers to have more time for writing tests in these conditions\u2026", "But \u201cle jeu en vaut la chandelle\u201d as we say in French (\"the juice is worth the squeeze\"). Well tested applications are not only easier to maintain and extend. They also have in general a better API. That\u2019s what we will see in this talk, by focusing on how to write integration tests. Our journey will begin with a presentation of different testing strategies. We will then jump to the practical part, using Pytest, interface testing , dependency injections and stubs, amongst many others. And because we want to add nice buzzwords on our resume after EuroPython, we will finish this talk by automating the whole with Docker Compose."], "date": ["Friday 27 July"], "tags": ["Docker", "Testing", "Tooling", "Test Libraries (pyTest/node/...)"]},
{"title": ["Interoperability Rules for an European API Ecosystem: do we still need SOAP?"], "author": ["Roberto Polli"], "description": ["Italy is introducing a new API Ecosystem because the complexity of the old SOAP-based protocol was now a barrier for the creation of newer services.", "This talk presents the Digital Transformation Team  ongoing work on an interoperability framework based on (REST) API, including:"], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Scaling", "Privacy", "RESTful", "APIs"]},
{"title": ["Introduction to sentiment analysis with spaCy"], "author": ["Thomas Aglassinger"], "description": ["Sentiment analysis aims at extracting opinions from texts written in natural language, typically reviews or comments on social sites and forums. SpaCy already provides mechanisms for dealing with natural languages in general but does not offer means for sentiment analysis.", "This talk gives a short introduction to sentiment analysis in general and shows how to extract topics and ratings by utilizing spaCy\u2019s basic tools and extending them with a lexicon based approach and simple Python code to consolidate sentiments spread over multiple words.", "Topic covered are:", "Code examples are introduced and explained using a Jupyter notebook that can be used as basis for your own analysis.", "As additional twist the analyzed texts are not in English but German to show that this approach can be used for multiple languages. No knowledge of German is required though because translations of the short examples sentences are provided."], "date": ["Thursday 26 July"], "tags": ["Beginners", "Notebook", "Programming", "Natural Language Processing"]},
{"title": ["Industrial Machine Learning Pipelines with Python & Airflow"], "author": ["Alejandro Saucedo"], "description": ["This talk will provide key insights on the learnings I have obtained throughout my career building & deploying machine learning systems in critical environments across several sectors. I will provide a deep dive on how to build scalable and distributed machine learning data pipelines using Airflow with a Celery backend. I will also compare Airflow with other technologies available out there and how it differentiates, such as Luigi, Chronos, Pinball, etc. If you attend the talk, you will obtain an understanding on the solid fundamentals of Airflow, together with its caveats and walk-arounds for more complex use-cases. As we proceed with the examples, I will cover the challenges that you will run into when scaling Machine Learning systems, and how Airflow can be used to address these using a manager-worker-queue architecture for distributed processing with Celery.  By the end of this talk you will have the knowledge required to build your own industry-ready machine learning pipelines to process data at scale, and I will provide further reading resources so people are able to implement the knowledge obtained almost right away."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Deep Learning", "Distributed Systems", "Big Data", "Machine-Learning"]},
{"title": ["How to write Rust instead of C, and get away with it (yes, it's a Python talk)"], "author": ["Antonio Verardi"], "description": ["Have you ever tried optimizing a super-slow Python application and thought: \u201cOh! I wish I could just write this bit it in Rust\u201d? Well, turns out you can!\nWe will show you how Rust is a better alternative than C to make your programs lightning fast, and how to get away with it; without your users even noticing.", "As Infrastructure Engineers at Yelp, the challenge we face everyday is: scale. Yelp is mostly a Python shop and while this is great for development velocity, our work often revolves around making Python applications run faster. Until now, we have been using different techniques: faster interpreters, or, more often, C code.", "Given its safety guarantees, performance and promise of better tooling than C, we decided we had to give Rust a try. The initial results helped reinforce that there was a lot of opportunity for Rust to play an important role in our production code.", "Yelp heavily relies on the Apache Avro (https://avro.apache.org/) serialization format for its internal infrastructure. During the talk, we will show how we implemented an Avro serialization/deserialization library in Rust, how we were able to call it from Python (and in theory from any other language) with very little code, using tools such as cbindgen (https://github.com/eqrion/cbindgen/), CFFI (https://cffi.readthedocs.io/en/latest/) and Milksnake (https://github.com/getsentry/milksnake/).", "This talk would outline how easy it is to write performant code in a language like Rust and call it from Python applications without users even realizing it, making this a great solution for production services."], "date": ["Wednesday 25 July"], "tags": ["Performance", "C-Languages", "CPython"]},
{"title": ["How to Write Deployment-friendly Applications"], "author": ["Hynek Schlawack"], "description": ["The DevOps movement gave us many ways to put Python applications into production. But should your application care? Should it need to know whether it\u2019s running on your notebook, on a server, in a Docker container, or in some cloud platform as a service?", "It should not, because environment-agnostic applications are easier to test, easier to deploy, easier to handle, and easier to scale.", "But how can you practically structure and configure your applications to make them indifferent to the environment they run in? How do secrets fit into the picture? And where do you put that log file?", "By the end of this talk you\u2019ll know the tools and techniques that enable you to write such Python applications and you\u2019ll be ready for the next big change. "], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Scaling", "Deployment/Continuous Integration and Delivery", "Architecture", "DevOps general"]},
{"title": ["How to make money using Python - Unused potential in the Enterprise World"], "author": ["Marc-Andre Lemburg"], "description": ["Python has gained quite some traction in the web development world and more recently as the goto language for anything that has to do with data science. However, it\u2019s use in the enterprise world of applications is rather limited.", "Based on the author\u2019s many years experience in working in enterprise environments, the talk will demonstrate areas in the business application space where Python has significant advantages over other languages, but which are currently dominated by applications written in Java, C++ or C#.", "There are huge opportunities out there for companies to excel at and use the Python advantage to their benefit. If you are looking for a lead idea to kick start your Python business (and you have the resources to invest into marketing), this talk is for you."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Python general", "Business", "Use Case"]},
{"title": ["How to develop your project from an idea to architecture design in 50 minutes"], "author": ["Anastasiia Tymoshchuk"], "description": ["Have you ever asked yourself: ", "\n- how and where to start developing a new project from the scratch, ", "\n- how to choose main components of a new software or how to develop a new feature, ", "\n- how to decide whether your project needs refactoring, ", "\n- how to avoid repeating the same issues? ", "\nThis talk will answer all these questions.  ", "You will learn:\n- how to develop the idea from scratch, ", "\n- how to use principles of Object Oriented Analysis and Design, ", "\n- how to show amazing architecture design.  ", "You will get better understanding where and how to start, analyze and decouple the system, create a clean, clear and extendable architecture.", "My slides are here: https://atymo.me/projects/presentations/FromIdeaToDesign/"], "date": ["Wednesday 25 July"], "tags": ["Software Design", "Data Structures", "Architecture", "Code Analysis", "Use Case"]},
{"title": ["How do I get the job I want? "], "author": ["Franziska Schropp"], "description": ["Engineers are rare, jobs are plenty, so far so good. But what if I don\u2019t just want any job that pays the bills, but the job that will push my career and that I actually enjoy doing every day? If your answer to why you\u2019d like to join company XY is: \u201cWork from home and make good money\u201d, you should not be surprised to not be taken into the next round. But what would be a good answer to that question? What should I say when asked where I see myself in 5 years? There are a lot of subtle aspects to succeeding and failing in the application process, from your initial cover letter to the on site visit meeting the team.  As a tech recruiter, I\u2019d like to share with you the best and (sometimes quite entertaining) worst practices in the application process in order to help you get the job you want! "], "date": ["Wednesday 25 July"], "tags": ["The Answer to Life the Universe and Everything Else", "workforce", "Community"]},
{"title": ["How is python used in biomolecular sciences?"], "author": ["Antonia Mey"], "description": ["In the last ten years scientists working on computational problems involving proteins and other small molecules have largely moved to using python when developing simulation and data analysis tools allowing for a fast prototyping and development of new ideas. One big challenge is dealing with the compatibility of different tools and using these to create very complex adaptive, yet robust workflows in order to be able to guide cutting edge experiments e.g. predicting how well a small drug like molecule can bind to a protein that could serve as a target for a new drug. The talk will give a gentle introduction to what kind of python related tools are available in the field  of computational molecular biology, how they are used, and what kind of complex workflows scientist have to solve.\nI will then introduce BioSimSpace an open source python library and flagship project of the CCPBioSim consortium in the UK, which provides a common API to avoid having to learn many individual tools facing compatibility and dependency challenges allowing scientists to focus on the scientific question at hand and not solving programming challenges. BioSimSpace allows fast and interoperable building of workflow components (nodes) for bimolecular problems, which can easily be used on a variety of different computational resources. In particular I will introduce the cloud facilities available for fast prototyping using a Jupyter notebook interface. "], "date": ["Wednesday 25 July"], "tags": ["Physics", "Visualization", "Data", "Jupyter/iPython", "Scientific Libraries (Numpy/Pandas/SciKit/...)"]},
{"title": ["How can you use Open Source materials to learn Python & data science?"], "author": ["Kamila Stepniowska"], "description": ["Python is very often recommended as the language of choice in a programming education. I can see at least two cases when it\u2019s a thing:\n- introduction to programming - regardless an age and any previous educational experience,\n- data science - it\u2019s just a standard\u2026\nand actually both - you can teach a future data scientists starting by teaching Python. ", "During this talk, I would like to briefly present you what Open Source Python educational materials do we have there and how those are and can be used to teach Python and data science. PyLadies, Django Girls, Django Carrots, Python Software Foundation creates many very available materials. From the data science side, you have Open Source materials created by kaggle, Minerva, Github repos, and many other organizations and individuals. ", "During this talk you will learn:\n- where to find an Open Source Python and data science tutorials and educational materials\n- how does the Python community can support your learning process\n- why learning data science with Python is a good idea.", "I\u2019m also interested in learning your educational experience with an Open Source materials and Python community supporting your learning experience. If you would like to share a link or your educational story,  please feel free to send me an email on kamila@stepniowski.com. If I will find it interesting for the audience and if you will give me your permission to share it, I might use it in the talk."], "date": ["Thursday 26 July"], "tags": ["Education", "Diversity", "Open-Source", "Community", "Learning"]},
{"title": ["Hello to the World in 8 Web Frameworks (micro, batteries included & async)"], "author": ["Aaron Bassett"], "description": ["Join us for a Phileas Fogg inspired whirlwind tour of eight Python web frameworks.", "\u201cHad he programmed? It was likely, for no one seemed to know web frameworks more familiarly; there was no framework so obscure that he did not appear to have an intimate acquaintance with it. He must have developed in everything, at least in the spirit.\u201d", "We\u2019ll start with the current crop of microframeworks, showing how to achieve the same task in each, before progressing to \u201cBatteries included\u201d and the more specialised async frameworks.", "For developers who perhaps have only used a single framework, this talk gives them an opportunity to get out and explore the world (of web frameworks) and broaden their horizons, with plenty of Jules Verne inspired fun along the way."], "date": ["Thursday 26 July"], "tags": ["Fun and Humor", "Pyramid", "ASYNC / Concurreny", "Internet", "Django"]},
{"title": ["How async and await ended up in Python"], "author": ["Pavlin Gergov"], "description": ["We\u2019re going to talk about regular functions,  iterables, iterators, function execution and yield - generator functions. We will send values and play with generators a bit. A quick look at asyncio will be followed by async and await, what a coroutine is and how to write async code with Python.", "Code snippets can be found here: ", "https://github.com/pgergov/europython-2018"], "date": ["Friday 27 July"], "tags": ["Beginners", "Education", "Python 3", "ASYNC / Concurreny"]},
{"title": ["Hacking Reinforcement Learning"], "author": ["Guillem Duran"], "description": ["Repository", "Slides with notes", "Creating huge datasets of top performing examples for Reinforcement Learning (RL) has always been tricky, but if we allow\nourselves to cheat a bit it can be done very easily. During this talk, I will present a new family of algorithms that allow to efficiently generate very high quality samples for any known RL environment.", "This new generation of planning algorithms achieves a performance which is several orders of magnitude higher\nthan any other existing alternative, while offering linear time complexity and good scalability.", "This talk will be a practical example\nof how we can use new tools for hacking any reinforcement learning environment, and make it generate superhuman level games.", "Hacking RL, as any other hacking process will be divided in four phases:", "During information gathering, I will briefly explain what are the main ideas behind Reinforcement Learning.\nI will also talk about how our theory (FractalAI) came to be, and what are the fundamental concepts behind it.", "We will find an attack vector against the environment API, and explain how it can be exploited. I will explain\nthe fundamental concepts needed to build a new generation of exploits, that will allow us to have complete control over the data the environment produces.", "This is the time to test the new exploits and to show a proof of concept. We will exploit the attack vector to gain access\nto the environment. Using only a laptop I will show how it is possible to sample data which surpasses human performance way faster than real time.", "Once we have gained control of the environment, we will measure how well the exploits work, and how well the techniques presented\ncan generalize to other types of environments.", "I want the talk to be as simple and fast as possible, with a lot of graphical examples, videos, and a Jupyter notebook.\nThe Q&A session is the time to apply some social engineering to get me to talk about the details that you find more interesting.\nI have prepared additional material covering the most common questions and concerns, but feel free to ask whatever you want, I love challenging questions ;)", "Some of the topics covered in the additional material are:", "Google spreadsheet with all bencharks on Atari", "Code used to run the examples", ". (Not merged to the FractalAI repo yet)"], "date": ["Wednesday 25 July"], "tags": ["Science", "Deep Learning", "Algorithms", "The Answer to Life the Universe and Everything Else", "Case Study"]},
{"title": ["Good features beat algorithms"], "author": ["Pietro Mascolo"], "description": ["In Machine Learning and Data Science in general, understanding the data is paramount. This understanding can come from many different sources and techniques: domain expertise, exploratory analysis, SMEs, some specific Machine Learning techniques, and feature engineering.\nAs a matter of fact, most Machine Learning and Statistical analysis strongly depends on how the data is prepared, thus making feature engineering very important for any serious Machine Learning enterprise.", "\u201cFeature engineering is the process of transforming raw data into features that better represent the underlying problem to the predictive models, resulting in improved model accuracy on unseen data.\u201d", "In this talk we will discuss what feature engineering  and feature selection are; how to select important features in a real-world dataset and how to develop a simple, but powerful ensemble to measure feature importance and perform feature selection.", "Familiarity with intermediate concepts of the Python programming language is required to follow the implementation steps. General knowledge of the basic concepts of Machine Learning and data cleaning will be useful, but not strictly necessary, to follow the discussion on feature selection and feature engineering."], "date": ["Friday 27 July"], "tags": ["Data", "Data Science", "Algorithms", "Python 3", "Machine-Learning"]},
{"title": ["Getting Started with Mypy and Type Checking"], "author": ["Jukka Lehtosalo"], "description": ["Ever wondered if you should try type checking in your Python project, or what it takes to get started with mypy? I will show how to introduce type checking the easy way, one step at a time.", "Dropbox was an early adopter of type checking and mypy, and we\u2019ve been gradually adding type annotations to our large production codebases since 2016. Engineers love how type annotations improve the clarity of code, and how mypy can surface hard-to-find bugs. We\u2019ve learned a lot in the process of annotating millions of lines of code, and in this talk you\u2019ll learn battle-tested approaches for adding type checking to an existing codebase.", "I expect no previous experience with mypy. You\u2019ll benefit the most if you\u2019ve worked on a project with multiple developers."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Type-Hinting", "Tooling", "Code Analysis"]},
{"title": ["Get Productive with Python in Visual Studio Code"], "author": ["Dan Taylor"], "description": ["In this demo driven session, we\u2019ll show you how to use the cross-platform, free, and open source Visual Studio Code for all your Python development needs. From editing, to linting, to debugging and more, you will learn how to get started, as well as tips and tricks to save you time in your everyday development lifecycle.", "If you\u2019re an experienced Python developer, you will learn how to take advantage of all of Visual Studio Code\u2019s capabilities to maximize your productivity. If you\u2019re a new Python developer, you will learn more about Python and how to use Visual Studio Code to get up and running quickly.", "We will start by showing how to create a new application, configure linting, manage virtual environments, and run code. Then we\u2019ll show how to use more powerful features like debugging, unit testing, the Docker extension, and Visual Studio Live Share for collaborative editing and debugging with your co-workers. ", "Code available at: http://github.com/qubitron/pydemo"], "date": ["Friday 27 July"], "tags": ["Development", "Debugging", "Programming", "Tooling", "Python general"]},
{"title": ["From linear algebra to machine learning"], "author": ["Omar Guti\u00e9rrez"], "description": ["Math is a crucial skill for people who are interested in Data Science and Machine Learning. Until now, most of the people who are doing Data Science have a strong background in math, usually, people with master or Ph.D. degrees. ", "However, this fact seems to change in the next years, after the hype of Machine Learning we are facing a process of ", "democratization", ". Now the door of Data Science is open for everyone.", "To ", "truly madly deeply", " understand how the machine learning algorithms work we need to understand some mathematical concepts. In this tutorial, I would like to share my experience in the process of learning some of those concepts. ", "What I want to do is build a bridge between those concepts and Python, more specifically, ", "SciPy", " and ", "NumPy", " and ", "TensorFlow", ".  Basically is ", "just another tutorial about vectorization", ", in this case, oriented to understand and implement machine learning algorithms and the mathematical foundation that supports it.", "The material of the talk can be found ", "here"], "date": ["Friday 27 July"], "tags": ["Scientific Libraries (Numpy/Pandas/SciKit/...)", "Data Science", "Data", "Machine-Learning", "Jupyter/iPython"]},
{"title": ["From Zero to Azure with Python, Docker containers, and Visual Studio Code"], "author": ["Dan Taylor"], "description": ["In this session we will walk through creating a Python web app\nwith Docker and deploying it to Microsoft Azure using the free,\ncross-platform, and open-source Visual Studio Code. We will also show\nusing hosted Jupyter notebooks in Azure Notebooks to analyze data, and\nstoring data in CosmosDB using the Azure SDK for Python. If you\u2019re\nexcited about Python and want to learn more about the capabilities of\nAzure, then this session is for you. We will cover all of the basics, no\nexperience with Azure, containers, cloud computing, or Visual Studio\nCode necessary!", "Code Repository: https://github.com/qubitron/zerotoazure-flaskcosmos"], "date": ["Wednesday 25 July"], "tags": ["Windows", "Web", "Docker", "Cross-Platform-Development"]},
{"title": ["Fuzzy Matching - Smart Way of Finding Similar Names Using Fuzzywuzzy"], "author": ["Cheuk Ting Ho"], "description": ["Matching strings should be one of the first natural language processing problem that human encounter since we start use computer to handle data. Unlike numerical value which has an exact logic to compare them, it is very hard to say how alike two strings are for a computer. One may compare them character by character and have an idea of how many characters in the pair of stings are the same. Unfortunately in most application we need computer to perceive strings like we do and therefore we have to use fuzzy matching. Fuzzy matching on names is never straight forward though, the definition of how \u201cdifference\u201d of two names are really depends case by case. For example with restaurant names, matching of words like \u201ccafe\u201d \u201cbar\u201d and \u201crestaurant\u201d are consider less valuable then matching of some other less common words. Also, do we consider company names that matches partly (like \u201cHappy Unicorn company\u201d and Happy Unicorn co.\u201d) are the same?", "In the first half of the talk Levenshtein Distance, a measure of the similarity between two strings, will be explained. Different functions in Fuzzywuzzy like \u201cpartial", "ratio\u201d and \u201ctoken", "sort_ratio\u201d will also be explored and compared for difference. It is very important to understand our tool and choose the right one for our task. Then in the second half, we will start tackling the example problem: matching company names, we will show that besides using Fuzzywuzzy, we have to also handle problem like finding and avoid matching of common words and speeding up the matching process by grouping the names. By combining all tricks and techniques that we demonstrate, we will also evaluate how efficient this method is and the advantage of using this method.", "This talk is for people in all level of Python experience who would like to learn a trick or two and would like to be able to solve similar problems in the future. Theory of how the library works will be explained and It is easy to be pick up even for beginners."], "date": ["Wednesday 25 July"], "tags": ["Beginners", "Case Study", "Data", "Open-Source", "Natural Language Processing"]},
{"title": ["Faster Python startup"], "author": ["Jeethu Rao"], "description": ["The cPython\u2019s startup speed generally quite fast compared to other similar dynamic language interpreters. Despite this, the interpreter\u2019s startup time increases linearly with the number and size of imported python modules. Although interpreter startup speed isn\u2019t a significant concern in long running servers, it does matter for the command line and other frequently launched applications.", "One of the oldest tricks in the book, when it comes to performance optimizations is to perform frequent and expensive operations fewer times and reuse results from previous invocations. We noticed that the overhead of reading and un-marshalling .pyc files at startup can be eliminated if we could directly embed code objects and their associated object graph from .pyc files into the data segment of the cPython binary. This technique is quite similar to the approach taken by image based languages like Smalltalk in the past. Implementing this for cPython is made simpler because marshaled code objects in .pyc files contain a subset of the types of objects that marshal format supports. With this approach, loading a module included in the python binary is as cheap as dereferencing a pointer, albeit at the cost of increased binary size.", "This talk will discuss the approach taken to implement the aforementioned idea for Python 3.6 and the challenges faced in implementing it. It will also talk about benchmark results from the improvements and possible future directions for this work. Although this talk delves into cPython internals, no prior experience with cPython internals is required to follow along."], "date": ["Friday 27 July"], "tags": ["Performance", "Compiler and Interpreters", "CPython"]},
{"title": ["ETL pipeline to achieve reliability at scale"], "author": ["Isabel Lopez"], "description": ["In an online betting exchange, thousands of money related transactions are generated per minute. This data flow transforms a common and, in general, tedious task such as accounting into an interesting big data engineering problem. At Smarkets, accounting reports serve two main purposes: housekeeping of our financial operations and documentation for the relevant regulation authorities. In both cases, reliability and accuracy are crucial in the final result. The fact that these reports are generated daily, the need to cope with failure when retrieving data from previous days, and the fast growing transaction volume obsoleted the original accounting system and required a new pipeline that could scale.", "This talk presents the ETL pipeline designed to meet the constraints highlighted above, and explains the motivations behind the tech stack chosen for the job, which includes Python3, Luigi and Spark among others. These topics will be covered by describing the main technical problems solved with our design:\n- Fault tolerance and reliability, i.e ability to identify faulty steps and only rerun those instead of the whole pipeline.\n- Fast input/output.\n- Fast computations."], "date": ["Wednesday 25 July"], "tags": ["Case Study", "Python 3", "Big Data", "Scientific Libraries (Numpy/Pandas/SciKit/...)"]},
{"title": ["Easy interactive data applications with Dash"], "author": ["Matteo Guzzo"], "description": ["Plotly Dash is a Python  framework for building interactive dashboards and web data applications, based on Flask, React.js, and Plotly. It allows a python-only approach to something that previously required knowledge of Javascript, heavily reducing the overhead required to create a web application. I\u2019ll show how easy it is to set up a small interactive web app using data from the Twitch API and to expand it at will, using only Python. "], "date": ["Friday 27 July"], "tags": ["Web", "Data Science", "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)", "Scientific Libraries (Numpy/Pandas/SciKit/...)", "Visualization"]},
{"title": ["Exploring the Python AST Ecosystem"], "author": ["Chase Stevens"], "description": ["Materials are available at https://github.com/hchasestevens/europython-2018", "This session will introduce attendees to Python\u2019s rich ecosystem of abstract syntax tree tooling and libraries, with an emphasis on practical applications in static analysis and metaprogramming. Attendees should be fully comfortable with Python syntax and semantics, but familiarity with the ast module itself will not be necessary. ", "The talk will begin with a conceptual overview of ASTs, including a brief look at Python\u2019s built-in introspection capabilities. It will introduce tools for AST visualization (astor, showast, python-ast-explorer), creation (asttools, meta), and transformation to source code (codegen). ", "How the AST can be used for static analysis will be covered; this will include discussion of Python\u2019s built-in facilities (NodeVisitor) as well as of the 3rd party tools astsearch, astpath, and bellybutton. The talk will demonstrate the advantages and limits of these tools in comparison to other static analysis tooling (pylint, mypy); particular attention will be paid to how these tools can be incorporated into attendees\u2019 workflows and  existing codebases and projects. ", "Tooling for Python AST manipulation and metaprogramming will be the final topic covered, focusing on the use of the NodeTransformer built-in. The talk will cover practical applications and examples of metaprogramming, such as metaprogramming for DSLS (pony, xpyth), runtime code manipulation (patterns, yield-from), and others (e.g. assertion rewriting in pytest).", "While the talk will touch only briefly on each of the applications discussed, by the end of the session attendees should have a firm grasp of the kinds of problems the AST can be used to solve, what existing AST tooling can accomplish, and what resources are available for the development of their own AST tools."], "date": ["Friday 27 July"], "tags": ["Static Analysis", "Python general", "Tooling", "Code Analysis", "Use Case"]},
{"title": ["EduBlocks - Making the transition to Python easier!"], "author": ["Joshua Lowe"], "description": ["Looking for ways to make the transition from block based programming to Python easier, then look no further!  In this talk 14 year old Josh will introduce you to his project called EduBlocks, which is a drag and drop version of Python 3 that he has created to help teachers introduce programming languages, like Python, to children at an earlier age.\nThe goal of the project is to make the transition from block based programs like Scratch to Python easier for students and teachers, as presently there is no drop-in solution that bridges this gap. Josh will share his journey so far with you, from how he came up with the idea when he was only 11 years old, the developments along the way, the exciting plans for the future and how schools today in over 72 different countries  around the world are making use of EduBlocks on the Raspberry Pi and micro:bit. "], "date": ["Friday 27 July"], "tags": ["MicroPython", "Education", "Python 3", "Community", "Open-Source"]},
{"title": ["Domain-Driven Design Patterns in Python"], "author": ["Robert Smallshire"], "description": ["Domain-Driven Design (DDD) is an approach to software development that emphasises high-fidelity modelling of the problem domain, and which uses a software implementation of the domain model as a foundation for system design. This approach helps organize and minimize the essential complexity of your software.  DDD has been used with success within the traditional enterprise programming ecosystems of Java and .NET, but has seen only limited adoption in the Python community.", "In this talk we introduce Python programmers to the core tactical patterns of DDD and show how they can be realised in idiomatic Python, freeing the most valuable parts of your system \u2013 the domain model \u2013 from onerous dependencies on particular databases or application frameworks.", "In this talk we share what we\u2019ve learned from applying DDD in Python to large projects."], "date": ["Friday 27 July"], "tags": ["Software Design", "Abstractions", "Programming", "Architecture", "Databases"]},
{"title": ["Developing in a black hole: vim, tmux, httpie and jq"], "author": ["Francisco Javier Aceituno Lapido"], "description": ["\u201cProductivity depends on the knowledge you have of the tools used.\u201d", "Do you feel that the development tools you use are heavy? \nDo you think that they make you less productive?\nDo you want to have maximum productivity without lifting your hands from the keyboard? ", "If so, this talk is for you.", "In this talk, I will show what are the tools I use every day in software development at OnTruck and how you can integrate", "the text editor, vim\nthe terminal multiplexer, tmux\nthe HTTP client, httpie\nand the json processor, jq", "to get a very productive development environment, all running on a simple terminal."], "date": ["Thursday 26 July"], "tags": ["Development", "Agile", "Unix", "Tooling", "Command-Line"]},
{"title": ["Django structure for scale and longevity"], "author": ["Radoslav Georgiev"], "description": ["Django is great.", "But as we add new features, as our dev team grows & the software needs to be stable on production, things can get quite messy.", "We are going to look at some common patterns, derived from experience, on how to structure your Django project for scale and longevity.", "Main topics are:", "We are going to talk about when to rely on existing abstraction so it\u2019s actually helpful & when to avoid existing abstraction, and code things ourselves.", "The examples showed in this talk are derived from working with Django in the last 5 years on projects with:", "Key takeaways from the talk:", "The talk is great for all levels of Django knowledge - from beginners to advanced users & teams.", "The main way of getting the point across is going to be by showing regular code, talking how it can get messy & then following up with examples of improving that code. Hopefully this talk will start a lot of discussion afterwards.", "Breakdown of the talk:"], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Clean Code", "Python 3", "failures/mistakes", "Django"]},
{"title": ["Debugging Your Code with Data Visualization"], "author": ["James Saryerwinnie"], "description": ["Let\u2019s face it.  Sometimes our code just isn\u2019t working how we expect it to work.\nWhen this happens, we fall back to our trusty tools to help us\ndebug: pdb, the logging module, or even simple print statements.  But sometimes\nthat just isn\u2019t enough, we still can\u2019t figure out why our code is broken.\nWe need something more.", "There are a number of fantastic libraries in python for\ncreating data visualizations.  These libraries are commonly used for\nanalyzing and visualizing large sets of data, but don\u2019t see as much\nusage when it comes to helping us write and debug our code.", "What if we could combine the two?  What if we could leverage data\nvisualization tools to understand what our program is doing?  Sometimes, by\nseeing a visual representation of what our code is doing, it becomes much\neasier to understand why our code is not working.  We don\u2019t need to create\npublication quality graphs and charts, we just need to generate quick, one-off\nvisualizations to understand what our code is doing.  What we want is the \u201cdata\nvisualization\u201d equivalent to print() statements.", "To help illustrate this point, I will walk through some of the hardest\nbugs I\u2019ve had to track down while working on projects such as the AWS CLI and\nboto3, the AWS SDK for Python.  For each bug, I\u2019ll show you how I was able to\nleverage data visualization techniques to troubleshoot and fix these bugs.\nCome learn how to debug more efficiently by leveraging data visualization."], "date": ["Thursday 26 July"], "tags": ["Public Cloud (AWS/Google/...)", "Visualization", "Case Study", "Debugging"]},
{"title": ["Django queries optimization"], "author": ["Ivaylo Donchev"], "description": ["Collecting data from multiple Models is a common flow in Django development. In most of the cases ", "prefetch_related", " and ", "select_related", " do all of the job for optimizing the queries.", "When the models structure become complicated enough and we\u2019ve put our logic for collecting these items in models\u2019 properties we suddenly cannot use ", "prefetch_related", " or ", "select_related", " anymore. Our View \u2018s queries count depends on selected items count with high complexity. The problem is in the selection logic: we\u2019ve implemented an algorithm which calculates something and we cannot prefetch or select all of the objects. ", "So this talk\u2019s purpose is: To show how to use Django ORM to move the selection logic, the calculations, the aggregations over group of objects from our python code to our database and moving all of the logic for this in one place - the queryset and test it easily."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Django", "Databases", "PostgreSQL", "APIs"]},
{"title": ["Deep Learning with PyTorch for Fun and Profit"], "author": ["Alexander Hendorf"], "description": ["There are all these great blog posts about Deep Learning describing all that awesome stuff.  - Is it all that easy? Let\u2019s check!", "We\u2019ll look into: style transfer (making a picture look like painting), speech generation (like Siri or Alexa) and text generation (writing a story).\nIn this talk I\u2019ll describe the whole journey: A fun ride from the idea to the very end including all the struggles, failures and successes.", "Steps, we\u2019ll cover:", "The data challenge: get the data ready", "Have it run on your Mac with PyTorch and an eGPU", "Creating a character-level language models with an Recurrent Neural Network", "Creating a text generator", "Creating artwork"], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Case Study", "Deep Learning", "failures/mistakes", "Natural Language Processing"]},
{"title": ["Data is not flat"], "author": ["Alisa Dammer"], "description": ["Feature engineering and model training often comes hand in hand. Some tasks have an overwhelming amount of high dimensional data, some tasks have little data or very low-dimension data. \nThis talk targets the latter problem: what can be done with the data itself to significantly improve the model performance and when manual feature engineering does make sense. ", "\nA sample case of Classification problem with NN will be presented\nThe goal of the talk is to remind about something every person working with the data thinks and probably uses.\n Slides, Jupyter notebook with the example, test and train sets, NN configuration file are available on:\nhttps://github.com/Alisa-lisa/conferences"], "date": ["Thursday 26 July"], "tags": ["Algorithms", "Data Science", "Data", "Machine-Learning"]},
{"title": ["Cython to speed up your Python code"], "author": ["Stefan Behnel"], "description": ["Cython", " is not only a very fast and comfortable way to talk to native code and libraries, it is also a widely used tool for speeding up Python code. The Cython compiler translates Python code to C or C++ code, and applies many static optimisations that make Python code run visibly faster than in the interpreter. But even better, it supports static type annotations that allow direct use of C/C++ data types and functions, which the compiler uses to convert and optimise the code into fast, native C. The tight integration of all three languages, Python, C and C++, makes it possible to freely mix Python features like generators and comprehensions with C/C++ features like native data types, pointer arithmetic or manually tuned memory management in the same code.", "This talk by a core developer introduces the Cython compiler by interactive code examples, and shows how you can use it to speed up your Python code. You will learn how you can profile a Python module and use Cython to compile and optimise it into a fast binary extension module. All of that, without losing the ability to run it through common development tools like static analysers or coverage test tools."], "date": ["Thursday 26 July"], "tags": ["Cython", "Compiler and Interpreters", "C-Languages", "Performance"]},
{"title": ["asyncio in Practice: We Did It Wrong"], "author": ["Lynn Root"], "description": ["This talk is aimed at those that have at least intermediate experience in Python and have played around with asynchronous Python using asyncio or other libraries. I want the audience to learn from my mistakes! For instance, how easy it is to get into \u201ccallback hell\u201d (and how to avoid/get out of it), how to screw up thread safety and deadlock yourself, and making code async but not actually concurrent.", "I\u2019ll talk through some anti-patterns and best practices that I learned the hard way. This includes proper concurrency, calling coroutines from synchronous code, working with threads and threadsafety, properly shutting down an async programs, and hidden \u201cgotchas\u201d."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "ASYNC / Concurreny", "failures/mistakes", "Multi-Threading"]},
{"title": ["All You Need is Pandas: Unexpected Success Stories"], "author": ["Dimiter Naydenov"], "description": ["Learning to use the awesome Pandas toolkit helped me immensely in lots of ways. Finding novel,\nefficient solutions to complex day-to-day problems with Pandas not only saves time, but can be fun\nand rewarding experience.", "In this talk I\u2019ll present use cases I had to solve, but the \u201ctraditional\u201d approach proved tough\nand/or otherwise frustrating implement nicely. Since I was just starting to learn Pandas, decided to\ntry an alternative solution with it. What I learned changed the way I think about data processing\nwith Python, and it only got better since!", "The use cases deals with extracting pen strokes from handwritten SVG samples, and recomposing them\ninto reusable letters and numbers. When you need to compare each stroke to all others, often more\nthan once, resulted in inefficient, slow, and hard to maintain code. Even a naive Pandas approach\nwith loops helped to reduce both the memory footprint, and improve the performance considerably!\nImproving the implementation further, vectorizing inner loops, and taking advantage of multi-index\noperations, I managed to get the same results, using less memory and a lot faster (by orders of\nmagnitude)."], "date": ["Wednesday 25 July"], "tags": []},
{"title": ["Adventures in compatibility: emulating CPython's C API in PyPy"], "author": ["Ronan Lamy"], "description": ["PyPy is a fast and compliant implementation of Python. In other words, it\u2019s an interpreter for the Python language that can act as a full replacement for the reference interpreter, CPython. It\u2019s optimised to enable efficient just-in-time compilation of Python code to machine code, and has releases matching versions 2.7, 3.5 and soon(ish) 3.6. The PyPy project also developed cffi as a clean and efficient way of interfacing with C code.", "However, many libraries in the Python ecosystem are implemented as C extensions, which target CPython\u2019s C API. Many others use Cython, which builds C extensions under the hood. Therefore, PyPy needs an emulation layer for the C API. ", "This emulation needs to bridge the differences between the implementation languages and the object models of CPython and PyPy. The solution is called cpyext. It\u2019s implemented in a mixture of RPython and C, with most of the API functions and macros implemented in RPython. cpyext exposes PyObjects to the extension code that appear similar to CPython objects (as long as extension writers stay within the fuzzily defined boundaries of the public API) but are merely \u2018shadows\u2019 of the real PyPy objects.", "After a brief presentation of PyPy, its goals, and its current statuts and roadmap, this talk will dive into the vexed topic of its handling of C extensions.  By the end of it, the audience should understand the operating principles of cpyext and have a clearer understanding of what happens when you install and run numpy, for instance, on top of PyPy. Some basic familiarity with CPython internals and how C extensions are made will be assumed."], "date": ["Wednesday 25 July"], "tags": ["PyPy", "Compiler and Interpreters", "C-Languages", "Scientific Libraries (Numpy/Pandas/SciKit/...)"]},
{"title": ["Addressing multithreading and multiprocessing in transparent and Pythonic ways"], "author": ["David Liu"], "description": ["With the increase in computing power, harnessing and controlling one\u2019s code out of the single-threaded realm becomes an ever-increasing problem, coupled with the desire to stay in the Python layer. With the recent tools and frameworks that have been published, escaping the GIL cleanly is much easier than before, allow one\u2019s Python code to effectively utilize multi-core and many core architectures in the most Pythonic ways possible. In this talk, learn about how to utilize static multiprocessing for process pinning, and effectively balancing thread pools with a monkey-patched import of threading modules.", "Overview:", "Introduction to multithreading and multiprocessing in Python", "History of multithreading+multiprocessing in Python, classic frameworks ", "Problems that can occur (oversubscription, nested parallelism issues, process hopping, pool resource on shared machines) ", "Python accessing bigger hardware over the last few years (28+ cores, etc) ", "When to stay in the GIL, and when to escape it ", "The advantages and safety of the GIL", "Python-level exiting of the GIL; analysis of when to return to single-threaded, and when threading is a deceivingly bad idea", "Accountability of frameworks that natively exit the GIL", "The new multithreading and multiprocessing libraries and techniques", "static multiprocessing module (smp) (and monkey patching of multiprocessing)", "thread pool control with command line calls of Python ( python -m tbb -p 8)", "Putting it all together", "Examples of using static multiprocessing on a large machine to stop oversubscription", "Example of pseudo-daemon process on 4-core machine by processor pinning", "Thread pool control on a simple NumPy example", "Summary - Best practices for using above methods to control multithreading+multiprocessing", "What needs to be done in the space (frameworks and things that need to be exposed)", "Problems that still exist in the area", "Q&A"], "date": ["Friday 27 July"], "tags": ["Best Practice", "Multi-Processing", "Multi-Threading", "CPython", "Scientific Libraries (Numpy/Pandas/SciKit/...)"]},
{"title": ["Air Quality & Python: Developing Online Analysis Tools"], "author": ["Douglas Finch"], "description": ["Poor surface air quality has a range of implications for human health and the economy. Without concerted mitigation efforts, trends in urbanisation and aspirations for progressive economic growth will result in poorer levels of air quality. Analysing and interpreting the incoming data streams from heterogeneous air quality measurement stations is critical for tackling the problem and for developing early warning systems. I am using Python to develop a set of online analysis tools (ukatmos.org) to enable the public to quickly and easily plot air quality data in many ways, effectively freeing up information that is already publicly available but in awkward formats and often involves development of code. We anticipate these tools will also support data science classes at school, and can speed up scientific research by minimizing effort in repeating analyses. ", "This talk will cover how the tools integrate numerous Python libraries (e.g. Pandas and NumPy), the Django web framework, the Plot.ly tools for creating interactive graphs, and SQL to address the large data volumes. Developing these Python tools in an adaptive and scalable way allows it to grow as more data become available, e.g. satellite observations. Adaptability also includes evolving user requirements. This project will also be developed into a Python library allowing the user to easily use the online analysis tools from an offline Python environment. "], "date": ["Friday 27 July"], "tags": ["Case Study", "Data Science", "Django", "Web", "Science"]},
{"title": ["A Jupyter Enhancement Proposal Story"], "author": ["Raniere Silva"], "description": ["Python users should be familiar with the concept of Python Enhancement Proposals (PEPs), the way that the Python language evolves over time. In a similar fashion, the Jupyter project has Jupyter Enhancement Proposals (JEPs). This talk with cover the proposer first-hand experience when submiting JEP 23 - Add Template as Metatada enhancement proposal from it\u2019s beginning, during EuroPython 2017, up to its current status. We will, in addition, present efforts made as part of the OpenDreamKit project to perform Jupyter notebooks conversions using custom metadata, templates, and exporters, in a programmatic way. ", "Outline", "0:00 - 0:05 Who are we? We are impostors!\n0:05 - 0:10 Our previous experience with Jupyter Notebook. We will talk about the time that Software Carpentry used Jupyter Notebook for their lesson creation and OpenDreamKit Jupyter notebook programmatic notebooks conversion.\n0:10 - 0:15 You are not alone. We will talk how the idea for the Jupyter Enhancement Proposals (JEPs) borned at EuroPython 2017 Help Desk\n0:15 - 0:20 Writing our first Jupyter Enhancement Proposals. We will cover our steps to create the pull request required by the Jupyter Project.\n0:20 - 0:25 What is the current status of the Jupyter Enhancement Proposals? We will cover any progress from the time of this talk proposal submission and the date of it presentation.\n0:25 - 0:30 Time for questions "], "date": ["Wednesday 25 July"], "tags": ["Case Study", "Jupyter/iPython", "Community"]},
{"title": ["A tale of refactoring"], "author": ["Emmanuelle Delescolle"], "description": ["A couple years ago I was approached by a client to help them improve the performance and maintainability of their code.", "That code was filled with very long functions, some of them with very similar code and the project was really hard to understand as a whole.", "My first reflex was to refactor this code code to make it more understandable. In my opinion, it did fit part of my assignment as understandable code is easier to maintain but it was also very helpful later in letting me make small changes with full knowledge of what was going to be affected by those changes.", "Large methods and functions is something that creeps into our code whether we plan for it or not. This talk is about one way to deal with it.", "This talk will be based on code provided by the GildedRose Refcatoring Kata: https://github.com/emilybache/GildedRose-Refactoring-Kata", "Prerequisites:\n- Basic knowledge of Python\n- Basic knowledge of OOP", "Goals:\n- Demonstrate one approach for refactoring code\n- Show how to leverage Python\u2019s dynamic nature to make code simpler"], "date": ["Friday 27 July"], "tags": ["Case Study", "Programming", "failures/mistakes", "Code Analysis", "Clean Code"]},
{"title": ["A Python implementation in Rust?"], "author": ["Windel Bouwman"], "description": ["Rust is a fairly new programming language aimed as a competitor of C.\nThere are already attempts to write extension modules in rust and load\nthem into CPython. A whole new approach would be to re-implement the Python\nlanguage in rust.", "This is what the rspython project is about: implementing\na python interpreter in rust. Rust already has many features such as vectors,\nhashmaps and strings as unicode. There also exist already modules for\nregular expressions and dealing with files, so a lot can be re-used in\nthis area.", "During this talk we will dive into rust and python and the design of\nthe rspython. We will present some challenges and opportunities. Also\nwe will show the current state of this project in a demo."], "date": ["Thursday 26 July"], "tags": ["Compiler and Interpreters", "Python 3"]},
{"title": ["White Mars: living far away from any form of life"], "author": ["Marco Buttu"], "description": ["Concordia Station is a French/Italian facility located inside Antarctica, in a plateau called Dome-C, in the middle of nowhere. A dark and cold place: no Sun from May to August, temperatures around -80 Celsius degress, no life. Here I am living and performing scientific research with other 12 collegues from Italy, France and Austria. We are the most isolated people on Earth, more than the austronauts in the International Space Station. There is no way to move from Concordia until November, and no one can come. It is like to live in another planet, and that is why the European Space Agency is interested in making bio-medical research on us, in order to better understand how the human body behaves in a such extraterrestrial environment. We will introduce our studies, describe this place and our life here, and of course also speak about Python."], "date": ["Wednesday 25 July"], "tags": ["Science", "Case Study"]},
{"title": ["How to Ignore Most Startup Advice and Build a Decent Software Business"], "author": ["Ines Montani"], "description": ["It\u2019s a great time to be a software developer. Platforms are steadily becoming more mature, useful tools are released almost daily and things that seemed hopelessly futuristic only a few years ago are suddenly commercially viable. Despite this, the software world is awash with bullshit. The success of the largest technology companies has led to a very skewed set of lessons. This narrow focus is amplified by the venture capital industry and the fact that nobody really knows what\u2019s going to happen next.", "The good news is, none of this actually matters. The basics of creating something useful and selling it for money remain the same. In this talk, I\u2019m not going to give you \u201cone weird trick\u201d or tell you to ~* just follow your dreams *~. But I\u2019ll share some of the things we\u2019ve learned from building a successful software company around commercial developer tools and our open-source library spaCy."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Natural Language Processing", "Business", "failures/mistakes", "Use Case"]},
{"title": ["10 years of EuroPython and the Python community"], "author": ["Dougal Matthews"], "description": ["This talk will take you on a journey from Birmingham to Edinburgh via Florence, Berlin, Bilbao and Rimini. The last 10 years of EuroPython.", "This will be a trip down memory lane where we look at how the language, community and conference have evolved with some personal anecdotes along the way.", "This will be in part a retrospective, where we will look at what we have done well and where we can do better. Finally, we will look at some aspirations and ideas for the coming years."], "date": ["Thursday 26 July"], "tags": ["EuroPython", "Community"]},
{"title": ["Die Threads"], "author": ["David Beazley"], "description": ["In the brave new world of async, threads are now a thing of the past. Or are they not?"], "date": ["Wednesday 25 July"], "tags": ["Python general", "ASYNC / Concurreny", "Multi-Threading"]},
{"title": ["A Taxonomy of Decorators: A-E"], "author": ["Andy Fundinger"], "description": ["This talk will briefly go over the various decorator syntaxes before breaking up the common usages of decorators into 5 categories. Effectively, these are design patterns for decorators. The usages to be considered are:"], "date": ["Friday 27 July"], "tags": ["Software Design", "Development", "Programming", "Python general"]}
][
{"title": ["Citizen Science with Python"], "author": ["Ian Ozsvald"], "description": ["You could make a difference in the world with a little science and Python. We\u2019ll look at several data-driven humanitarian and healthcare projects developed using Python and, all going well, run some audience experiments. By the end of the talk I hope you\u2019ll be looking to run your own experiments with the scientific Python stack."], "date": ["Friday 27 July"], "tags": ["Science", "Data"]},
{"title": ["Automating testing and deployment with Github and Travis"], "author": ["Alex Gr\u00f6nholm"], "description": ["Maintaining an open source project can be a drag. Especially when you have dozens of them. Besides being tedious , making a new release can be a very error prone process. Maybe you forgot to run the full test suite, forgot to update the release version or tag the release on VCS or maybe you bungled up the upload to PyPI. Fortunately there are things you can do to eliminate entire categories of human errors in the release process \u2013 by automating them.", "This talk uses a trivial project as an example to present a release pipeline, from packaging and testing to deployment, that only requires you to push a git tag to your Github repository. Automation then takes care of the rest and you end up with a new release on PyPI (yay!).", "This talk is mostly useful for open source developers using Github to house their projects, as it heavily leans on Travis, its continuous integration provider . You also need to be at least somewhat familiar with Python packaging and testing in order to follow along. Familiarity with common tools like pytest and tox helps but is not strictly required."], "date": ["Friday 27 July"], "tags": ["Best Practice", "Packaging", "Deployment/Continuous Integration and Delivery", "Tooling"]},
{"title": ["Building a Naive Bayes Text Classifier with scikit-learn"], "author": ["Obiamaka Agbaneje"], "description": ["Machine learning algorithms used in the classification of text are Support Vector Machines, k Nearest Neighbors but the most popular algorithm to implement is Naive Bayes because of its simplicity based on Bayes Theorem.", "The Naive Bayes classifier is able to memorise the relationships between the training attributes and the outcome and predicts by multiplying the conditional probabilities of the attributes with the assumption that they are independent of the outcome.  It is popularly used in classifying data sets that have a large number of features that are sparse or nearly independent such as text documents.", "In this talk, I will describe how to build a model using the Naive Bayes algorithm with the scikit-learn library using the spam/ham youtube comment dataset from the UCI repository.  Preprocessing techniques such as Text normalisation and Feature extraction will be also be discussed."], "date": ["Thursday 26 July"], "tags": ["Scientific Libraries (Numpy/Pandas/SciKit/...)", "Data", "Natural Language Processing"]},
{"title": ["Building new NLP solutions with spaCy and Prodigy"], "author": ["Matthew Honnibal"], "description": ["Commercial machine learning projects are currently like start-ups: many projects fail, but some are extremely successful, justifying the total investment. While some people will tell you to \u201cembrace failure\u201d, I say failure sucks \u2014 so what can we do to fight it? In this talk, I will discuss how to address some of the most likely causes of failure for new Natural Language Processing (NLP) projects. My main recommendation is to take an iterative approach: don\u2019t assume you know what your pipeline should look like, let alone your annotation schemes or model architectures. I will also discuss a few tips for figuring out what\u2019s likely to work, along with a few common mistakes. To keep the advice well-grounded, I will refer specifically to our open-source library spaCy, and our commercial annotation tool Prodigy."], "date": ["Thursday 26 July"], "tags": ["Deep Learning", "Data Science", "Natural Language Processing"]},
{"title": ["Bridging the Gap: from Data Science to Production"], "author": ["Florian Wilhelm"], "description": ["A recent but quite common observation in industry is that although there is an overall high adoption of data science, many companies struggle to get it into production. Huge teams of well-payed data scientists often present one fancy model after the other to their managers but their proof of concepts never manifest into something business relevant. The frustration grows on both sides, managers and data scientists.", "In my talk I elaborate on the many reasons why data science to production is such a hard nut to crack. I start with a taxonomy of data use cases in order to easier assess technical requirements. Based thereon, my focus lies on overcoming the two-language-problem which is Python/R loved by data scientists vs. the enterprise-established Java/Scala. From my project experiences I present three different solutions, namely 1) migrating to a single language, 2) reimplementation and 3) usage of a framework. The advantages and disadvantages of each approach is presented and general advices based on the introduced taxonomy is given. ", "Additionally, my talk also addresses organisational as well as problems in quality assurance and deployment. Best practices and further references are presented on a high-level in order to cover all facets of data science to production.", "With my talk I hope to convey the message that breakdowns on the road from data science to production are rather the rule than the exception, so you are not alone. At the end of my talk, you will have a better understanding of why your team and you are struggling and what to do about it.    "], "date": ["Wednesday 25 July"], "tags": ["Best Practice", "Data Science", "Clean Code", "DevOps general", "Business"]},
{"title": ["Building a Question Answering System using Deep Learning Techniques "], "author": ["Rricha Jalota"], "description": ["Question Answering is an active area of research where the goal is to provide brief and crisp answers to natural language questions. Given a question and a text passage, the task is to answer the question based on the information given in the passage. Traditionally, NLP techniques like noise removal, tokenization,  dependency parsing, named entity recognition etc. are used to extract an answer from the passage. With Deep Learning techniques gaining traction, the focus has now shifted to how neural network architectures can improve the accuracy of Question Answering Systems. \nThis talk will help the audience understand how QA systems work and enable them to build one on their own! \nTalk Outline :\n1. Introduction to Question Answering(Reading Comprehension, in particular)\n2. Discuss available datasets\n3. Baseline Approach to solving the problem using NLP techniques\n4. Walk through the pipeline of deploying Deep Learning models (i.e. preprocessing dataset, generating  word embeddings, building an encoder-decoder model using LSTMs, attention networks and evaluating it) ", "Pre-requisites: Python, Basics of Neural Networks and NLP, Keras   "], "date": ["Friday 27 July"], "tags": ["Scientific Libraries (Numpy/Pandas/SciKit/...)", "Data Science", "Deep Learning", "Jupyter/iPython", "Natural Language Processing"]},
{"title": ["Autism in development"], "author": ["Ed Singleton"], "description": ["Autism is a condition that correlates with engineering.  Many people in the industry are diagnosed autistic, undiagnosed autistic, or near autistic.  There are many lessons that can be learned from how to deal with autistic people that are very useful in our industry.  These lessons are often also useful when dealing with non-autistic people.  There are many lessons on how to deal with your own autism that are useful to undiagnosed autistic people and near autistic people.", "We will cover the basics of autism, and related conditions.  We will cover simple tricks that can make discussions and changes easier in workplaces (\"10 Simple tricks to make your autistic colleagues shout less!\").  We will also cover techniques you can use for dealing with your own autistic tendencies (\"100 coping mechanisms to pretend that you are normal!\").", "I am a late diagnosis autistic person myself, and will discuss the difference between knowing and not knowing that you are autistic.  "], "date": ["Wednesday 25 July"], "tags": ["The Answer to Life the Universe and Everything Else", "Diversity", "workforce", "Community"]},
{"title": ["Asyncio in Python 3.7 and 3.8."], "author": ["Yury Selivanov"], "description": ["The talk is aimed to give attendees a clear picture of new asyncio features in Python 3.7 and give an idea of what to expect in Python 3.8.  As a CPython core developer and the lead asyncio maintainer I believe I have a unique perspective to share with EuroPython guests.", "Python 3.7 boasts a number of new amazing features: ", "The first part of the talk will be focusing on new APIs to explain them and give ideas how they can be used in production.", "The second part of the talk will be focused on what to expect to see in asyncio in Python 3.8:", "Some of these ideas are borrowed from Trio and Curio (two other popular async/await Python frameworks), many are borrowed from languages like Erlang and Scala. One thing I can say for certain is that 3.8 will be the biggest and most interesting asyncio release ever!"], "date": ["Wednesday 25 July"], "tags": ["Best Practice", "Distributed Systems", "ASYNC / Concurreny", "failures/mistakes", "Use Case"]},
{"title": ["Bad hotel again? Find your perfect match!"], "author": ["Elisabetta Bergamini"], "description": ["For most travellers, online reviews play a major role when it comes to choosing which hotel to stay in. But can we actually trust a hotel review? And if yes, how can we select which are the most meaningful and interesting for us among the billions available in platforms such as Booking.com, Tripadvisor, Facebook (just to mention a few)?\nFor 10 years now, at TrustYou we have built processes that analyze terabytes of hotel reviews at a global scale, and strive to understand what people complain about or like in the hotels worldwide.\nDealing with a huge amount of reviews written in tens of different languages - each having its own subtle shades of meanings - is the challenge we work on everyday. In this talk, we will show what goes on behind the scenes of the TrustYou Metareview and dive into the technologies and the algorithms that allow us to provide travellers with all the information they need to find the perfect hotel. "], "date": ["Wednesday 25 July"], "tags": ["Data Science", "Machine-Learning", "Natural Language Processing"]},
{"title": ["asyncio in Practice: We Did It Wrong"], "author": ["Lynn Root"], "description": ["This talk is aimed at those that have at least intermediate experience in Python and have played around with asynchronous Python using asyncio or other libraries. I want the audience to learn from my mistakes! For instance, how easy it is to get into \u201ccallback hell\u201d (and how to avoid/get out of it), how to screw up thread safety and deadlock yourself, and making code async but not actually concurrent.", "I\u2019ll talk through some anti-patterns and best practices that I learned the hard way. This includes proper concurrency, calling coroutines from synchronous code, working with threads and threadsafety, properly shutting down an async programs, and hidden \u201cgotchas\u201d."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "ASYNC / Concurreny", "failures/mistakes", "Multi-Threading"]},
{"title": ["Air Quality & Python: Developing Online Analysis Tools"], "author": ["Douglas Finch"], "description": ["Poor surface air quality has a range of implications for human health and the economy. Without concerted mitigation efforts, trends in urbanisation and aspirations for progressive economic growth will result in poorer levels of air quality. Analysing and interpreting the incoming data streams from heterogeneous air quality measurement stations is critical for tackling the problem and for developing early warning systems. I am using Python to develop a set of online analysis tools (ukatmos.org) to enable the public to quickly and easily plot air quality data in many ways, effectively freeing up information that is already publicly available but in awkward formats and often involves development of code. We anticipate these tools will also support data science classes at school, and can speed up scientific research by minimizing effort in repeating analyses. ", "This talk will cover how the tools integrate numerous Python libraries (e.g. Pandas and NumPy), the Django web framework, the Plot.ly tools for creating interactive graphs, and SQL to address the large data volumes. Developing these Python tools in an adaptive and scalable way allows it to grow as more data become available, e.g. satellite observations. Adaptability also includes evolving user requirements. This project will also be developed into a Python library allowing the user to easily use the online analysis tools from an offline Python environment. "], "date": ["Friday 27 July"], "tags": ["Case Study", "Data Science", "Django", "Web", "Science"]},
{"title": ["All You Need is Pandas: Unexpected Success Stories"], "author": ["Dimiter Naydenov"], "description": ["Learning to use the awesome Pandas toolkit helped me immensely in lots of ways. Finding novel,\nefficient solutions to complex day-to-day problems with Pandas not only saves time, but can be fun\nand rewarding experience.", "In this talk I\u2019ll present use cases I had to solve, but the \u201ctraditional\u201d approach proved tough\nand/or otherwise frustrating implement nicely. Since I was just starting to learn Pandas, decided to\ntry an alternative solution with it. What I learned changed the way I think about data processing\nwith Python, and it only got better since!", "The use cases deals with extracting pen strokes from handwritten SVG samples, and recomposing them\ninto reusable letters and numbers. When you need to compare each stroke to all others, often more\nthan once, resulted in inefficient, slow, and hard to maintain code. Even a naive Pandas approach\nwith loops helped to reduce both the memory footprint, and improve the performance considerably!\nImproving the implementation further, vectorizing inner loops, and taking advantage of multi-index\noperations, I managed to get the same results, using less memory and a lot faster (by orders of\nmagnitude)."], "date": ["Wednesday 25 July"], "tags": []},
{"title": ["Asyncio in production"], "author": ["Hrafn Eiriksson"], "description": ["Much has been written about asynchronous programming in Python, especially after the introduction of asyncio into the standard library of the language. We\u2019ve all seen the benchmarks that tell us how asyncio-powered web servers massively outperform their non-asyncio counterparts for trivial routes and we\u2019ve seen the articles that tell us how to make the move from flask to aiohttp and why we should. ", "Despite all of this, the question remains: How is it to use asyncio in a production setting? What are the pain points of migrating a large application to use asyncio? How does the performance of this real-world application differ after the migration? Is it still just unicorns and fairy tales? The goal of this talk is to address these questions. ", "If you are curious about taking the step from asyncio-dabbling to creating actual mission critical software systems in asyncio; this is the talk for you!"], "date": ["Wednesday 25 July"], "tags": ["Python 3", "ASYNC / Concurreny"]},
{"title": ["A Taxonomy of Decorators: A-E"], "author": ["Andy Fundinger"], "description": ["This talk will briefly go over the various decorator syntaxes before breaking up the common usages of decorators into 5 categories. Effectively, these are design patterns for decorators. The usages to be considered are:"], "date": ["Friday 27 July"], "tags": ["Software Design", "Development", "Programming", "Python general"]},
{"title": ["Adventures in compatibility: emulating CPython's C API in PyPy"], "author": ["Ronan Lamy"], "description": ["PyPy is a fast and compliant implementation of Python. In other words, it\u2019s an interpreter for the Python language that can act as a full replacement for the reference interpreter, CPython. It\u2019s optimised to enable efficient just-in-time compilation of Python code to machine code, and has releases matching versions 2.7, 3.5 and soon(ish) 3.6. The PyPy project also developed cffi as a clean and efficient way of interfacing with C code.", "However, many libraries in the Python ecosystem are implemented as C extensions, which target CPython\u2019s C API. Many others use Cython, which builds C extensions under the hood. Therefore, PyPy needs an emulation layer for the C API. ", "This emulation needs to bridge the differences between the implementation languages and the object models of CPython and PyPy. The solution is called cpyext. It\u2019s implemented in a mixture of RPython and C, with most of the API functions and macros implemented in RPython. cpyext exposes PyObjects to the extension code that appear similar to CPython objects (as long as extension writers stay within the fuzzily defined boundaries of the public API) but are merely \u2018shadows\u2019 of the real PyPy objects.", "After a brief presentation of PyPy, its goals, and its current statuts and roadmap, this talk will dive into the vexed topic of its handling of C extensions.  By the end of it, the audience should understand the operating principles of cpyext and have a clearer understanding of what happens when you install and run numpy, for instance, on top of PyPy. Some basic familiarity with CPython internals and how C extensions are made will be assumed."], "date": ["Wednesday 25 July"], "tags": ["PyPy", "Compiler and Interpreters", "C-Languages", "Scientific Libraries (Numpy/Pandas/SciKit/...)"]},
{"title": ["Addressing multithreading and multiprocessing in transparent and Pythonic ways"], "author": ["David Liu"], "description": ["With the increase in computing power, harnessing and controlling one\u2019s code out of the single-threaded realm becomes an ever-increasing problem, coupled with the desire to stay in the Python layer. With the recent tools and frameworks that have been published, escaping the GIL cleanly is much easier than before, allow one\u2019s Python code to effectively utilize multi-core and many core architectures in the most Pythonic ways possible. In this talk, learn about how to utilize static multiprocessing for process pinning, and effectively balancing thread pools with a monkey-patched import of threading modules.", "Overview:", "Introduction to multithreading and multiprocessing in Python", "History of multithreading+multiprocessing in Python, classic frameworks ", "Problems that can occur (oversubscription, nested parallelism issues, process hopping, pool resource on shared machines) ", "Python accessing bigger hardware over the last few years (28+ cores, etc) ", "When to stay in the GIL, and when to escape it ", "The advantages and safety of the GIL", "Python-level exiting of the GIL; analysis of when to return to single-threaded, and when threading is a deceivingly bad idea", "Accountability of frameworks that natively exit the GIL", "The new multithreading and multiprocessing libraries and techniques", "static multiprocessing module (smp) (and monkey patching of multiprocessing)", "thread pool control with command line calls of Python ( python -m tbb -p 8)", "Putting it all together", "Examples of using static multiprocessing on a large machine to stop oversubscription", "Example of pseudo-daemon process on 4-core machine by processor pinning", "Thread pool control on a simple NumPy example", "Summary - Best practices for using above methods to control multithreading+multiprocessing", "What needs to be done in the space (frameworks and things that need to be exposed)", "Problems that still exist in the area", "Q&A"], "date": ["Friday 27 July"], "tags": ["Best Practice", "Multi-Processing", "Scientific Libraries (Numpy/Pandas/SciKit/...)", "CPython", "Multi-Threading"]},
{"title": ["The pytest/tox/devpi help desk"], "author": ["Oliver Bestwalter"], "description": ["We\u2019ll try to help everyone with their questions around pytest, tox and devpi and how they work together to test and release your packages.", "If you have concrete questions or just want to learn more about these tools, come around and have a chat with us.", "Potential topics and questions are:"], "date": ["Wednesday 25 July"], "tags": ["Best Practice", "Packaging", "Testing"]},
{"title": ["OpenStack Help Desk"], "author": ["Daniel Abad"], "description": ["Come and chat with us about OpenStack! The free and open-source software platform for cloud computing. Get the advantages of infrastructure-as-a-service without the vendor lockin.", "We can answer questions about OpenStack, help you with specific problems or help you get started with contributing to an OpenStack project. Your helpers will be OpenStack developers with years of experience using and developing on a number ofdifferent OpenStack projects.", "We will  have a OpenStack deployment that we can use to demonstrate some of the possibilities."], "date": ["Friday 27 July"], "tags": ["OpenStack"]},
{"title": ["Basic Data Science tools"], "author": ["Sarah Diot-Girard"], "description": ["The aim of this session is to help data scientists with little experience in Python : ", "Set their environment development: install Python, Jupyter, set Virtualenv , install scientific libraries: Pandas, Numpy, Scipy.. ", "Get started with Jupyter, Pandas  ", "Solve practical issues with Pandas and other scientific libraries  ", "Get started with Matplotlib and other dataviz tools "], "date": ["Thursday 26 July"], "tags": ["Visualization", "Data Science", "Jupyter/iPython Notebook", "Scientific Libraries (Numpy/Pandas/SciKit/...)"]},
{"title": ["Help desk: choosing (or not) the right NoSQL database"], "author": ["Alexys Jacob"], "description": ["During this ", "help desk", ", some Numberly\u2019s folks will make their ", "field expertise", " available to ", "help you decide on the right database", " for your project.", "The NoSQL databases ecosystem evolved a lot over the last decade and it may be hard to keep up with all their strengths and design patterns. So let\u2019s take this occasion to discuss about them!", "If you are ", "starting up a new project or facing problems and limitations with your current implementation", ", we will try our best to help you choose (or not) the right NoSQL database."], "date": ["Wednesday 25 July"], "tags": ["System Architecture", "Infrastructure", "NoSQL", "Distributed Systems", "Databases"]},
{"title": ["Extending Python with C/C++"], "author": ["Paul Ross"], "description": ["If you want your Python code to run really fast you can get dramatic performance improvements if you are willing to write some of your code in C/C++. There are several ways to do this from traditional Python C extensions to using environments such as Cython or Pybind11. This help desk is here so you can choose the best approach to achieve that magical 100x performance increase without pain."], "date": ["Friday 27 July"], "tags": ["Cython", "Open-Source", "CPython", "Performance"]},
{"title": ["What do a model boat and a giant laser have in common?"], "author": ["Thomas Kluyver"], "description": ["Last year, I was part of a team building a small autonomous sailing boat. This year, I started working at European XFEL, a research facility built around a 3km long X-ray laser. Both projects use Python in their control systems, and despite the vastly different size and budget, they have surprisingly similar architectures, with separate processes sending data to each other using sockets.", "We wrote the code for our sailing boat using an open source framework called the Robot Operating System, or ROS. ROS is built around the concept of communicating nodes: a node can publish messages on a named topic, and any other nodes subscribed to that topic will receive the message. Our boat runs about 15 nodes (the precise number depends on what task it\u2019s doing). This isn\u2019t the only way to drive a robot boat: the team from Aberystwyth, whose code is also open, use a very different architecture.", "European XFEL, in Hamburg, is a new \u20ac1.2 billion collaboration between 12 countries. The control and data analysis systems are built on a framework called Karabo, developed in-house. Karabo \u2018devices\u2019 - which can encapsulate hardware interfaces or software processing - communicate using both a central message broker and point-to-point channels.", "I\u2019ll describe each of these projects, and the similarities and differences between their software systems. Then I\u2019ll talk about what has been good and bad on each project, and what patterns and ideas we can take from them for designing other systems, including systems that don\u2019t control hardware."], "date": ["Friday 27 July"], "tags": ["Science", "Engineering", "Robotics", "Architecture", "Case Study"]},
{"title": ["Python and Raspberry Pi"], "author": ["Ben Nuttall"], "description": ["Explore physical computing and more using Python on Raspberry Pi", "The Raspberry Pi is a small affordable computer which runs a Debian-based operating system called Raspbian. It has been designed for the purpose of education, and it is also used by hobbyists and in industry across the globe.", "The Raspberry Pi Foundation is a charity that works to put the power of digital making into the hands of people all over the world by making computing accessible to all. More than 15 million Raspberry Pi computers have been sold since the first product launch in 2012, and all sales profits go towards the Foundation\u2019s educational programmes, courses, and resources.", "The poster covers:"], "date": ["Friday 27 July"], "tags": ["Internet of Things (IoT)", "Other Hardware", "Raspberry PI", "Education", "Open-Source"]},
{"title": ["Plone and modern frontend frameworks"], "author": ["Paul Roeland"], "description": ["Plone has a long track record in being the premier Python-based web CMS. Yet, recent years have seen an acceleration in frontend technologies. With a stable restful API, it is now possible to use your favorite frameworks like React or Angular to create modern and bespoke frontends and apps, while still using all of  the  stability, security and workflow that a mature product such as Plone provides.  ", "Cake. Have. Eat. ", "The poster will highlight the state-of-the-art, used-in-production methods, widget libraries and updated UI/UX."], "date": ["Thursday 26 July"], "tags": ["CMS", "JavaScript", "RESTful", "Plone", "Open-Source"]},
{"title": ["Python Game Console"], "author": ["Radomir Dopieralski"], "description": ["Learning to make video games is a great way to learn about computers. They are not only very motivating and rewarding, but also teach a very difficult kind of programming \u2014 real-time, interactive applications. In the process you also learn about graphics, sound, graphs, artificial intelligence, data structures and algorithms, not because someone tries to teach you, but simply because you actually need all this to make your game. Knowledge gained this way has its own unique quality.\nUnfortunately, while Python is an excellent language for learning, it doesn\u2019t make it easy to make games. The number of hoops you have to jump through for installing and configuring everything on every single computer on which you want to run your game makes it really hard to start, and even harder to show your creations to your friends.\nTo make things easier, I have built a number of devices dedicated to game development, which remove as many of the obstacles as possible to let you simply start on making your game, without distractions."], "date": ["Thursday 26 July"], "tags": ["Gadgets", "Teaching", "Education", "Game-Development", "MicroPython"]},
{"title": ["Human Mobility Patterns"], "author": ["Antonia Tugores"], "description": ["Research on mobility has traditionally relied on surveys and datasets generally composed of small samples with a low spatio-temporal resolution. However, the situation is now changing with digital data sources. We use geolocated data from different contexts to analyse human mobility at different levels and predict people fluxes between cities.", "Studies can be done at different levels ranging from intracity to intercontinental trips. Do tourists and residents behave in the same way when in the same city? Are we prone to visit some cities if we have visited another one? What about train and private transport networks, do people from different countries show different patterns? Can we predict people fluxes between cities?", "Being one of the main programming languages when talking about data analysis and data science,  Python and its data analysis ecosystem have been the barebones of this research."], "date": ["Thursday 26 July"], "tags": ["Science", "Physics", "Predictions", "Analytics", "Data"]},
{"title": ["Making neural networks portable with ONNX"], "author": ["Micha\u0142 Karzy\u0144ski"], "description": ["The world of deep learning frameworks is complex. It seems that every major company has their own product in this space. Some have great features, others have great performance, so its very difficult to choose the right one. But what if you didn\u2019t have to limit your choice to just one? What if you could use the most developer-friendly framework for designing a neural network, the most efficient framework for training and finally the lightest one for inference on edge devices? That\u2019s the idea people at Facebook, Microsoft and Amazon were thinking about when they created the ONNX format.", "Open Neural Network Exchange (ONNX) is a binary file format, based on Protocol Buffers, designed to store representations of neural networks. Networks are stored as computational graphs and the format supports saving both the network architecture and trained weighs.", "ONNX is an open standard and it\u2019s gaining broad community support. Tools already exist for importing and exporting models from frameworks such as Caffe2, PyTorch, Microsoft Cognitive Toolkit (CNTK), Apache MXNet, Chainer, TensorFlow, SciKit-Learn. ONNX support will be built directly into Windows and Apple\u2019s CoreML. Runtimes exist for other environments such as servers and neural network accelerators (Intel\u2019s nGraph), GPUs (NVIDIA\u2019s TensorRT) and more. Other tools such as Netron and Visual DL allow you to visualize and inspect your ONNX models.", "My poster will describe the capabilities of ONNX and demonstrate them through code samples and screenshots. We\u2019ll also cover ONNX\u2019s current limitations and areas of future development."], "date": ["Friday 27 July"], "tags": ["Deep Learning", "Data Science", "Open-Source", "Machine-Learning"]},
{"title": ["introduce Python community/conf, and cross region community in Asia."], "author": ["Noah Chen"], "description": ["PSF(Python Software Foundation)  help most people who want to learn Python, and we also join so many meetup/event/conference organized by PSF or related to PSF. in Europe, thanks EuroPython Society doing a lot of jobs in handle or manage so many different region. \nPython is also very popular in Asia. me , Noah who is from Taipei, learn Python and join Taipei.py and PyConTW since 2014. I received the passion from member of Python Community in Taipei, not only in Taiwan, we also have 9 python communities in different cities around Taiwan, included KaoHsung, TaiChung, Tainan, HwaLien, TaoYoung, and we also have 2 female community which called: PyLadies Taipei, and DjangoGirls Taipei. \nin Taipei, we already have so many open source event or conference , what different to Python Community or PyConTW? the reason I want to join and contribute Python is : I can connect the world through Python. PyConTW is found by yyc(Yung-Yu Chen) since 2012. at 2012, PyConTW always invite famous people in Python to present in PyConTW, and also, outstanding speakers always bring their outstanding python friends. PyConTW is the first and most foreigner audiences or speakers international Open Source Conference I joined. this is way I can connect the world, face to face. \nnot only PyConTW, I also try to connect PyCon around Asia, like PyCon Japan, and Korea, I am be a volunteer since 2016, and going on. being a volunteer of PyConMY APAC and PyConID in 2017. this is the contact and connect the world we want to share in Python, and want to contribute in Python in Asia.\nnow , I join FOSSASIA, being a volunteer of FOSSASIA, I can help to promote my experience of Python and FOSS to people in Taipei. and now, I want to share my Asia experience to python friends in Europe."], "date": ["Friday 27 July"], "tags": ["Python Software Foundation (PSF)", "Communication", "Conferences and Meet-Ups", "Diversity", "Community"]},
{"title": ["Hardening Plaintext Secrets in Configuration Files"], "author": ["Mois\u00e9s Guimar\u00e3es"], "description": ["Many applications and services rely on configuration data in order to behave according to the customer needs. The standard library gives us ConfigParser, and many projects use it to achieve easy configuration with plaintext config files.", "OpenStack Common Libraries (Oslo) has an enhanced alternative called oslo.config with support to command line arguments, option deprecation, and much more. With the addition of the source drivers feature, it is possible to increase the security of config values storing them in a safer place.", "The source drivers feature allows extra sources of configuration data other than plaintext config files adding the possibility to have other layers of security around the configuration values and increasing the fail-safe options."], "date": ["Thursday 26 July"], "tags": ["Development", "Best Practice", "Security", "Open-Source", "Command-Line"]},
{"title": ["Double the money you give PSF, etc., without paying more!"], "author": ["Steve Barnes"], "description": ["Many organisations, especially the larger ones, have \u201cmatching gifts\u201d programs.", "If you work for such an organisation you can potentially double or more the value of any gifts that you give to the EuroPython Society, (EPS), & Python Software Foundation, (PSF), and others.", "No coding experience is needed just a varying amount of persistence & patience."], "date": ["Wednesday 25 July"], "tags": ["Python Software Foundation (PSF)", "EPS", "The Answer to Life the Universe and Everything Else"]},
{"title": ["Fifty Shades of Disaster - Human Error and Complex Systems"], "author": ["Paul Ross"], "description": ["This four part tutorial describes the failures that can happen when humans interact with complex systems. Complete with case studies, this gives valuable lessons for developers, project managers and DevOps engineers. Learn from the mistakes of others as you won\u2019t live long enough to make them all yourself and this talk gives you that opportunity!", "Part 1: Complexity, Coupling and Systems Failures\nA gentle introduction to \u201cmodern accident theory\u201d. We examine the essential characteristics of complex systems and the operators who control them. A life hack is here along with two case studies of software disasters.", "Part 2/4: A Concise History of Civil Aviation\nCivil aviation has moved from very risky to extraordinarily safe. How this was done has valuable lessons for other industries. We looks at the challenges faced by civil aviation, how they were overcome and what we could learn from this.", "Part 3/4: Blame and the Fallacy of Root Cause Analysis\nSo disaster has finally happened, now, how do you go about preventing futures disasters? The obvious ways are wrong. So how do you investigate failure and how do you apply those lessons?", "Part 4/4: Skill, Luck and Sheer Professionalism\nSometimes the human element, the operators, are not hapless perpetrators complicit in the disaster but actively prevent catastrophe. This talk is full of case studies where this happened. An analysis of these case studies will help you to improve your own resilience."], "date": ["Wednesday 25 July"], "tags": ["Operations", "Case Study", "Best Practice", "DevOps general", "failures/mistakes"]},
{"title": ["Discovering the nuclear reactor\u2019s stability with SLEPc and Python"], "author": ["Javier Jorge"], "description": ["Different engineering models such as physic simulations or information retrieval rely on modelling and solving large-scale sparse eigenvalue problems, such as fluid simulation or document retrieval. SLEPc (http://slepc.upv.es) is a software library for the solution of this kind of algebraic problems on distributed computers. We can use this with Python through slepc4py to provide solutions to these computationally expensive problems, using parallelization with different schemes.", "In this poster we introduce slepc4py (https://bitbucket.org/slepc/slepc4py), a python wrapper for SLEPc, along with the problem of determining the nuclear reactor\u2019s stability, a problem that is modeled as obtaining the eigenvalues of certain matrices that are large and sparse. We introduce the techniques that are implemented in SLEPc for solving a problem with these characteristics."], "date": ["Friday 27 July"], "tags": ["Scientific Libraries (Numpy/Pandas/SciKit/...)", "Case Study", "Data", "C-Languages", "Science"]},
{"title": ["Cloud-Agnostic Deployment of Distributed TensorFlow"], "author": ["Javier Jorge"], "description": ["In this poster we will see how to deploy the required infrastructure to create a TensorFlow cluster, and then provision the software to train the model. For doing this, we will use the Infrastructure Manager (http://www.grycap.upv.es/im/index.php) that supports API\u2019s from different virtual platforms, making user applications Cloud-agnostic. In addition, it integrates a contextualization system, based on Ansible, to enable the installation and configuration of all the required applications providing a fully functional Deep Learning infrastructure on the Cloud provider that we need.", "Outline: "], "date": ["Thursday 26 July"], "tags": ["Science", "Case Study", "Scientific Libraries (Numpy/Pandas/SciKit/...)", "Machine-Learning", "Deep Learning"]},
{"title": ["Create your own Artificial Intelligence to monitor your Linux System!"], "author": ["Maha Mdini"], "description": ["The object of this session is to explain how one may apply simple statistical calculations and Machine Learning techniques to monitor one\u2019s Linux system. Systems, running services and installed applications generate a large amount of logs. One may create also customized logs for a particular purpose. ", "These logs may be processed in real time or in demand by the means of smart Python scripts for varied purposes:", "1- Optimizing the performance of the system by monitoring the systems logs  (e.g. boot logs) and modeling metrics such as CPU/memory usage, monitoring the performance of services such as HTTP,  MySQL\u2026", "2- Securing the system from external threats by monitoring browsing, ports, login logs \u2026, as well as from internal crashes by monitoring kernel logs", "3- Modeling one\u2019s daily behavior by measuring the frequency/correlations of the usage of applications/services \u2026  "], "date": ["Thursday 26 July"], "tags": ["Scientific Libraries (Numpy/Pandas/SciKit/...)", "Data Science", "Open-Source", "Linux"]},
{"title": ["Best practices for elegant experimentation in data science projects (case study)"], "author": ["K K"], "description": ["In the course of the project, data scientists face multiple issues. Difficulties with reproducibility, lack of the ability to prepare experiments quickly and dirty data are just three examples. Data science projects involve a lot of experimentation and quick adoption of new ideas and technologies. Such environment makes it difficult to keep the code clean as well as keep track of small changes that makes new experiment successful.", "Here, we use an instance segmentation challenge - called Mapping Challenge - hosted on the crowdAI platform to show: 1) our best practices when working in data science projects, 2) competition results. Our best practices involve usage of the steppy library, which provides minimal interface for building machine learning pipelines. Besides this, we organized our work in a transparent and open way, publishing code, tasks and experiments results.", "On the poster, we share our results regarding pre- and post-processing routines, network architectures and training scheme. We also present technology stack that we use. It is a blend of well established Python packages (like numpy and sklearn) and our own open source initiatives, that is steppy and steppy-toolkit.", "Poster is for Pythonists looking for: 1) example solution to the instance segmentation task, 2) ideas how to organize data science project."], "date": ["Friday 27 July"], "tags": ["Best Practice", "Data Science", "Clean Code", "Open-Source", "Machine-Learning"]},
{"title": ["Asynchronous operations at scale"], "author": ["Hubert Bry\u0142kowski"], "description": ["This talk will cover main purpose, differences, advantages and shortcoming of synchronous and asynchronous operations. Using real life  infrastructure as an example, Hubert will demonstrate how actions like adding a new content can be processed in a non-blocking way. Such approach is more taxing on development time but can be highly beneficial if your application has to sustain high access rate and respond swiftly.\nBy attending the talk you will learn how we build application that support >100M monthly users, what problem arise in such high pace environments and what trade off application developer has to make."], "date": ["Wednesday 25 July"], "tags": ["Performance", "Architecture", "ASYNC / Concurreny", "Multi-Processing", "Microservices"]},
{"title": ["Writing and Running Tests in Docker"], "author": ["Alexandre Figura"], "description": ["\u201cHow to Launch your Tests with Docker Compose: Best Practices and Traps to Avoid\": that would make a great title for a book! Unfortunately, there is no such book available currently. In the meantime, we are all struggling on how to make our applications running in Docker\u2026 Because there is so many ways to do it, it\u2019s often hard to find out what is the best way to do it.", "But with some practice, and many trials/errors, some patterns take shape. That\u2019s what we will see during this training session. We will start by writing some tests for a web application with Pytest. Then, we will automate them with Tox. And to finish, we will run them in Docker Compose. Our development workflow will be managed with Invoke, and our goal will be to have tests independent of the running environment, so they can be run both locally or on a continuous integration server (e.g., GitLab with Kubernetes runners).", "Requirements:"], "date": ["Tuesday 24 July", "Tuesday 24 July"], "tags": ["Best Practice", "Docker", "Deployment/Continuous Integration and Delivery", "Test Libraries (pyTest/node/...)", "Tooling"]},
{"title": ["Ridiculously Advanced Python"], "author": ["Francesco Pierfederici"], "description": ["If you have been using Python for some time already and want to reach new heights in your language mastery, this training session is for you!", "Python has a number of features which are extremely powerful but, for some reason are not particularly well known in the community. This makes progressing in our Python knowledge quite hard after we reach an intermediate level. Fear not: this session has you covered!", "We will look at some advanced features of the Python language including properties,  class decorators, the descriptor protocol, annotations, data classes and meta-classes. If time allows we will even delve into the abstract syntax tree (AST) itself. ", "We will use Python 3.7 and strongly recommend that attendees install a reasonably recent version of Python 3 to make the most out of the training.", "Warning: some of the topics presented will almost certainly assure an early end to an otherwise successful career in software engineering :-)", "Source code available on GitHub: https://github.com/pythoninside/europython2018"], "date": ["Monday 23 July", "Monday 23 July", "Monday 23 July"], "tags": ["Software Design", "Type-Hinting", "Meta Classes", "Programming", "Python 3"]},
{"title": ["Technologies to master Parallelism in Python"], "author": ["Shailen Sobhee"], "description": ["Parallelism in Python has been a mysterious pinnacle of language mastery for many years, and with a few advancements in the community it has become even easier to do so.  From easy imported threadpool controls, to advanced multiprocessing affinity and pinning techniques, the options to achieve parallelism are now quite within reach.  In this workshop, learn how to use these frameworks to augment one\u2019s Python code to enable granular control over parallelism workloads and combat oversubscription.", "Slides: https://www.scribd.com/document/384826546/EuroPython-2018-Shailen-Sobhee"], "date": ["Tuesday 24 July", "Tuesday 24 July"], "tags": ["Performance", "Multi-Threading", "Scientific Libraries (Numpy/Pandas/SciKit/...)", "Multi-Processing"]},
{"title": ["Real-time transcription and sentiment analysis of audio streams"], "author": ["Aaron Bassett"], "description": ["In this training session, we\u2019re going to learn how to create a virtual rapporteur. A digital assistant who can join any conference call; record it and provide participants with real-time insights into the overall tone of the call. Once the call is complete, we\u2019ll look at how we can use the call recording to provide participants with a text transcript as well as meta information about the call such as the most talked about concepts, keywords and entities.", "Attendees", ": you should be familiar with Python and the command line.  You will also need to sign-up for a free ", "Nexmo", " and ", "IBM Watson", " account to access their APIs.", "We\u2019ll be coding the application in Python and JavaScript, with the ", "Hug", ", ", "Tornado", " frameworks; so a knowledge of both languages would be beneficial but is not required. We will be making heavy use of several APIs, so experience with REST and WebSockets will help."], "date": ["Monday 23 July", "Monday 23 July"], "tags": ["Visualization", "JavaScript", "Natural Language Processing", "Machine-Learning", "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)"]},
{"title": ["Privacy for Data Scientists"], "author": ["Andreas Dewes"], "description": ["As data and information security become core components of managing user data, data scientists are keen to expand their knowledge and skills relating to data privacy and security basics. As of May 2018, the European General Data Protection Regulation affects how European residents can access and grant consent to use their data. As European data scientists, we now have an obligation as well as distinct motivation, to practice data science with attention to data privacy.", "In this workshop, we will introduce some of the basics in terms of defining privacy within the realm of data collection, modeling and machine learning. A focus on practical knowledge and code, we will cover how one can implement some of these algorithms with Python. Students will be presented with these theories along with recent research on privacy-preserving models, so they can leave with a better understanding of how to apply privacy principles to data science in their work and study."], "date": ["Tuesday 24 July", "Tuesday 24 July"], "tags": ["Security", "Data", "Jupyter/iPython", "Machine-Learning", "Privacy"]},
{"title": ["Introduction to Pandas, Testing and Test-Driven Data Analysis"], "author": ["Nick Radcliffe"], "description": ["This is replacement training for Sandrine\u2019s Intro to Pandas and SciKit Learn, which she sadly won\u2019t be able to present because she has recently broken her nose!", "This training will introduce Pandas (and Numpy) for people who either haven\u2019t used them at all or are just getting started with them. It will then go on to introduce testing in Python (in general), with unittest, and testing analytical code, in particular, with the test-driven data analysis package.", "Planned content:", "Pandas and Numpy:\n  - what they are\n  - why you should used them\n  - how to use them\n  - basic numpy concepts (arrays, dtypes, array operations, zeros, ones, creating new arrays, where, choose, sum, size etc.)\n  - pandas basics: DataFrames, creating DataFrames, loading data, indices\n  - creating new columns, appending DataFrames, merging DataFrames, groupby operations, plotting.\n  - loading and saving data (pickle; csv, feather)", "Testing\n  - the idea of testing and test-driven development\n  - the unittest library basics: unittest.TestCase, unittest.main, verbosity, self.assertEqual and friends.\n  - slightly advanced unittest basics: setUp, tearDown, setUpClass, tearDownClass\n  - unit tests vs. integration and system tests\n  - pytest as an alternative to unittest", "Test-Driven Data Analysis:\n  - making the case for testing analytical processes\n  - extending the ideas from software testing to reference tests for analytical processes with ReferenceTestCase from the TDDA library\n  - Using constraints to test data (input; output; intermediates).\n       - Automatically generating constraints from known good data\n       - Verifying data against generated (or hand-created) constraints \n       - Detecting bad data (and anomalies)", "PREPARATION:", "As a bare minumum, you will need a working Python (preferably 3.6 or 3.7, though 2.7 could be used) with numpy and pandas installed, preferably with JupyterLab. Anaconda is a great way to get all this.", "Ideally, you should also have installed the TDDA library, the feather library and the pmmif library in case the network is overloaded during training.", "All dependencies are available from Github:"], "date": ["Monday 23 July", "Monday 23 July"], "tags": ["Test Driven Development (TDD)", "Data Science", "Testing", "Scientific Libraries (Numpy/Pandas/SciKit/...)"]},
{"title": ["Introduction to Big Data Processing using Spark and Python"], "author": ["Raoul-Gabriel Urma"], "description": ["This workshop will provide a hands-on introduction to the Big Data ecosystem, Hadoop and Apache Spark in practice. Through practical activities in Python, you will learn how to apply Apache Spark on a range of datasets to process and analyse data at scale. ", "After taking this workshop you will be able to: ", "SETUP\nDownload / Clone the repository: http://gitlab.cambridgespark.com/pub/bigdata-spark", "Follow the instructions in the SETUP.md file: http://gitlab.cambridgespark.com/pub/bigdata-spark/blob/master/SETUP.md"], "date": ["Monday 23 July", "Monday 23 July"], "tags": ["Data Science", "Big Data", "Jupyter/iPython"]},
{"title": ["Fast native code with Cython"], "author": ["Stefan Behnel"], "description": ["Cython", " is not only an excellent and widely used tool to speed up computational Python code, it\u2019s also a very comfortable way to talk to native code and libraries. The Cython compiler translates Python code to C or C++ code, and supports static type annotations to allow direct use of C/C++ data types and functions. The tight integration of all three languages makes it possible to freely mix Python features like generators and comprehensions with C/C++ features like native data types, pointer arithmetic or manually tuned memory management in the same code.", "This tutorial by a core developer introduces the Cython compiler by interactive code examples, and shows how you can make it generate fast binary modules that talk to native libraries, as easily as Python itself.", "Attendees should make sure they have a C compiler installed and configured to build binary Packages for CPython. We will use CPython 3.6/7, although all examples can also be followed with CPython 2.7. If you\u2019re not on Linux, I recomment using a ", "conda", " environment with gcc.", "Update 2018-07-23", ": Please set up a virtualenv or conda-env with the following tools:"], "date": ["Tuesday 24 July", "Tuesday 24 July"], "tags": ["Cython", "Compiler and Interpreters", "C-Languages", "Performance"]},
{"title": ["Get your documentation right"], "author": ["Daniele Procida"], "description": ["This workshop introduces, and helps you implement, an approach that ", "will", " improve your project\u2019s documentation.", "This approach focuses on documentation ", "structure", ". Based on sound, well-established principles concerning a number of topics (including learning, understanding, praxis, pedagogy amongst others) it provides a documentation framework that is easy to understand, straightforward to put into practice, and above all, immediately and enduringly effective.", "In the workshop we\u2019ll use a hypothetical documentation set for examples, but attendees should have some actual documentation - whether already extant or in the planning phase - to apply it.", "The principles used in this workshop are outlined at https://www.divio.com/en/blog/documentation/. This work has been presented in numerous conference talks, such as https://www.youtube.com/watch?v=t4vKPhjcMZg.", "It has been applied successfully to many software projects, making the documentation better for users, and more manageable for its maintainers."], "date": ["Tuesday 24 July", "Tuesday 24 July"], "tags": ["Documentation"]},
{"title": ["Descriptors and Metaclasses - Understanding Python's More Advanced Features"], "author": ["Mike M\u00fcller"], "description": ["Descriptors and metaclasses are advanced Python features. While it is possible to write Python programs without active knowledge of them, knowing more about them facilitates a deeper understanding of the language. With examples, you will learn how they work and how to write your own descriptors and metaclasses. Furthermore, you will understand when to use and when better not to use them.", "This tutorial is a systematic introduction to descriptors and metaclasses. It covers all relevant information with a focus on practical applications for common tasks.", "In hand-on sessions you will learn how to write your own descriptors that adapt attribute access to your needs. You will experience how metaclasses can help you to get more insight into a code base.", "Use cases provide working code that can serve as a basis for your own solutions. You will gain a deeper understanding of more advanced concepts that can help to write better programs.", "The training is designed for Python 3 (3.6+ preferred). Most of the material will work with Python 2.7, sometimes requiring minor modifications. I will use  a ", "Jupyter Notebook", " in [Jupyterlab] ( https://github.com/jupyterlab/jupyterlab) in the training. I encourage you to try them out. Otherwise any editor, IDE, or interactive Python environment your prefer works. No other 3rd party libraries to install. Please download the ", "course material", ".\nI\u2019ve been delivering these topics over the last years as a part of numerous advanced corporate trainings and open courses as well as trainings at PyCon US, EuroPython, PyCon PL, PyCon DE, and PyCon IE. The material has been continuously refined based on the  feedback from participants."], "date": ["Tuesday 24 July", "Tuesday 24 July"], "tags": ["Best Practice", "Python general", "Programming", "Use Case"]},
{"title": ["Data Wrangling & Visualisation with Pandas & Jupyter"], "author": ["Alexander Hendorf"], "description": ["One of the best tools around for data wrangling and analysis in Python is is Pandas. With Pandas dealing with data-analysis is easy and simple but there are some things you need to get your head around first as Data-Frames and Data-Series. ", "After this tutorial you will be able to work with Pandas and make simple data analytics incl. visualisations. \nPandas is not only useful in data science it\u2019s also a great tool for creating e.g. sales reports or any other data-driven report required in business.\n It\u2019s easy to make fancy analytics while integrating with fellow co-workers used working with Excel.", "Please do come prepared and follow these simple ", " installation instructions", "Pandas features directly accessible, powerful visualisations.", "The workshop will be provided as Jupyter notebook for the attendees to follow along."], "date": ["Tuesday 24 July", "Tuesday 24 July"], "tags": ["Scientific Libraries (Numpy/Pandas/SciKit/...)", "Data Science", "Business", "Analytics"]},
{"title": ["Build, Deploy, Win with Serverless Applications"], "author": ["Kyle Knapp"], "description": ["Serverless applications make it easy for you to run your code without managing servers. Serverless applications can range anywhere from running web applications, to real-time data processing systems, to cron jobs in the cloud. Taking a hands-on approach, this tutorial will teach you how to write and deploy serverless applications in a matter of minutes! No prior experience with serverless applications needed.", "Using AWS Chalice, a Python serverless microframework for AWS, you will be developing serverless applications that run on AWS Lambda, a service run that lets you run code without provisioning or managing servers. In the process of developing these serverless applications, you will learn how to:", "\u2022   Quickly and effectively develop and deploy serverless applications", "\u2022   Utilize best practices in developing serverless applications", "\u2022   Build a wide range of serverless applications by leveraging other AWS services alongside AWS Lambda", "No prior experience in serverless application or AWS is needed, but please make sure your development environment meets the prerequisites of the workshop:", "\u2022   Python 2.7 or 3.6", "\u2022   Virtualenv", "\u2022   AWS credentials", "\u2022   git", "More information on environment setup can be found in the following link: \nhttps://chalice-workshop.readthedocs.io/en/latest/env-setup.html"], "date": ["Monday 23 July", "Monday 23 July"], "tags": ["Public Cloud (AWS/Google/...)", "Web", "Microservices", "Best Practice", "APIs"]},
{"title": ["Best Practices for a Blazing Fast Machine Learning Pipeline"], "author": ["David Liu"], "description": ["Getting through preprocessing to analytics to insights quickly has been the crux of many a Data Scientist.  In this workshop, learn about the best tools, techniques, and frameworks that allow for a fast machine learning pipeline\u2014topics covered will include preprocessing vectorization tricks, distributed dataframe handling, along with tips and tricks to help scale out one\u2019s machine learning code out to cloud or clusters. ", "Workshop Overview:", "-Introduction", "-Tools and Techniques", "-Data preprocessing", "-Break (15 min)", "-Data Visualization", "-Machine Learning", "-Options for scaling and pipelining", "-Break (15 min)", "-Hands-on: Advanced tools", "-Hands-on: Chaining it together", "-Prerequisites are from the two Github repos utilized for the training: (slides in repo)https://github.com/triskadecaepyon/ep_2018_workshop  and https://github.com/IntelPython/workshop"], "date": ["Monday 23 July", "Monday 23 July"], "tags": ["Scientific Libraries (Numpy/Pandas/SciKit/...)", "Data Science", "Machine-Learning"]},
{"title": ["Building your own sports trading bot"], "author": ["Tomasz Dziopa"], "description": ["In this workshop participants will get a glimpse into the world of automated sports trading. The workshop will start out with an introduction into the realm of betting exchanges, trading bots and the strategies that can be employed to successfully trade sports. After the introduction we will move into a more \u201chands on\u201d session where everyone will get API access to the Smarkets betting exchange and a skeleton of a trading bot which can then be extended with the ultimate goal of creating your first sports trading bot!", "The requirements for this workshop will be basic knowledge of Python and RESTful APIs. Basic knowledge of statistics would also be helpful but is not essential. Last but not least: Do bring your laptops!"], "date": ["Tuesday 24 July", "Tuesday 24 July"], "tags": ["python", "Trading", "APIs"]},
{"title": ["Winning card games with 1000+ CPUs"], "author": ["vincent warmerdam"], "description": ["Vincent was playing a card game against his girlfriend and he kept loosing. So he wanted to train a bot to play on his behalf. This is our story.", "We\u2019re using AWS Lambda to get better at a card game named SushiGO. We make a small genetic algorithm in Python that uses AWS Lambda as a backend. The talk consists of these parts:", "This talk will discuss an algorithm that we\u2019ve tried to improve in three ways:", "We will conclude by discussing whether or not AWS Lambda is suitable for a gridsearch/grid simulation (hint, it\u2019s not meant for this task, but it actually kind of works very well)."], "date": ["Friday 27 July"], "tags": ["Python 3", "Algorithms", "Predictions", "Command-Line", "ASYNC / Concurreny"]},
{"title": ["Why develop a CLI (Command Line Interface) first?"], "author": ["Steve Barnes"], "description": ["One of the core concepts of Application Development, (not just in python), is the separation between the Business Logic and the User Interface. However there is a strong temptation to start with the user interface and add the business logic to it some methodologies emphasize this with the process of prototyping the (G)UI first. The danger is that your business logic code can get too entangled with the UI and a change of platform or framework becomes almost impossible.", "This presentation will show how to maintain a clear separation between the Business Logic and the User Interface by starting with a command line interface using argparse and growing a GUI on top.", "We will cover:\n - Why maintain the seperation\n - Using argparse\n - Adding a GUI layer with wxPython\n - Automating the GUI generation\n - Adding a web interface\n - Testing advantages of this approach\n - Scripting advantages\n - Some packaging models.", "Slides and Samples all uploaded to https://github.com/GadgetSteve/EP2018_Talk"], "date": ["Thursday 26 July"], "tags": ["Software Design", "Development", "Packaging", "Command-Line", "Cross-Platform-Development"]},
{"title": ["A Python-flavored Introduction to Containers And Kubernetes"], "author": ["Ruben Orduz"], "description": ["NOTE: This workshop is for very beginners. If you already have had experience with containers and/or Kubernetes, you likely not get much out of this training.", "While not required, if you want to follow along, please follow this link below to set your environment up:\n", "requirements", "Containers have more or less taken over the world of application, web APIs, mobile endpoints and other forms of deployment. They have become the currency, the \u201ctable stakes\u201d and de-facto application deployment unit. Their raise to the fore has brought about a whole host of use cases which weren\u2019t practical or accessible in the world of \u201cclassic\u201d paradigms of infrastructure and virtualization. Containers have also brought application deployment closer and more accessible to developers. ", "But as more use cases, deployment styles and exponential adoption of containers was ongoing, a new set of problems began to surface: how do you manage the ever growing number of containers in a deployment? How do you make sure containers have the right resources, deployed to the right machine, running with the correct parameters, how do you scale in and out without disruption? How do you make sure in a fleet of X containers that they\u2019re all running and in healthy state? Enter Kubernetes.", "The goal of this course is to give the attendees a solid foundation of the core concepts mentioned above both in theory and hand-on practice using docker, kubernetes and friends to deploy a sample multi-tier python web application. All attendees need is a laptop with minikube installed and an Internet connection.", "Full course outline and abstract (because character limit) ", "here", ". ", "This training is an up-to-date version of the training delivered at last year\u2019s EuroPython"], "date": ["Monday 23 July", "Monday 23 July"], "tags": ["Docker", "DevOps general"]},
{"title": ["Writing good error messages"], "author": ["Paul Keating"], "description": ["Anyone who has ever conducted an elementary programming course, or even answered a question on StackOverflow, will know that reading error messages is a skill that beginners have to learn. \nIt is less widely appreciated that writing good error messages is also a skill that must be learnt.\nThis talk is in two parts. \nThe first covers the commonest error message gaffes:\n\u2022   Insufficiently explicit messages.\n\u2022   Issuing the same message for two different conditions.\n\u2022   Suppressing the stack trace.\n\u2022   Polluting the stack trace.\nThe second part describes a way to ensure usable, actionable error messages, even when the writer of the message is not a professional coder. This was developed for an environment where superusers code up most of the dozens of data validation rules and the accompanying messages, and the application in which Python is embedded suppresses the stack trace."], "date": ["Friday 27 July"], "tags": ["Programming", "Python general"]},
{"title": ["What's new in Python 3.7"], "author": ["Stephane Wirtel"], "description": ["Scheduled for release in mid-June before the conference, Python 3.7 is shaping up to be a feature-packed release! \nThis talk will cover all the new features of Python 3.7, including the Data Classes and the Context Variables for the asynchronous programming with asyncio."], "date": ["Wednesday 25 July"], "tags": ["Python general", "ASYNC / Concurreny", "CPython"]},
{"title": ["When to use Machine Learning: Tips, Tricks and Warnings"], "author": ["Pascal van Kooten"], "description": ["Artificial Intelligence, and machine learning in particular, is one of the hottest topics in tech/business.\nI will explain the core of machine learning, and the main goal of this talk will be to help you judge the success whenever someone yells \u201cI know! let\u2019s solve this using machine learning!\u201d. I will also provide tips and tricks on how to increase the success of such projects. The second part of the talk will be about 2 open-source python projects I\u2019ve created, as well as a project I\u2019m working on regarding the trading of cryptocurrency\u2026 and their relation to machine learning. Specifically, the challenges and findings in making these cases work will be explored."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "failures/mistakes", "Open-Source", "Machine-Learning", "Use Case"]},
{"title": ["Washing away code smells"], "author": ["Yenny Cheung"], "description": ["Does your code smell? Have a weird fragrance? It turns out code smells are a real thing and an amazing conceptualization of suboptimal design. This talk helps you identify code smells in Python. It also shows you how to wash them away by the technique of refactoring. You will learn the art of writing Pythonic, clean and maintainable code.", "Code smells refer to the symptoms of problematic code design. Identifying different types of code smells is the first step to successful refactoring. I will talk through some classic examples:", "Knowing what to refactor, I will share a few learnings that lead to good quality code:", "I will also share tips on using refactoring at your company, which includes convincing your product manager, looking out for code smells during code reviews, and employing automatic tools.", "The speaker has previously presented on Talk Python To Me Podcast: https://talkpython.fm/episodes/show/150/technical-lessons-learned-from-pythonic-refactoring, and at PyCon.DE: https://www.youtube.com/watch?v=Yq9-b2JKUyU."], "date": ["Wednesday 25 July"], "tags": ["Beginners", "Best Practice", "legacy-code", "Clean Code", "Software Design"]},
{"title": ["What makes coding for MicroPython different?"], "author": ["Andrey Vlasovskikh"], "description": ["A microcontroller unit is a CPU, memory modules, and I/O devices on a single chip. There are tens of billions of microcontrollers in world: they are everywhere from watches to cars. Developers program them mostly in C, since their tiny hardware resources make it very hard to use higher-level langauges such as Python. In 2014 the MicroPython project was started with the goal of making it possible to program microcontrollers in Python.", "Was it hard to make Python work on a device with only 16 KB of RAM? Is MicroPython a Python dialect or is it a different language? I\u2019ll start with the most important optimizations and the key differences in the language implementation to give you an idea of what MicroPython really is.", "Most of us are not contributors to MicroPython though and it\u2019s much more important for us to understand how Python coding for microcontrollers is different from, say, web development or scripting. What do you need to learn in order to program your mictrocontroller-based IoT devices? I\u2019ll talk about several traits of Python coding for microcontrollers that make it different, but exciting to learn."], "date": ["Wednesday 25 July"], "tags": ["Internet of Things (IoT)", "MicroPython", "Programming", "Tooling", "Architecture"]},
{"title": ["Using Bonobo, Airflow and Grafana to visualize your business"], "author": ["Romain Dorgueil"], "description": ["Zero-to-one hands-on introduction to building a business dashboard using Bonobo ETL, Airflow, and a bit of Grafana (because graphs are cool).", "There is no need of prior knowledge about any of those tools.", "After a short introduction about the tools, we\u2019ll go through the following topics, using the real data of a small SaaS software:", "One can expect to be able to build a similar system at the end of the talk in a few days (of course, the implementation is only a small part of this process, data is what really matters).", "\u00abMetrics you watch tend to improve over time\u00bb"], "date": ["Wednesday 25 July"], "tags": ["Case Study", "Analytics", "Open-Source", "Business", "Databases"]},
{"title": ["Understanding and Implementing Recurrent Neural Networks using Python"], "author": ["Anmol Krishan Sachdeva"], "description": ["Recurrent Neural Networks (RNNs) have become famous over time due to their property of retaining internal memory. These neural nets are widely used in recognizing patterns in sequences of data, like numerical timer series data, images, handwritten text, spoken words, genome sequences, and much more. Since these nets possess memory, there is a certain analogy that we can make to the human brain in order to learn how RNNs work. RNNs can be thought of as a network of neurons with feedback connections, unlike feedforward connections which exist in other types of Artificial Neural Networks.", "The flow of talk will be as follows: - Self Introduction - Introduction to Deep Learning - Artificial Neural Networks (ANNs) - Diving DEEP into Recurrent Neural Networks (RNNs) - Comparing Feedforward Networks with Feedback Networks - Quick walkthrough: Implementing RNNs using Python (Keras) - Understanding Backpropagation Through Time (BPTT) and Vanishing Gradient Problem - Towards more sophisticated RNNs: Gated Recurrent Units (GRUs)/Long Short-Term Memory (LSTMs) - End of talk - Questions and Answers Session"], "date": ["Wednesday 25 July"], "tags": ["Visualization", "Data Science", "Developing with Python Track", "Machine-Learning", "Deep Learning"]},
{"title": ["Using Pandas and Dask to work with large columnar datasets  in Apache Parquet"], "author": ["Peter Hoffmann"], "description": ["Apache Parquet is a binary, efficient columnar data format. It uses various\ntechniques to store data in a CPU and I/O efficient way like row groups,\ncompression for pages in column chunks or dictionary encoding for columns.\nIndex hints and statistics to quickly skip over chunks of irrelevant data\nenable efficient queries on large amount of data.", "Apache Parquet files can be read into Pandas DataFrames with the two libraries\nfastparquet and Apache Arrow. While Pandas is mostly used to work with data\nthat fits into memory, Apache Dask allows us to work with data larger then memory\nand even larger than local disk space. Data can be split up into partitions\nand stored in cloud object storage systems like Amazon S3 or Azure Storage.", "Using Metadata from the partiton filenames, parquet column statistics and\ndictonary filtering allows faster performance for selective queries without\nreading all data. This talk will show how use partitioning, row group skipping \nand general data layout to speed up queries on large amount of data."], "date": ["Wednesday 25 July"], "tags": ["python", "Scientific Libraries (Numpy/Pandas/SciKit/...)", "NoSQL", "Big Data", "Databases"]},
{"title": ["Walking the Random Forest and boosting the trees"], "author": ["Kevin Lemagnen"], "description": ["Deep Learning is all the rage, but ensemble models are still in the game. With libraries such as the recent and performant LightGBM, the Kaggle superstar XGboost or the classic Random Forest from scikit-learn, ensembles models are a must-have in a data scientist\u2019s toolbox. They\u2019ve been proven to provide good performance on a wide range of problems, and are usually simpler to tune and interpret. This talk focuses on two of the most popular tree-based ensemble models. You will learn about Random Forest and Gradient Boosting, relying respectively on bagging and boosting. This talk will attempt to  build a bridge between the theory of ensemble models and their implementation in Python.", "Notebook: ", "https://github.com/klemag/europython2018_walking_the_random_forest"], "date": ["Friday 27 July"], "tags": ["Case Study", "Data Science", "Machine-Learning", "Scientific Libraries (Numpy/Pandas/SciKit/...)"]},
{"title": ["Type annotations with larger codebases"], "author": ["Stephan Jaensch"], "description": ["You\u2019ve heard about type annotations, you know they help reduce bugs and improve documentation especially for large codebases, and you\u2019ve attended an introductory talk or read a tutorial about using them. But how do you get started using them with your big, existing codebase? How do you make sure your colleagues will be annotating new code they write - or existing code they\u2019re changing? And how do you get around some of the issues you might run into when using the still-beta type checker mypy on your codebase?", "This talk will start where the typical introductory Python type annotation talks end and discuss the real-world challenges when starting to annotate types with an existing codebase of tens or hundreds of thousands of lines of code. I\u2019ll walk you through best practices learned from doing just that at Yelp, telling you about some of the roadblocks we hit (and how we got past them).", "We\u2019ll also take a look at:\n- how you can get the most out of type annotations even with non-annotated third-party libraries\n- how to deal with code patterns that currently don\u2019t always work well with annotations\n- when the only way to get proper type checking is through refactoring your code."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Type-Hinting", "Python 3"]},
{"title": ["Trust me, I'm a Data Scientist - ethics for builders of data-based applications"], "author": ["Sarah Diot-Girard"], "description": ["Data Science is gonna save the world, right? Or is it? \nMachine Learning epic fails are being largely commented. It\u2019s easy to convince ourselves that they are due to the inconsiderate misuse of Data Science. But is it really so? Is it possible that innocuous choices lead an honnest team to a disaster?", "During the course of this talk, we will build together an (imaginary) application: a disruptive AI-based smart virtual assistant, pledging to help high-schoolers with their university choice. We will see how unintended biaises may creep in at every step, even with the best of intentions. We will explore different topics, such as algorithmic fairness, model interpretability and the handling of minority classes.", "Through this practical example, this talk will present a review of major ethical pitfalls identified in the Machine Learning community along with suggestions on how to avoid them.", "This talk is intended for beginner to intermediate Data Scientists, and people working with Data Scientists, even without specific technical knowledge.", "Slides : https://sdgjlbl.github.io/Presentations/Data%20Science%20and%20Ethics/presentation.html#/"], "date": ["Friday 27 July"], "tags": ["Data Science", "Machine-Learning"]},
{"title": ["Understanding and Applying CQRS"], "author": ["Vinicius Pacheco"], "description": ["Creating scalable applications has a number of complex variables and one of them is to work with scalability and performance in the database layer. Command Query Responsibility Segregation (CQRS) is a design pattern that helps produce more performance and resilience in applications where data access is intense.\nIn this talk, we will understand when to use and the problems that CQRS solves. We will also apply CQRS in a Python application using the Nameko framework.\u00a0", "The outline talk is:\n        \u25cb (4 minutes) - Present a real problem of a web application, when creating new instances is not a solution, because the database receives an overwrite of writing and unfeasible to read the data, collapsing the application. \n        \u25cb (6 minutes) - Present the CQRS pattern conceptually and how this design pattern solves this type of problem using the structure of Command Stack and Query Stack \n        \u25cb (3 minutes) - Show Nameko as an interesting tool to apply the CQRS. It will demonstrate the use of HTTP, RPC and the possibility of applying pub/sub. \n        \u25cb (6 minutes) - Create (live code) the Command Stack layer using Nameko on a Postgresql database.\n        \u25cb (5 minutes) - Create (live code) the Query Stack layer using Nameko over a MongoDB database. \n        \u25cb (3 minutes) - Explain common myths and mistakes about CQRS \n(3 minutes) - Q & A Session\u00a0"], "date": ["Thursday 26 July"], "tags": ["Software Design", "python", "Architecture"]},
{"title": ["Trio: A pythonic way to do async programming"], "author": ["Emmanuel Leblond"], "description": ["Concurrent programs are super useful: think of web apps juggling lots\nof simultaneous downloads and websocket connections, chat bots\ntracking multiple concurrent conversations, or web spiders fetching\npages in parallel. But writing concurrent programs is complicated,\nintimidating to newcomers, and often challenging even for experts.", "Does it have to be? Python is famous for being simple and\nstraightforward; can Python make concurrent programming simple and\nstraightforward too?\nTrio is an attempt to address this question by the positive !", "By taking advantage of new Python 3 features (async/await keywords,\nasync loops and context managers etc.) while dropping legacy concepts that\nolder asynchronous frameworks has to maintain, Trio defines a new set of\nprimitives that make it dramatically easier to write correct concurrent programs.", "In this talk, we will describe those primitives, and demonstrate how to\nuse them to implement a basic algorithm for speeding up TCP connections.\nCompared to the best previous Python implementation, our version turns out to\nbe easier to understand, more correct, and dramatically shorter."], "date": ["Wednesday 25 July"], "tags": ["Architecture", "Programming", "Open-Source", "ASYNC / Concurreny"]},
{"title": ["The rise of Python in the data communities"], "author": ["Alexys Jacob"], "description": ["A retrospective and prospective of Python\u2019s adoption in the ", "data-driven industries", " and how it has and should influence its ecosystem and communities.", "Thanks to its versatility, Python\u2019s usage and adoption has changed a lot over the last decade to go beyond the very act of software programming.", "From Developers to SysOps, closely followed by Scientists and Data analysts, Python has spread to become a common tongue for a wide range of people.", "We will start by looking at how this increased adoption impacted Python ecosystem and is still shaping it today. While ", "this talk is not walk through all the Python technologies around data", ", some of them will be outlined so you will hear words like Numpy, Pandas or Jupyter.", "Then we will try to project ourselves in the future and by ", "highlighting the pitfalls Python has to overcome", " to keep up with its pace and mature in its ability to ", "scale", "!", "Draft of the agenda"], "date": ["Thursday 26 July"], "tags": ["Community", "Engineering", "Data Science", "Big Data", "DevOps general"]},
{"title": ["The Web is Terrifying! Using the PyData stack to spy on the spies."], "author": ["Sarah Bird"], "description": ["We all know the internet can be a scary place. In this talk I\u2019ll focus on two ways I\u2019ve found it positively terrifying. First, digging into tracking technologies, I have learned about the breadth and depth of ways our online activity is monitored, stored, and repackaged. Second, when starting out to learn a new skill, the tidal wave of information available online can be overwhelming.", "Using the PyData stack to explore and visualize different data sources, including a new dataset from Mozilla, we\u2019ll examine some of the many types of online tracking. My goal is to leave the audience with:", "1) A sense of the breadth of tools in the PyData toolbox that can be applied to a real-world analysis\n  2) An understanding of a few methods of online tracking so they can be more informed internet citizens", "In particular, now that the EU\u2019s General Data Protection Regulation (GDPR) has come into force, we can explore the data in light of EU citizens\u2019 new rights, and the new responsibilities of companies worldwide.", "Along the way, I\u2019ll also talk about becoming a software engineer, then a builder of data science tools, and my new journey into data science. Being self-taught can be, lonely, scary, and full of embarrassing pitfalls. I\u2019ll share some stories about my learning journey, and the people and resources that have supported me."], "date": ["Thursday 26 July"], "tags": ["Visualization", "Data Science", "Data", "Web Crawling", "Privacy"]},
{"title": ["The na\u00efve programmer"], "author": ["Daniele Procida"], "description": ["Since Picasso encountered Henri Rousseau over a century ago, modern art has been acutely aware of the value of the contributions that the na\u00efve artist can make. Art negotiates the relationship between sophistication and na\u00efvety with care and intelligence.", "What does our programming culture make of the na\u00efve programmer?  What can programming gain or learn from this encounter? ", "The na\u00efve programmer is simply an unsophisticated programmer. Nobody is born sophisticated. Even the most sophisticated programmers were once na\u00efve programmers. What\u2019s more, the adoption of programming simply as a tool to solve immediate problems, by ever more people without any formal training, means that the number of na\u00efve programmers will become greater, not less. Are we ready for this?", "This talk will explore the relationship, illuminating it with examples from the world of painting, art and music, and will offer some lessons that our own industry and culture should be ready to learn from.", "(This talk will already have been presented as a keynote at DjangoCon Europe 2018)"], "date": ["Wednesday 25 July"], "tags": ["Beginners", "Best Practice", "Education", "Learning"]},
{"title": ["The Challenges of Maintaining a Popular Open-Source Project"], "author": ["Raphael Pierzina"], "description": ["In this talk, I will give an insight into what it means to maintain a popular project for me personally, what it involves and what we as a community can do to help out and finally why I think it\u2019s an important discussion to have.", "Cookiecutter is a command-line utility that creates projects from templates. It is free and open-source software distributed under the terms of a permissive BSD-3 license. With around 180 individual contributors, more than 1000 public templates on GitHub alone, and multiple talks at conferences, it is fair to say that there is a small community around it.", "But who are the people behind the project and what is it that they are doing?", "It\u2019s been three years since I was granted the commit bit by the core team. I have learned a lot about FOSS communities and also about myself. At times I struggle with balancing my day job as a full-time Software Engineer and maintaining Cookiecutter and other FOSS projects in my spare time. By now I\u2019m OK with not responding to issues immediately and closing pull requests. However it took me quite a while to get to this point.", "Maintaining FOSS projects can be incredibly rewarding and fun, but it can also be quite frustrating. It involves so much more than writing code or merging PRs, and yet sometimes it feels like that\u2019s what most people think. The goal of this talk is to start a conversation around this topic and hear what other EuroPython attendees think about it and their challenges as contributors or maintainers."], "date": ["Friday 27 July"], "tags": ["Open-Source", "Community"]},
{"title": ["System testing with Pytest, Docker, and Flask"], "author": ["Neil Gall"], "description": ["The composability of fixtures in pytest is an improvement over traditional\nxUnit setup/teardown, reducing the incentive to commit testing crimes such as\nmulti-stage and stepwise tests. This is great out of the box for unit tests,\nbut I\u2019m going to show how to combine the power of pytest fixtures with Docker\nto build high-level integration tests for microservices or other complex\nsystems with multiple components. I\u2019ll then build on that to show how to embed\nmock web services written with Flask right into the test code.", "With a sample Java application that makes use of some external resources to\noffer a data processing service I\u2019ll first quick an overview of Pytest, Docker,\nand Flask. Then I\u2019ll mix some pre-built code with live test coding to\ndemonstrate how to build high-level system tests which spin up the application\nand its dependencies in Docker. I\u2019ll then mock one of the external dependencies\nusing Flask, allowing the test to control and verify interaction between the\nsystem components. Finally I\u2019ll show how to wrap the Flask application in a\nWSGI middleware that lets the test inspect interaction with the mocked service.", "From a learning and development point of view, building your own is better than\nre-using someone else\u2019s code so I\u2019ll show how the support code for these\nfeatures is relatively simple and how the audience can build it themselves to\nexactly meet their own needs. And I\u2019ll do it all with a sense of fun, a joke\nor two and maybe a little storytelling."], "date": ["Friday 27 July"], "tags": ["python", "Docker", "Test Libraries (pyTest/node/...)", "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)"]},
{"title": ["Succinct data structures for python"], "author": ["Konstantin Ignatov"], "description": ["This is a presentation of and call for participation in development and testing of Python bindings to Succinct Data Structure Library.", "From Wikipedia: Succinct data structures can represent an object (such as a bitvector or a tree) in space close to the information-theoretic lower bound of the object while supporting operations of the original object efficiently. The theoretical time complexity of an operation performed on the classical data structure and the equivalent succinct data structure are (most of the time) identical.", "Currently bindings are provided for:", "Original library:  https://github.com/simongog/sdsl-lite\nMost of examples from SDSL cheat sheet and SDSL tutorial are implemented."], "date": ["Thursday 26 July"], "tags": ["Algorithms", "Data", "Science Track", "Structures", "C-Languages"]},
{"title": ["The Boring Python Office Talk - Automate Powerpoint, Excel, and PDF with Python"], "author": ["Stefan Baerisch"], "description": ["We will have a quick tour of the many ways Python gives us to handle DOCX, XLSX, PPTX, and PDF and automate some boring office tasks.", "Many things are more interesting than office file formats like DOCX, XLSX, PPTX, and PDF. Still, while working with office formats does not seem to be the most fun, it is useful. But we can do better than just useful. With the Python and some great libraries, it is possible to have Python do much of the work you would have to do otherwise:", "In this talk, we will have a look at a usual working day for Bob and Ann, two fictional office works. Both Bob and Ann work office jobs, but while Bob does all of his work by hand, but Ann knows Python. We will look at different tasks that Bob wants to do, such as preparing an Excel report, building a Powerpoint presentation, or rearranging a PDF. Then, we will look how Ann use Python and some exciting libraries to automate these task.", "During the talk, we will use Bob and Ann to consider different task related to office file formats. We will then look at the Python libraries that are available. Then, using this library, we will see how an otherwise boring task can be automated. \nThe goal of the task is to showcase the libraries to Python offers to work with standard office formats and provide you with a starting point for your own office automation.", "After this talk, you will know how to automate at least some of your daily office tasks. You may also be bored because Python is doing so much of your work for you.  If you know basic Python programming, you will be right at home. There will be some use of Pandas,  but it is not required."], "date": ["Friday 27 July"], "tags": ["Python general", "Python 3"]},
{"title": ["Rust and Python - Oxidize Your Snake"], "author": ["Sven-Hendrik Haase"], "description": ["Rust is a safe and modern systems programming language that is easily able to call and be called from Python. As such, it is a prime candidate for replacing C for writing Python modules that have to be fast or that have to interact with other native code. Rust is extremely fast and makes it very hard to get concurrency wrong.", "Many ways of making Python call into lower level have appeared over the years such as CFFI, ctypes, boost.python, cython, SWIG. All of them are cumbersome in their own ways. PyO3 is a Rust library that makes it easy and simple to write native Python modules with minimal glue code and no crazy tooling required. It even works cross-platform without problems.", "The talk shows some sample code of PyO3-based modules and compares it with the code of the alternatives as well as the alternative\u2019s cross-platform support and tooling.", "The goal is for the audience to be informed about a new safe and modern way of writing native Python modules.", "The audience doesn\u2019t need any prerequisites except for a healthy interest in native code and Python modules. C knowledge is optional."], "date": ["Friday 27 July"], "tags": ["Performance", "Python general", "C-Languages", "All Other Programming Languages", "Compiler and Interpreters"]},
{"title": [" Standardize Testing in Python"], "author": ["Bernat Gabor"], "description": ["In this talk, Bernat will introduce tox, an open source tool with the bold vision of standardizing testing. From a CIs point of view, testing contains much more than just unit and/or integration tests; other things like code style checks, packaging, testing under various versions of Python, and checking that documentation still generates, are just as important. Things quickly start to spiral out of control once you add into the mix that there are many tools and ways to accomplish each of these tasks. In this talk, we will learn how tox tries to abstract away all this complexity, how to easily run CI tests on your local machine, and how one can use this tool inside your CI frameworks to ensure high quality and easily maintainable packages."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Agile", "Testing", "Python general", "Open-Source"]},
{"title": ["SSLError, now what?"], "author": ["Christian Heimes"], "description": ["TLS/SSL is the most important and widely-used protocol for secure and encrypted communication, e.g. HTTPS. It offers more than just encryption. TLS also ensures data integrity and strong authentication with X.509 certificates. But it provides merely a false sense of security, if you use it wrong.", "Have you ever encountered ssl.SSLError: [SSL: CERTIFICATE", "VERIFY", "FAILED], while connecting to a server, but you didn\u2019t understand what is going on? Are you running production code without TLS/SSL protection or with certificate validation disabled, because you couldn\u2019t figure out how to make it work correctly?", "I\u2019ll give you the rundown of the basic cryptographic building blocks, protocol handshake, inner structure of certificates, and PKI. You\u2019ll learn about the best practices, debugging tools and tips how to diagnose TLS/SSL and how to deal with certificates."], "date": ["Wednesday 25 July"], "tags": ["Security", "Infrastructure", "HTTP", "failures/mistakes", "Internet"]},
{"title": ["reno: A New Way to Manage Release Notes"], "author": ["Doug Hellmann"], "description": ["reno is a tool for managing release notes in projects that support multiple branches of development, and releases, simultaneously. It solves the problem of managing release notes within patches that fix bugs, and makes it easier to cherry-pick changes between branches (allowing backports or forward ports). This talk will cover the requirements, and constraints, that led us to design and build reno. I will also show how to use it to create notes and publish them in your packages and via Sphinx-based documentation. Then I will talk about the impact reno, and the release notes publishing automation, had on our project and release processes."], "date": ["Wednesday 25 July"], "tags": ["Tooling", "Open-Source"]},
{"title": ["Rehabilitating Pickle"], "author": ["Alex Willmer"], "description": ["Pickle is a compact serialisation protocol for Python objects.  It could be a convenient way for Python programs and distributed systems to communicate. Unfortunately pickle is widely considered to be unsafe, and it has lead to several vulnerabilities over the years. As the Python manual warns", "The pickle module is not secure against erroneous or maliciously \n  constructed data. Never unpickle data received from an untrusted\n  or unauthenticated source.", "Does this have to be the case? Can we use Pickle safely?", "This talk will be a deep dive into what an attacker can do with a maliciously constructed pickles. I\u2019ll show what defences you can implement against the common attacks, especially those that gain arbitrary code execution. I will present new research into other attacks, and mitigations. Finally I will review a few less known alternatives to pickle.", "This talk will expand on a ", "PyLondinium 2018 lightning talk"], "date": ["Friday 27 July"], "tags": ["Configuration Management (Ansible/Fabric/Chef/...)", "Security", "Python general", "Messaging and Job Queues (RabbitMQ/Redis/...)", "Distributed Systems"]},
{"title": ["Pythonic code vs. performance"], "author": ["\u0141ukasz K\u0105kol"], "description": ["Idiomatic Python is beautiful. If you\u2019re new to Python, this talk is for you because I\u2019m going to reveal the charm of python in front of you. I\u2019ll present how boilerplate code can be replaced with idiomatic python. If you\u2019re experienced python developer, this talk is also for you because I\u2019ll compare the performance of the idiomatic code, both from CPU and memory point of view. Some of these results may surprise you."], "date": ["Wednesday 25 July"], "tags": ["python", "Performance", "Best Practice", "Programming", "failures/mistakes"]},
{"title": ["Reliability in distributed systems"], "author": ["Jiri Benes"], "description": ["Is your system stable? Do you know what happens if any of your system\u2019s dependency will start failing? Do you even know what exactly each part of your system does or did any time in the past? Or how fast you will identify root of the problem in case your system goes down at 2am?", "The talk focuses on distributed systems (microservices, APIs that communicate with databases, memory, third party services, etc.), monitoring, their failures and recovery in order to help you answer yourself questions above.", "First part aims on importance of monitoring such systems on several levels - monitoring of hardware, application monitoring, monitoring from outside of the systems, detecting malfunctions based on anomalies within system\u2019s data flows.", "Second part presents several standard techniques for preventing system failure in case of outage of dependency and technique how to recover from inconsistent state after outage.", "Content of presentation is helpful and interesting for beginners and intermediates. Senior developers and developers working on reliable distributed systems should bear in mind content of this presentation and master shown techniques."], "date": ["Wednesday 25 July"], "tags": ["Best Practice", "Microservices", "Engineering", "Architecture", "failures/mistakes"]},
{"title": ["Recursion, Fractals, and the Python Turtle Module"], "author": ["Hayley Denbraver"], "description": ["To understand recursion you must first understand recursion. Alternatively, you could come to a talk that will demonstrate the basics of recursion, using fractals drawn by the python turtle module! ", "What are fractals? Fractals are psychedelic designs that appear basically the same regardless of scale. They also appear all over nature\u2013consider how a tree trunk and branches is similar in structure to branches and twigs or how a wave is made of mini waves. Best of all, fractals can be constructed using recursive functions. ", "What is the turtle module? It is part of the standard python library that can be used to draw amazing things and is commonly used as a tool for learning to code. ", "Come for the recursion, stay for the amazing fractals, and leave knowing that no turtles were harmed in the making of this talk.", "This talk is suitable for all python enthusiasts. Those who love mathematics will love this talk. Advanced developers will learn more about a tool that can be used to teach people to code. There is something for everyone. "], "date": ["Wednesday 25 July"], "tags": ["Beginners", "Fun and Humor", "Education", "Python general"]},
{"title": ["Quantum Computing: a Very Gentle Glimpse into a Possible Future"], "author": ["Nick Radcliffe"], "description": ["This talk will aim to demystify quantum computing and will assume no prior knowledge. The speaker, while having studied Quantum Field Theory many years ago, has only relatively recently started learning properly about  Quantum Computing, and is going to try to take advantage of the fact that the ideas are relatively new to him to explain the key concepts simply, to an audience (probably) consisting mostly of non-experts in quantum computing.", "Key questions I will try to cover are likely to include\n  * What is quantum mechanics anyway?\n  * What are quantum computers? Are they real? And are they really faster/more powerful than classical computers?\n  * What is a qubit (the quantum computing analogue of a bit)\n  * What problems are likely to be solved well by quantum computers?\n  * How do you program a quantum computer?\n  * How do you get results out of a quantum computer? What kind of results are they anyway? Do you have to visit other universes to get them?\n  * Can you get access to quantum computers online and use Python to program them (kind-of!)\n  * Will quantum computers break all encryption?\n  * What are Shor\u2019s and Grover\u2019s algorithms and (just possibly) how do they work?\n  * What are the challenges with building practical quantum computers?\n  * What is the Python story with Quantum Computing?"], "date": ["Wednesday 25 July"], "tags": ["Other Hardware", "Universe", "Mind Bending", "Physics", "Cryptography"]},
{"title": ["Quart a asyncio alternative to Flask"], "author": ["Philip Jones"], "description": ["Flask is a great web mirco-framework, that is best utilised with\nevent-loop concurrency. Sadly with Flask the event-loop framework\ncan\u2019t be asyncio, although some extensions (Flask-Aiohttp) have\ntried. Quart is the solution as it shares the Flask API and is\nbased on asyncio. In addition Quart goes beyond Flask adding\nHTTP/2 and websockets.", "This talk will outline why event-loop concurrency is a good\nchoice for web servers, why asyncio is a good choice and then\ngive an overview of Quart, demonstrating features that go beyond\nthe Flask framework."], "date": ["Friday 27 July"], "tags": ["HTTP"]},
{"title": ["Recipe for text analysis in social media:"], "author": ["Eulalia Veny"], "description": ["The analysis of text data in social media is gaining more and more importance every day. The need for companies to know what people think and want is key to invest money in providing customers what they want. The first approach to text analysis was mainly statistical, but adding linguistic information has been proven to work well for improving the results.", "One of the problems that you need to address when analyzing social media is time. People are constantly exchanging information, users write comments every day about what they think of a product, what they do or the places they visit. It is difficult to keep track of everything that happens. Moreover, information is sometimes expressed in short sentences, keywords, or isolated ideas, such as in Tweets. Language is usually unstructured because it is composed of isolated ideas, or without context.", "I will talk about the problem of text analysis in social media. I will also explain briefly Na\u00efve Bayes classifiers, and how you can easily take advantage of them to analyse sentiment in social media, and I will use an example to show how linguistic information can help improve the results. I will also evaluate the pros and cons of supervised vs unsupervised learning.", "Finally, I will introduce opinion lexicons, both dictionary based and corpus-based, and how lexicons can be used in semi-supervised learning and supervised learning. If I have time left, I will explain about other use cases of text analysis."], "date": ["Wednesday 25 July"], "tags": ["Case Study", "Notebook", "Natural Language Processing"]},
{"title": ["Python, Docker, Kubernetes, and beyond ?"], "author": ["Peter Babics"], "description": ["Have you ever tried to manage deployment of multiple python applications through various\nlinux distributions ? If so, you must have heard of Docker and maybe also Kubernetes.\nDistributing python applications using docker is simple and allows to create static packages\ncontaining everything required for them to run. Also it allows to freeze everything, packages, available\nlibraries, files on filesystem.\nIn my speech I would like to tell you about our brief journey, of moving our trading platform\nfrom standalone application directly on host system, through deploying it in docker and latter\nmoving it to kubernetes. I will explain our struggles with implementing stable and fast CI using Gitlab CI and Docker,\nimage (package) storage and cleanup of old images and finally I will tell you how we are deploying\nour platform to kubernetes, with nothing more than yaml-s and templating."], "date": ["Wednesday 25 July"], "tags": ["Docker", "Infrastructure", "Deployment/Continuous Integration and Delivery"]},
{"title": ["Python on Windows is Okay, Actually"], "author": ["Steve Dower"], "description": ["Packages that won\u2019t install, encodings that don\u2019t work, installers that ask too many questions, and having to own a PC are all great reasons to just ignore Windows. Or they would be, if they were true.\nDespite community perception, more than half of Python usage still happens on Windows, including web development, system administration, and data science, just like on Linux and Mac. And for the most part, Python works the same regardless of what operating system you happen to be using. Still, many library developers will unnecessarily exclude half of their potential audience by not even attempting to be compatible.\nThis session will walk through the things to be aware of when creating cross-platform libraries. From simple things like using pathlib rather than bytestrings, through to all the ways you can get builds and tests running on Windows for free, by the end of this session you will have a checklist of easy tasks for your project that will really enable the whole Python world to benefit from your work."], "date": ["Wednesday 25 July"], "tags": ["Windows", "Best Practice", "CPython", "Cross-Platform-Development"]},
{"title": ["Python and Web Sockets"], "author": ["Anton Caceres"], "description": ["Modern web-apps require bi-directional communication, reacting not only to user actions but also to server events. This can be achieved elegantly using Web Sockets, a protocol standardized by W3C to be a default tool for full-duplex connections on the Web.", "Although most web-frameworks do not support Web Socket integration out of the box, Python has multiple options available making it a piece of cake. This talk showcases integrating Web Sockets in Python web-apps, focusing on situations that can make good use of it and presenting implementations with most popular frameworks: Tornado and Django. We will explore a similar style but different underlying technologies of both, and finish with a live demo."], "date": ["Thursday 26 July"], "tags": ["Web", "Web Track", "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)", "ASYNC / Concurreny", "Django"]},
{"title": ["Python Decorators: Gift or Poison?"], "author": ["Anastasiia Tymoshchuk"], "description": ["Why would you ever need to use decorators in Python? ", "\nHave you ever had the task when you need to use one function in few places and you really wanted to avoid of code duplicating? For example to add some logging into functions or timers, etc. Decorators in Python are super powerful with these tasks, but at the same time they are super complicated, sometimes even magical. When I started learning Python, Decorators were really like a magic: how to use them, how are they working, lots of questions. The goal is to make the things easier and clear to answer a question: to use or not to use Decorators in your project. ", "\nWhat\u2019s in the Talk: ", "\n- Functions nature in Python ", "\n- Magic of a Decorator ", "\n- Basics ", "\n- When to use Decorators ", "\n- Examples ", "\n- Even more Python magic", "My slides are here: https://atymo.me/projects/presentations/GiftOrPoison/ ", "\nCode examples: https://github.com/atymoshchuk/python_tutorials"], "date": ["Wednesday 25 July"], "tags": ["Best Practice", "Clean Code", "Python general", "failures/mistakes", "Use Case"]},
{"title": ["Python in scientific computing: what works and what doesn't"], "author": ["Michele Simionato"], "description": ["There is no want of technologies for doing scientific calculations in Python. In this talk I will share some hard-learned knowledge about what works and what doesn\u2019t with the libraries we are using at GEM (the Global Earthquake Model foundation).\nI will show how the following libraries fare with respect to our main concerns of performance, simplicity, reliability and portability", "and I will talk about several library bugs we found and had to work around. I will also talk about some libraries that we do not use (such as cython, numba, dask, pytables, \u2026) and the reason why we do not use them.\nHopefully this will be useful to people using or planning to use a similar software stack.", "My slides are here: https://gitpitch.com/micheles/papers/europython2018"], "date": ["Wednesday 25 July"], "tags": ["Science", "Scientific Libraries (Numpy/Pandas/SciKit/...)", "Case Study"]},
{"title": ["Python and GraphQL"], "author": ["Alec MacQueen"], "description": ["GraphQL query language is gaining popularity and seeing more adoption.\nThis is mainly due to the efficiency with which consumers can get their data, the ease with which you can document and explore your API and the powerful tooling that has been built around the query language.", "This talk is for novices and experts of GraphQL alike and aims to cover the basics of the query language, how to implement it using Flask and SQLAlchemy and to take a deeper dive into how Python\u2019s type-hinting can be used to generate your GraphQL schema. ", "I\u2019ll also be talking about some of the tooling that can be used to provide consumers and developers working on your API with a great development experience. Next I\u2019ll cover some ways you can use these tools to empower your development process and get you developing \u2018API First\u2019. ", "To get the most out of this talk you should have a general understanding of APIs, Python frameworks and Python ORMs. However, my aim is to make it as accessible as possible for developers of all experience levels."], "date": ["Friday 27 July"], "tags": ["Web", "Python 3", "APIs"]},
{"title": ["PyPI: Past, Present and Future"], "author": ["Nicole Harris"], "description": ["The Python Package Index (PyPI) is the principal repository of software packages for the Python programming language.", "In May 2018, PyPI served 12.3 billion HTTP requests, with 1.4 million people visiting pypi.org via their web browser.", "The Python community depends on PyPI for the ongoing functioning of the entire Python ecosystem."], "date": ["Thursday 26 July"], "tags": ["PyPi"]},
{"title": ["Python 3: ten years later"], "author": ["Victor Stinner"], "description": ["Draft of the talk:", "Growing populary of the Python programming language", "Port Python 2 code to Python 3", "Port Python 2 code to Python 3", "No: \u201cAdd support for Python 3\u201d, don\u2019t loose Python 2 support", "Port Python 3 code to Python 2", "Python changes to make the transition smoother:", "PEP 414: u\"syntax\u201d reintroduced in Python 3.3", "Analysis of the transition", "Bugs that won\u2019t be fixed in Python 2 anymore", "Performance", "Evolutions of the Python language", "Python 3.5", "PEP 492: async/await \u201ckeywords\u201d for asyncio.\n(Really keywords in Python 3.7.)", "PEP 448: Generalized unpacking:\n", "head, *tail = list", "\n", "mylist = [1, 2, **other_list]", "\n", "mydict = {\"key\": \"value\", **other_dict}", "Python 3.6", "PEP 515: ", "million = 1_000_000", "Bury Python 2?"], "date": ["Friday 27 July"], "tags": ["Python 2", "Python 3", "CPython"]},
{"title": ["Python 2 is dead! Drag your old code into the modern age."], "author": ["Becky Smith"], "description": ["The clock is ticking on Python 2.7, with support to be dropped in January 2020.  With major dependencies such as Django, NumPy and pandas moving to Python 3 only, the time has come for even big established codebases to consider upgrading.  Many organisations are still postponing for various reasons; we will attempt to demonstrate that with a bit of planning and perseverance, and the assistance of some handy tools, we can embrace the future!", "This session will provide a first-hand perspective on how we upgraded a large (~65,000 lines of python code) 8-year-old Django project with multiple external dependencies from Python 2.7 to Python 3.6.  ", "We will briefly discuss the benefits of upgrading to Python 3, and architectural considerations.  The session will primarily focus on the practicalities of upgrading the code itself.  We will not try to provide a single \u201cbest\u201d solution for upgrading to Python 3, but rather will introduce some of the available tools, provide an insight into how we used them, and their advantages and disadvantages from our experience.  We will discuss preparatory steps and approaches, strategies for dealing with external dependencies, and \u201cgotchas\u201d that we encountered during the process.", "The aim of this session is to provide an example of how a Python 3 upgrade on an established commercial product can be successfully completed, and to furnish audience members with a set of tools and strategies to help them with their own projects.  ", "Prerequisites: basic knowledge of Python. "], "date": ["Wednesday 25 July"], "tags": ["Case Study", "GEO and GIS", "Python 3", "Django"]},
{"title": ["Proper Django Testing"], "author": ["Martin Angelov"], "description": ["I\u2019m currently working in a Django project, We have a lot of tests (~ 2000) and a fair amount of code coverage currently. The system and the requirements of the client grows everyday (like in every other project these days). I\u2019ve convinced that the effort we put in making each of these tests pays off daily.", "Speaking with other Django and Python developers I\u2019ve noticed that people often \u201coverengineer\u201d their unit tests and they usually tend to break their principles.", "In this presentation I will talk mainly about unit tests. - what packages we use and how and when to use them (properly). We will take a look on how we structure our projects and how this structure actually helps us write proper unit tests. I will start with the very basic tests and continue with the mocking technique. In the end I\u2019m going to refer to other testing methods (integration, E2E, validation testing,  visual regression, etc.).", "The goal of this talk is to make people better in testing and to show them how these skills will fasten the development process and  help them maintain their project and it\u2019s quality."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Django", "clients", "Testing", "APIs"]},
{"title": ["Programming paradigms for physical computing and IoT"], "author": ["Ben Nuttall"], "description": ["A look at the GPIO Zero library for Raspberry Pi yields the blueprint for a Pythonic API for programming the behaviour of interconnected devices.", "GPIO Zero provides a multi-paradigm programming interface to GPIO devices:\n- procedural (polling)\n- procedural (blocking)\n- event-driven (callbacks)\n- declarative", "Start with simple scripts to control LEDs and buttons on a breadboard, learn to prototype ideas and move on to declaring interaction between more advanced devices in the home and beyond.", "These options for device programming, along with the extensibility of the library, provide the means to program complex behaviour using simple Pythonic code. "], "date": ["Friday 27 July"], "tags": ["Gadgets", "Internet of Things (IoT)", "Sensors", "Raspberry PI", "Hardware/IoT Track"]},
{"title": ["Productionizing your ML code seamlessly"], "author": ["Lauris Jullien"], "description": ["Data science and Machine Learning are hot topics right now for Software Engineers and beyond. And there are a lot of python tools that allow you to hack together a notebook to quickly get insight on your data, or train a model to predict, or classify. Or you might have inherited some data wrangling and modeling {Jupyter/Zeppelin} notebook code from someone else, like the resident data scientist. ", "The code works on test data, when you run the cells in the right order (skipping cell 22), and you believe that the insight gained from this work would be a valuable game changer. But now how do you take this experimental code into production, and keep it up-to-date with a regular retraining schedule? And what do you need to do after that, to ensure that it remains reliable and brings value in the long term?", "These will be the questions this talk will answer, focusing on 2 main themes:\n     1. What does running an ML model in production involve?\n     2. How to improve your development workflow to make the path to production easier?", "This talk will draw examples from real projects at Yelp, like migrating a pandas/sklearn classification project into production with pyspark, while aiming to give advice that is not dependent on specific frameworks, or tools, and is useful for listeners from all backgrounds."], "date": ["Friday 27 July"], "tags": ["Best Practice", "Scientific Libraries (Numpy/Pandas/SciKit/...)", "Data Science", "Notebook", "Machine-Learning"]},
{"title": ["Processing Geodata using Python and Open Source Modules"], "author": ["Martin Christen"], "description": ["The need for processing small-scale to large-scale spatial data is huge. In this talk, it is shown how to analyze, manipulate and visualize geospatial data by using Python and various open source modules.", "The following modules will be covered:", "Github repo: https://github.com/martinchristen/EP2018_Geo"], "date": ["Friday 27 July"], "tags": ["Visualization", "Data", "Big Data", "Jupyter/iPython", "Science"]},
{"title": ["PEP 557* versus the world"], "author": ["Guillaume Gelin"], "description": ["Python 3.7 will ship with a new module called ", "dataclasses", ", which has been defined in PEP 557.", "This talk will deeply cover ", "dataclasses", ", but also ", "attrs", ", ", "box", ", ", "thingy", ", and others.", "Post-conference notes:\n- Slides: https://slides.com/ramnes/pep-557\n- Implementations and micro-benchmark: https://github.com/ramnes/pep-557-vs-the-world"], "date": ["Thursday 26 July"], "tags": ["Software Design", "Data Structures", "Clean Code", "Python 3", "Developing with Python Track"]},
{"title": ["Postgres at any scale"], "author": ["Craig Kerstiens"], "description": ["We\u2019ll start with the basics you need to know as an app developer about interacting with your database, then dig into how you can start to analyze performance. We\u2019ll look at things you need to know for a small application, then the things you should be cautious of as you start to layer in other items you need to be aware of for performance including:"], "date": ["Wednesday 25 July"], "tags": ["PostgreSQL", "Databases"]},
{"title": ["More Than You Ever Wanted To Know About Python Functions"], "author": ["Mark Smith"], "description": ["What exactly ", "are", " functions? Let\u2019s talk about functions, methods, callables and closures - what they are, what you can give them, what they can give you, what you can do with them \u2026 and what\u2019s inside.", "You probably think you already know everything about functions, but you probably don\u2019t!", "Input & Output", ": How do you get things in and out of functions? I\u2019ll cover parameters and the myriad of ways they can be specified, provided and accessed - including helpful hints to avoid common mistakes! I\u2019ll cover return values, briefly, along with variable scopes and exceptions.", "Closures", ": What are they, how do they work and how they can affect memory usage.", "Methods", ": How does a method differ from a function, when are they made, how do they work (where does ", "self", " come from?) and how to access the function inside every method.", "__magic__", ":Make your own callables from any object!", "Introspection", ": Using modern Python techniques, what can you find out about a function, and what can you do with that information?", "Bytecode", ": What happens if you open up a function and look at its insides? Can you change it and put it back together again? (Spoiler: Yes, you can.)", "By the end of this talk, I guarantee* you\u2019ll know more about callables than when you walked in, along with techniques both practical and so extreme your colleagues will never let you merge them to master.", "(*This guarantee is legally non-binding and cannot be redeemed in any way.)"], "date": ["Thursday 26 July"], "tags": ["Type-Hinting", "Mind Bending", "Programming", "Functional Programming"]},
{"title": ["My Story with Python and Open Source"], "author": ["Nicola Iarocci"], "description": ["This is the story of how I (and with me, my company) went from lonely, introvert, C# developer to open-source Python author and maintainer, speaker, trainer, consultant, and all-around community junkie. With some luck, in the process, you will also hear a few hints on how to become a good open source contributor and have a chance to ponder on the pros and cons (yes there are cons too) of going full monty with open source. We will also look at what changed in my company as we slowly switched from closed, in-house eco-systems to the open source field."], "date": ["Wednesday 25 July"], "tags": ["python", "Open-Source"]},
{"title": ["Mocks, fakes, dummies, stubs and spies: Successfully isolating the snake"], "author": ["Mario Corchero"], "description": ["Ever wonder what mocks, fakes, dummies stubs or spies are? Or what the differences are between them and when one should be used instead of another? We will take a deep look into these concepts, what they mean and examples on how to use/create them in Python.", "In this talk, we will quickly explore the reasons for using mock and how it works, quickly jumping into the different concepts of testing doubles and how they can be used in Python. The talk will include as part of the examples from some features in mock coming in Python 3.7 that might change how usual mocking is performed. The talk builds on the writings of Gerard Meszaros and Martin Fowler about testing doubles, focusing on how to apply them to Python.", "This session, which will review test isolation concepts and the unittest.mock module, is structured in a way that both beginners and intermediate developers will learn from it. A basic knowledge of testing is recommended. Intermediate developers will leave the room with a clear understanding of the tools - further than just using simple mocks - to successfully fake dependencies. Multiple \u201cnot so well known\u201d features of unittest.mock will be presented so we can shape those objects to behave functionally different.\nUnittest.mock is an extremely useful library which is commonly underused, this talk aims to bring clarity into stubbing in general and into medium/advanced mock features to ease and remove pain when users work with it.", "Outline: ", "\u2022 Intro (1\u2019)\n\u2022 Why doubles are important (1\u2019)\n\u2022 Main qualities of a double (2\u2019)\n\u2022 Overview of unittest.mock (5\u2019)\n\u2022 Testing doubles (15\u2019)\n    o   Doubles (1\u2019)\n    o   Stubs (2\u2019)\n    o   Spies (3\u2019)\n    o   Mocks (5\u2019)\n    o   Fakes (2\u2019)\n\u2022 Wrap up, conclusion and pointers (2\u2019)\n\u2022 Q&A (Expected 5\u2019)"], "date": ["Thursday 26 July"], "tags": ["python", "Testing", "Python general"]},
{"title": ["Microservices and Serverless in Python projects"], "author": ["Jose Manuel Ortega"], "description": ["Monoliths, microservices and now Serverless. Function as a Service (FaaS) platforms give us new ways to attack old problems. The possibility of executing functions as a service allows designing scalable and highly parallel applications, but on the other hand, this kind of applications require a particular programming style. For example, bundling dependencies and managing state is not trivial.", "However, there are plenty of tools and frameworks to help you code serverless applications with Python, and once you get started it is not complicated.", "In this talk we will mention the advantages of Serverless and we will focus on the situations in which we can introduce it into our Python projects. We will use AWS Lambda for the examples.", "These could be the main talking points:", "Introducing Serverless and Function as a Service (FaaS) in Python projects\nAdvantages of Microservices and Serverless \nAWS Lambda functions with chalice\nTesting AWS lambda with docker"], "date": ["Thursday 26 July"], "tags": ["Public Cloud (AWS/Google/...)", "Microservices", "Docker", "Architecture", "DevOps general"]},
{"title": ["Marge: A bot for better Git'ing"], "author": ["Mika Bostr\u00f6m"], "description": ["Over the past decade, development workflows across industries have converged towards Continuous Integration (CI) with pull requests (PR). Automated testing and artifact generation is useful, but the logic is often flawed: test are run against the source branch, and side effects from successful merges are not accounted for. Marge-bot improves this workflow by allowing to test the PR against the target branch while providing a host of other conveniences."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Development", "Deployment/Continuous Integration and Delivery", "Git", "Tooling"]},
{"title": ["May the Fuzz be with you"], "author": ["Heidi Thorpe"], "description": ["This talk will explore how Long short-term memory (LSTM) recurrent neural networks combined with Python can use Artificial Intelligence to provide invalid, unexpected, or random data as inputs for testing software and finding network security vulnerabilities. The technique of machine generated test inputs is an established testing approach and is sometimes referred to as fuzzing. I will take this idea further by presenting how various types of machine learning can provide novel outlier test cases to harden software and networks in a way that is superior to using only randomness. Instead, I will discuss how to train neural networks to produce better fuzzing data.This is a natural progression from my work with machine learning and image processing using support vector machines (SVM) and Generative Adversarial Networks (GAN) which I have applied to this new domain of software testing.\nThis a beginner level talk aimed at all software developers and testers with a goal to giving attendees a basic understanding of fuzz testing.", "Timing of presentation\n1 Introduction 0-5 minutes \n2 What is a neural fuzzing 5-10 minutes \n3 How does fuzzing work 10-15 minutes \n4 Steps to train a deep neural network 15-20 minutes \n5 Implementing a basic LSTM neural network for security testing 20-25 minutes \n6 Conclusion and Questions 25-30 minutes"], "date": ["Thursday 26 July"], "tags": ["python", "Security", "Testing", "Programming", "Data Science"]},
{"title": ["Let\u2019s Build a Python Profiler in 25 LOC"], "author": ["Noam Elfanbaum"], "description": ["A profile is a set of statistics that describes how often and for how long various parts of the program executed. Most profilers run inside your Python process.  If you\u2019re inside a Python program you generally have pretty easy access to its stack, hence we can gather information about time spent in each level.", "In this talk we\u2019ll build a Python profiler from scratch and so learn about the dynamic nature of Python and how do well-known profilers such as cProfile. ", "We\u2019ll also learn the difference between a tracing and a sampling profiler and which one to use in what circumstance."], "date": ["Wednesday 25 July"], "tags": ["Performance", "CPython"]},
{"title": ["Lies, damned lies, and statistics"], "author": ["Marco Bonzanini"], "description": ["Statistics show that eating ice cream causes death by drowning.", "If this sounds baffling, this talk will help you to understand correlation, bias, statistical significance and other statistical techniques that are commonly (mis)used to support an argument that leads, by accident or on purpose, to drawing the wrong conclusions.", "The casual observer is exposed to the use of statistics and probability in everyday life, but it is extremely easy to fall victim of a statistical fallacy, even for professional users.", "The purpose of this talk is to help the audience understand how to recognise and avoid these fallacies, by combining an introduction to statistics with examples of lies and damned lies, in a way that is approachable for beginners. ", "Agenda:"], "date": ["Friday 27 July"], "tags": ["Beginners", "Education"]},
{"title": ["Let\u2019s embrace WebAssembly!"], "author": ["Almar Klein"], "description": ["WebAssembly (WASM) is an open, low level binary format designed to be compact and run at native speed, while being memory-safe. WASM is primarily intended to run code in browsers, but its by no means limited to this. This makes it an interesting intermediate language (IR); code that compiles to WASM will (in the future) run basically anywhere. In short: WASM is coming and its great!", "Unsurprisingly, WASM is being embraced by many communities, such as C++, Rust, Lua, and .NET. Sadly, there does not seem to be a lot of enthusiasm from the Python community yet\u2026", "Perhaps this is because Python is interpreted and can therefore not (easily) use WASM as a compilation target. It should be possible to compile a Python interpreter (like CPython or Pypy) to WASM and thereby run Python code in a browser. But the result would be pretty heavy-weight, so it would arguably not be a very practical.", "Within the PPCI project (a pure Python compiler infrastructure) tooling has been developed to load, inspect, compile and even run WASM modules. This allows combining WASM and Python in new ways. In this talk we discuss two approaches by which the Python community might embrace WASM. ", "Firstly, various projects already exist that compile Python functions to other languages (e.g. Numba, PScript), and we have type annotations. If Python functions would be compiled to WASM, the resulting code would run in any WASM runtime (e.g. the browser). This will be demonstrated with an example, for which the resulting code can be run either in a browser or inside Python itself. In either case, it\u2019s pretty darn fast.", "Secondly, rather than ", "using", " WASM, it might be interesting for Python to function as a platform to ", "run", " and ", "bind", " WASM modules. Two of Python\u2019s greater strengths are its rich ecosystem and its ability to glue things together. Let\u2019s build on that! Imagine creating an application that consists of multiple WASM modules, perhaps compiled from different languages, and binding these together into a single Python app.", "This will be demonstrated with a game, which is written in Rust, compiled to WASM, and running inside a Python process. The WASM module consumes a drawing API, which is in this case provided by Python, and Python feeds the WASM module with user input.", "I hope that this talk inspires other Pythonistas to think about the advantages that WASM can bring to our ecosystem, and also about the role that Python can play in the growing WASM ecosystem."], "date": ["Wednesday 25 July"], "tags": ["Web", "All Other Programming Languages", "Community"]},
{"title": ["Leadership of Technical Teams"], "author": ["Owen Campbell"], "description": ["Over the years, I\u2019ve led, and been a member of, numerous technical teams on a wide variety of projects. Based on that experience, this talk will describe my personal observations on the role of the leader in that sort of team.", "The talk will be in 5 sections:", "There is no prior knowledge or experience required whatsoever. The talk is aimed equally at anyone  considering a leadership role for the first time or who has been doing so for many years."], "date": ["Wednesday 25 July"], "tags": ["Best Practice", "Business"]},
{"title": ["JavaScript for Python Developers"], "author": ["\u017dan Anderle"], "description": ["Having a hard time keeping track of where the modern JavaScript is going? Are you familiar only with jQuery and you want to know more? Or maybe you\u2019re not familiar with JavaScript at all and want to learn it but you don\u2019t know where to start? Then this talk is for you!", "You\u2019ll learn about modern JavaScript from a perspective of a Python developer. By the end of the talk you\u2019ll know everything you need to know about the language, its ecosystem, and different tools and frameworks. You\u2019ll be able to start using JavaScript more confidently and be familiar with different tools that are at your disposal.", "We\u2019ll go over all the things I wish I\u2019d known when I first got started with JavaScript.:"], "date": ["Thursday 26 July"], "tags": ["Web", "JavaScript", "Web General", "JavaScript Web Frameworks (AngularJS/ReactJS/...)"]},
{"title": ["Iteration Inside Out - Python's Iteration Protocol"], "author": ["Naomi Ceder"], "description": ["Using for loops and list comprehensions in Python is basic and quite common, right? But how does iteration in Python actually work \u201cunder the hood\u201d? The words \u201citerator\u201d and \u201citerable\u201d each occur over 500 times in the Python documentation, but what does an iterator actually ", "do", ", as opposed to an iterable? And how do they do it? Learn the details as we turn the iteration protocol inside out, with live coded demonstrations along the way.", "This talk will start from the way Python iterates of over a sequence, in comparison with iterating by index, like C. The key point of iterating over a sequence is that something needs to track which item in the sequence is next, which is something that Python\u2019s  iteration protocol manages.", "The iterable section will demonstrate creating a simple object that returns items by index (e.g., a fibonacci series), showing that ", "getitem", " is really all you need for an iterable, since an iterator is created for such objects when iterated upon. BUT, this doesn\u2019t answer the question of how Python keeps track of which item is next.", "The iterator section answers that question by converting the iterable just created to an iterator - adding ", "iter", " and ", "next", " methods and showing how the iterator saves state and essentially drives the iteration protocol. ", "Having an accurate understanding of iteration protocol will help developing Pythonistas reason better about both iterating over existing objects and creating their own iterables and iterators."], "date": ["Thursday 26 July"], "tags": ["Python general", "Programming", "Python 2", "Python 3"]},
{"title": ["Introduction to sentiment analysis with spaCy"], "author": ["Thomas Aglassinger"], "description": ["Sentiment analysis aims at extracting opinions from texts written in natural language, typically reviews or comments on social sites and forums. SpaCy already provides mechanisms for dealing with natural languages in general but does not offer means for sentiment analysis.", "This talk gives a short introduction to sentiment analysis in general and shows how to extract topics and ratings by utilizing spaCy\u2019s basic tools and extending them with a lexicon based approach and simple Python code to consolidate sentiments spread over multiple words.", "Topic covered are:", "Code examples are introduced and explained using a Jupyter notebook that can be used as basis for your own analysis.", "As additional twist the analyzed texts are not in English but German to show that this approach can be used for multiple languages. No knowledge of German is required though because translations of the short examples sentences are provided."], "date": ["Thursday 26 July"], "tags": ["Beginners", "Notebook", "Programming", "Natural Language Processing"]},
{"title": ["Is your code tainted? Finding security vulnerabilities using taint-tracking."], "author": ["Mark Shannon"], "description": ["\u201cTaint tracking\u201d is a technique used in code analysis to find security vulnerabilities and other problems.", "Any data that comes from an untrusted source, for example a HTTP request, is treated as \u201ctainted\u201d.\nIf that \u201ctainted\u201d data is able to reach a vulnerable part of your code, then you have a problem.\nSophisticated code analysis tools can track this data, and reveal potential security problems.\nExamples of the sort of problem that can be found include  cross-site scripting (XSS), code injection, SQL injection and others.", "In this talk I will show how taint tracking analysis works in practice, introducing the concepts of source, sink and sanitizer.\nI will then demonstrate using taint tracking to find a XSS vulnerability in a django app.\n(We will chose a project that is designed to teach django security, where the vulnerability is deliberate.)", "I will also explain how thinking in terms of \u201ctaint\u201d can help you write safer code,\neven without access to code analysis.", "During this talk I will use the code analysis tools on lgtm.com to demonstrate the analysis.\nlgtm.com is free to use for open-source projects. A paid version is available."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Security", "Code Analysis"]},
{"title": ["Interoperability Rules for an European API Ecosystem: do we still need SOAP?"], "author": ["Roberto Polli"], "description": ["Italy is introducing a new API Ecosystem because the complexity of the old SOAP-based protocol was now a barrier for the creation of newer services.", "This talk presents the Digital Transformation Team  ongoing work on an interoperability framework based on (REST) API, including:"], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Scaling", "Privacy", "RESTful", "APIs"]},
{"title": ["Integration Tests with Super Powers"], "author": ["Alexandre Figura"], "description": ["You are maybe like me: I never learned at school how to write tests. My teachers gave me at first a broad overview of computer history. Then, they explained me some basic design patterns. And to finish, I often had to write more or less basic programs, to validate and demonstrate my skills. Not the kind of code I would be really proud of today: the procrastinator monkey living in my head at this time was more thinking about planning my summer holidays, rather than writing Ninja code!", "And to make things worse, my studies focused on network and system engineering. Not software architecture. Funny story, because I decided to become programmer a couple of years later\u2026", "What I realize now is that I don\u2019t have as much time as before to learn. And in a world driven by business, where time is money, and where tradeoffs are the rule, there is rarely enough money to write both shiny new features and a complete test suite.", "People who practice Test-Driven Development know how complicated it can be to write proper tests. TDD is often discouraging at first: the learning curve is steep. But this problem also exists in the testing world in general. Because writing good tests is hard, many beginners get headaches trying to reach this goal. How to convince project managers to have more time for writing tests in these conditions\u2026", "But \u201cle jeu en vaut la chandelle\u201d as we say in French (\"the juice is worth the squeeze\"). Well tested applications are not only easier to maintain and extend. They also have in general a better API. That\u2019s what we will see in this talk, by focusing on how to write integration tests. Our journey will begin with a presentation of different testing strategies. We will then jump to the practical part, using Pytest, interface testing , dependency injections and stubs, amongst many others. And because we want to add nice buzzwords on our resume after EuroPython, we will finish this talk by automating the whole with Docker Compose."], "date": ["Friday 27 July"], "tags": ["Docker", "Testing", "Tooling", "Test Libraries (pyTest/node/...)"]},
{"title": ["How to write Rust instead of C, and get away with it (yes, it's a Python talk)"], "author": ["Antonio Verardi"], "description": ["Have you ever tried optimizing a super-slow Python application and thought: \u201cOh! I wish I could just write this bit it in Rust\u201d? Well, turns out you can!\nWe will show you how Rust is a better alternative than C to make your programs lightning fast, and how to get away with it; without your users even noticing.", "As Infrastructure Engineers at Yelp, the challenge we face everyday is: scale. Yelp is mostly a Python shop and while this is great for development velocity, our work often revolves around making Python applications run faster. Until now, we have been using different techniques: faster interpreters, or, more often, C code.", "Given its safety guarantees, performance and promise of better tooling than C, we decided we had to give Rust a try. The initial results helped reinforce that there was a lot of opportunity for Rust to play an important role in our production code.", "Yelp heavily relies on the Apache Avro (https://avro.apache.org/) serialization format for its internal infrastructure. During the talk, we will show how we implemented an Avro serialization/deserialization library in Rust, how we were able to call it from Python (and in theory from any other language) with very little code, using tools such as cbindgen (https://github.com/eqrion/cbindgen/), CFFI (https://cffi.readthedocs.io/en/latest/) and Milksnake (https://github.com/getsentry/milksnake/).", "This talk would outline how easy it is to write performant code in a language like Rust and call it from Python applications without users even realizing it, making this a great solution for production services."], "date": ["Wednesday 25 July"], "tags": ["Performance", "C-Languages", "CPython"]},
{"title": ["Industrial Machine Learning Pipelines with Python & Airflow"], "author": ["Alejandro Saucedo"], "description": ["This talk will provide key insights on the learnings I have obtained throughout my career building & deploying machine learning systems in critical environments across several sectors. I will provide a deep dive on how to build scalable and distributed machine learning data pipelines using Airflow with a Celery backend. I will also compare Airflow with other technologies available out there and how it differentiates, such as Luigi, Chronos, Pinball, etc. If you attend the talk, you will obtain an understanding on the solid fundamentals of Airflow, together with its caveats and walk-arounds for more complex use-cases. As we proceed with the examples, I will cover the challenges that you will run into when scaling Machine Learning systems, and how Airflow can be used to address these using a manager-worker-queue architecture for distributed processing with Celery.  By the end of this talk you will have the knowledge required to build your own industry-ready machine learning pipelines to process data at scale, and I will provide further reading resources so people are able to implement the knowledge obtained almost right away."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Deep Learning", "Distributed Systems", "Big Data", "Machine-Learning"]},
{"title": ["How to Write Deployment-friendly Applications"], "author": ["Hynek Schlawack"], "description": ["The DevOps movement gave us many ways to put Python applications into production. But should your application care? Should it need to know whether it\u2019s running on your notebook, on a server, in a Docker container, or in some cloud platform as a service?", "It should not, because environment-agnostic applications are easier to test, easier to deploy, easier to handle, and easier to scale.", "But how can you practically structure and configure your applications to make them indifferent to the environment they run in? How do secrets fit into the picture? And where do you put that log file?", "By the end of this talk you\u2019ll know the tools and techniques that enable you to write such Python applications and you\u2019ll be ready for the next big change. "], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Scaling", "Deployment/Continuous Integration and Delivery", "Architecture", "DevOps general"]},
{"title": ["How to make money using Python - Unused potential in the Enterprise World"], "author": ["Marc-Andre Lemburg"], "description": ["Python has gained quite some traction in the web development world and more recently as the goto language for anything that has to do with data science. However, it\u2019s use in the enterprise world of applications is rather limited.", "Based on the author\u2019s many years experience in working in enterprise environments, the talk will demonstrate areas in the business application space where Python has significant advantages over other languages, but which are currently dominated by applications written in Java, C++ or C#.", "There are huge opportunities out there for companies to excel at and use the Python advantage to their benefit. If you are looking for a lead idea to kick start your Python business (and you have the resources to invest into marketing), this talk is for you."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Python general", "Business", "Use Case"]},
{"title": ["How to develop your project from an idea to architecture design in 50 minutes"], "author": ["Anastasiia Tymoshchuk"], "description": ["Have you ever asked yourself: ", "\n- how and where to start developing a new project from the scratch, ", "\n- how to choose main components of a new software or how to develop a new feature, ", "\n- how to decide whether your project needs refactoring, ", "\n- how to avoid repeating the same issues? ", "\nThis talk will answer all these questions.  ", "You will learn:\n- how to develop the idea from scratch, ", "\n- how to use principles of Object Oriented Analysis and Design, ", "\n- how to show amazing architecture design.  ", "You will get better understanding where and how to start, analyze and decouple the system, create a clean, clear and extendable architecture.", "My slides are here: https://atymo.me/projects/presentations/FromIdeaToDesign/"], "date": ["Wednesday 25 July"], "tags": ["Software Design", "Data Structures", "Architecture", "Code Analysis", "Use Case"]},
{"title": ["How is python used in biomolecular sciences?"], "author": ["Antonia Mey"], "description": ["In the last ten years scientists working on computational problems involving proteins and other small molecules have largely moved to using python when developing simulation and data analysis tools allowing for a fast prototyping and development of new ideas. One big challenge is dealing with the compatibility of different tools and using these to create very complex adaptive, yet robust workflows in order to be able to guide cutting edge experiments e.g. predicting how well a small drug like molecule can bind to a protein that could serve as a target for a new drug. The talk will give a gentle introduction to what kind of python related tools are available in the field  of computational molecular biology, how they are used, and what kind of complex workflows scientist have to solve.\nI will then introduce BioSimSpace an open source python library and flagship project of the CCPBioSim consortium in the UK, which provides a common API to avoid having to learn many individual tools facing compatibility and dependency challenges allowing scientists to focus on the scientific question at hand and not solving programming challenges. BioSimSpace allows fast and interoperable building of workflow components (nodes) for bimolecular problems, which can easily be used on a variety of different computational resources. In particular I will introduce the cloud facilities available for fast prototyping using a Jupyter notebook interface. "], "date": ["Wednesday 25 July"], "tags": ["Physics", "Visualization", "Data", "Jupyter/iPython", "Scientific Libraries (Numpy/Pandas/SciKit/...)"]},
{"title": ["How do I get the job I want? "], "author": ["Franziska Schropp"], "description": ["Engineers are rare, jobs are plenty, so far so good. But what if I don\u2019t just want any job that pays the bills, but the job that will push my career and that I actually enjoy doing every day? If your answer to why you\u2019d like to join company XY is: \u201cWork from home and make good money\u201d, you should not be surprised to not be taken into the next round. But what would be a good answer to that question? What should I say when asked where I see myself in 5 years? There are a lot of subtle aspects to succeeding and failing in the application process, from your initial cover letter to the on site visit meeting the team.  As a tech recruiter, I\u2019d like to share with you the best and (sometimes quite entertaining) worst practices in the application process in order to help you get the job you want! "], "date": ["Wednesday 25 July"], "tags": ["The Answer to Life the Universe and Everything Else", "workforce", "Community"]},
{"title": ["How can you use Open Source materials to learn Python & data science?"], "author": ["Kamila Stepniowska"], "description": ["Python is very often recommended as the language of choice in a programming education. I can see at least two cases when it\u2019s a thing:\n- introduction to programming - regardless an age and any previous educational experience,\n- data science - it\u2019s just a standard\u2026\nand actually both - you can teach a future data scientists starting by teaching Python. ", "During this talk, I would like to briefly present you what Open Source Python educational materials do we have there and how those are and can be used to teach Python and data science. PyLadies, Django Girls, Django Carrots, Python Software Foundation creates many very available materials. From the data science side, you have Open Source materials created by kaggle, Minerva, Github repos, and many other organizations and individuals. ", "During this talk you will learn:\n- where to find an Open Source Python and data science tutorials and educational materials\n- how does the Python community can support your learning process\n- why learning data science with Python is a good idea.", "I\u2019m also interested in learning your educational experience with an Open Source materials and Python community supporting your learning experience. If you would like to share a link or your educational story,  please feel free to send me an email on kamila@stepniowski.com. If I will find it interesting for the audience and if you will give me your permission to share it, I might use it in the talk."], "date": ["Thursday 26 July"], "tags": ["Education", "Diversity", "Open-Source", "Community", "Learning"]},
{"title": ["How async and await ended up in Python"], "author": ["Pavlin Gergov"], "description": ["We\u2019re going to talk about regular functions,  iterables, iterators, function execution and yield - generator functions. We will send values and play with generators a bit. A quick look at asyncio will be followed by async and await, what a coroutine is and how to write async code with Python.", "Code snippets can be found here: ", "https://github.com/pgergov/europython-2018"], "date": ["Friday 27 July"], "tags": ["Beginners", "Education", "Python 3", "ASYNC / Concurreny"]},
{"title": ["Hello to the World in 8 Web Frameworks (micro, batteries included & async)"], "author": ["Aaron Bassett"], "description": ["Join us for a Phileas Fogg inspired whirlwind tour of eight Python web frameworks.", "\u201cHad he programmed? It was likely, for no one seemed to know web frameworks more familiarly; there was no framework so obscure that he did not appear to have an intimate acquaintance with it. He must have developed in everything, at least in the spirit.\u201d", "We\u2019ll start with the current crop of microframeworks, showing how to achieve the same task in each, before progressing to \u201cBatteries included\u201d and the more specialised async frameworks.", "For developers who perhaps have only used a single framework, this talk gives them an opportunity to get out and explore the world (of web frameworks) and broaden their horizons, with plenty of Jules Verne inspired fun along the way."], "date": ["Thursday 26 July"], "tags": ["Fun and Humor", "Pyramid", "ASYNC / Concurreny", "Internet", "Django"]},
{"title": ["Hacking Reinforcement Learning"], "author": ["Guillem Duran"], "description": ["Repository", "Slides with notes", "Creating huge datasets of top performing examples for Reinforcement Learning (RL) has always been tricky, but if we allow\nourselves to cheat a bit it can be done very easily. During this talk, I will present a new family of algorithms that allow to efficiently generate very high quality samples for any known RL environment.", "This new generation of planning algorithms achieves a performance which is several orders of magnitude higher\nthan any other existing alternative, while offering linear time complexity and good scalability.", "This talk will be a practical example\nof how we can use new tools for hacking any reinforcement learning environment, and make it generate superhuman level games.", "Hacking RL, as any other hacking process will be divided in four phases:", "During information gathering, I will briefly explain what are the main ideas behind Reinforcement Learning.\nI will also talk about how our theory (FractalAI) came to be, and what are the fundamental concepts behind it.", "We will find an attack vector against the environment API, and explain how it can be exploited. I will explain\nthe fundamental concepts needed to build a new generation of exploits, that will allow us to have complete control over the data the environment produces.", "This is the time to test the new exploits and to show a proof of concept. We will exploit the attack vector to gain access\nto the environment. Using only a laptop I will show how it is possible to sample data which surpasses human performance way faster than real time.", "Once we have gained control of the environment, we will measure how well the exploits work, and how well the techniques presented\ncan generalize to other types of environments.", "I want the talk to be as simple and fast as possible, with a lot of graphical examples, videos, and a Jupyter notebook.\nThe Q&A session is the time to apply some social engineering to get me to talk about the details that you find more interesting.\nI have prepared additional material covering the most common questions and concerns, but feel free to ask whatever you want, I love challenging questions ;)", "Some of the topics covered in the additional material are:", "Google spreadsheet with all bencharks on Atari", "Code used to run the examples", ". (Not merged to the FractalAI repo yet)"], "date": ["Wednesday 25 July"], "tags": ["Science", "Case Study", "Algorithms", "The Answer to Life the Universe and Everything Else", "Deep Learning"]},
{"title": ["Good features beat algorithms"], "author": ["Pietro Mascolo"], "description": ["In Machine Learning and Data Science in general, understanding the data is paramount. This understanding can come from many different sources and techniques: domain expertise, exploratory analysis, SMEs, some specific Machine Learning techniques, and feature engineering.\nAs a matter of fact, most Machine Learning and Statistical analysis strongly depends on how the data is prepared, thus making feature engineering very important for any serious Machine Learning enterprise.", "\u201cFeature engineering is the process of transforming raw data into features that better represent the underlying problem to the predictive models, resulting in improved model accuracy on unseen data.\u201d", "In this talk we will discuss what feature engineering  and feature selection are; how to select important features in a real-world dataset and how to develop a simple, but powerful ensemble to measure feature importance and perform feature selection.", "Familiarity with intermediate concepts of the Python programming language is required to follow the implementation steps. General knowledge of the basic concepts of Machine Learning and data cleaning will be useful, but not strictly necessary, to follow the discussion on feature selection and feature engineering."], "date": ["Friday 27 July"], "tags": ["Data", "Data Science", "Algorithms", "Python 3", "Machine-Learning"]},
{"title": ["Get Productive with Python in Visual Studio Code"], "author": ["Dan Taylor"], "description": ["In this demo driven session, we\u2019ll show you how to use the cross-platform, free, and open source Visual Studio Code for all your Python development needs. From editing, to linting, to debugging and more, you will learn how to get started, as well as tips and tricks to save you time in your everyday development lifecycle.", "If you\u2019re an experienced Python developer, you will learn how to take advantage of all of Visual Studio Code\u2019s capabilities to maximize your productivity. If you\u2019re a new Python developer, you will learn more about Python and how to use Visual Studio Code to get up and running quickly.", "We will start by showing how to create a new application, configure linting, manage virtual environments, and run code. Then we\u2019ll show how to use more powerful features like debugging, unit testing, the Docker extension, and Visual Studio Live Share for collaborative editing and debugging with your co-workers. ", "Code available at: http://github.com/qubitron/pydemo"], "date": ["Friday 27 July"], "tags": ["Development", "Debugging", "Programming", "Tooling", "Python general"]},
{"title": ["Getting Started with Mypy and Type Checking"], "author": ["Jukka Lehtosalo"], "description": ["Ever wondered if you should try type checking in your Python project, or what it takes to get started with mypy? I will show how to introduce type checking the easy way, one step at a time.", "Dropbox was an early adopter of type checking and mypy, and we\u2019ve been gradually adding type annotations to our large production codebases since 2016. Engineers love how type annotations improve the clarity of code, and how mypy can surface hard-to-find bugs. We\u2019ve learned a lot in the process of annotating millions of lines of code, and in this talk you\u2019ll learn battle-tested approaches for adding type checking to an existing codebase.", "I expect no previous experience with mypy. You\u2019ll benefit the most if you\u2019ve worked on a project with multiple developers."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Type-Hinting", "Tooling", "Code Analysis"]},
{"title": ["Fuzzy Matching - Smart Way of Finding Similar Names Using Fuzzywuzzy"], "author": ["Cheuk Ting Ho"], "description": ["Matching strings should be one of the first natural language processing problem that human encounter since we start use computer to handle data. Unlike numerical value which has an exact logic to compare them, it is very hard to say how alike two strings are for a computer. One may compare them character by character and have an idea of how many characters in the pair of stings are the same. Unfortunately in most application we need computer to perceive strings like we do and therefore we have to use fuzzy matching. Fuzzy matching on names is never straight forward though, the definition of how \u201cdifference\u201d of two names are really depends case by case. For example with restaurant names, matching of words like \u201ccafe\u201d \u201cbar\u201d and \u201crestaurant\u201d are consider less valuable then matching of some other less common words. Also, do we consider company names that matches partly (like \u201cHappy Unicorn company\u201d and Happy Unicorn co.\u201d) are the same?", "In the first half of the talk Levenshtein Distance, a measure of the similarity between two strings, will be explained. Different functions in Fuzzywuzzy like \u201cpartial", "ratio\u201d and \u201ctoken", "sort_ratio\u201d will also be explored and compared for difference. It is very important to understand our tool and choose the right one for our task. Then in the second half, we will start tackling the example problem: matching company names, we will show that besides using Fuzzywuzzy, we have to also handle problem like finding and avoid matching of common words and speeding up the matching process by grouping the names. By combining all tricks and techniques that we demonstrate, we will also evaluate how efficient this method is and the advantage of using this method.", "This talk is for people in all level of Python experience who would like to learn a trick or two and would like to be able to solve similar problems in the future. Theory of how the library works will be explained and It is easy to be pick up even for beginners."], "date": ["Wednesday 25 July"], "tags": ["Beginners", "Case Study", "Data", "Open-Source", "Natural Language Processing"]},
{"title": ["From Zero to Azure with Python, Docker containers, and Visual Studio Code"], "author": ["Dan Taylor"], "description": ["In this session we will walk through creating a Python web app\nwith Docker and deploying it to Microsoft Azure using the free,\ncross-platform, and open-source Visual Studio Code. We will also show\nusing hosted Jupyter notebooks in Azure Notebooks to analyze data, and\nstoring data in CosmosDB using the Azure SDK for Python. If you\u2019re\nexcited about Python and want to learn more about the capabilities of\nAzure, then this session is for you. We will cover all of the basics, no\nexperience with Azure, containers, cloud computing, or Visual Studio\nCode necessary!", "Code Repository: https://github.com/qubitron/zerotoazure-flaskcosmos"], "date": ["Wednesday 25 July"], "tags": ["Windows", "Web", "Docker", "Cross-Platform-Development"]},
{"title": ["From linear algebra to machine learning"], "author": ["Omar Guti\u00e9rrez"], "description": ["Math is a crucial skill for people who are interested in Data Science and Machine Learning. Until now, most of the people who are doing Data Science have a strong background in math, usually, people with master or Ph.D. degrees. ", "However, this fact seems to change in the next years, after the hype of Machine Learning we are facing a process of ", "democratization", ". Now the door of Data Science is open for everyone.", "To ", "truly madly deeply", " understand how the machine learning algorithms work we need to understand some mathematical concepts. In this tutorial, I would like to share my experience in the process of learning some of those concepts. ", "What I want to do is build a bridge between those concepts and Python, more specifically, ", "SciPy", " and ", "NumPy", " and ", "TensorFlow", ".  Basically is ", "just another tutorial about vectorization", ", in this case, oriented to understand and implement machine learning algorithms and the mathematical foundation that supports it.", "The material of the talk can be found ", "here"], "date": ["Friday 27 July"], "tags": ["Scientific Libraries (Numpy/Pandas/SciKit/...)", "Data Science", "Data", "Jupyter/iPython", "Machine-Learning"]},
{"title": ["Faster Python startup"], "author": ["Jeethu Rao"], "description": ["The cPython\u2019s startup speed generally quite fast compared to other similar dynamic language interpreters. Despite this, the interpreter\u2019s startup time increases linearly with the number and size of imported python modules. Although interpreter startup speed isn\u2019t a significant concern in long running servers, it does matter for the command line and other frequently launched applications.", "One of the oldest tricks in the book, when it comes to performance optimizations is to perform frequent and expensive operations fewer times and reuse results from previous invocations. We noticed that the overhead of reading and un-marshalling .pyc files at startup can be eliminated if we could directly embed code objects and their associated object graph from .pyc files into the data segment of the cPython binary. This technique is quite similar to the approach taken by image based languages like Smalltalk in the past. Implementing this for cPython is made simpler because marshaled code objects in .pyc files contain a subset of the types of objects that marshal format supports. With this approach, loading a module included in the python binary is as cheap as dereferencing a pointer, albeit at the cost of increased binary size.", "This talk will discuss the approach taken to implement the aforementioned idea for Python 3.6 and the challenges faced in implementing it. It will also talk about benchmark results from the improvements and possible future directions for this work. Although this talk delves into cPython internals, no prior experience with cPython internals is required to follow along."], "date": ["Friday 27 July"], "tags": ["Performance", "Compiler and Interpreters", "CPython"]},
{"title": ["ETL pipeline to achieve reliability at scale"], "author": ["Isabel Lopez"], "description": ["In an online betting exchange, thousands of money related transactions are generated per minute. This data flow transforms a common and, in general, tedious task such as accounting into an interesting big data engineering problem. At Smarkets, accounting reports serve two main purposes: housekeeping of our financial operations and documentation for the relevant regulation authorities. In both cases, reliability and accuracy are crucial in the final result. The fact that these reports are generated daily, the need to cope with failure when retrieving data from previous days, and the fast growing transaction volume obsoleted the original accounting system and required a new pipeline that could scale.", "This talk presents the ETL pipeline designed to meet the constraints highlighted above, and explains the motivations behind the tech stack chosen for the job, which includes Python3, Luigi and Spark among others. These topics will be covered by describing the main technical problems solved with our design:\n- Fault tolerance and reliability, i.e ability to identify faulty steps and only rerun those instead of the whole pipeline.\n- Fast input/output.\n- Fast computations."], "date": ["Wednesday 25 July"], "tags": ["Case Study", "Python 3", "Big Data", "Scientific Libraries (Numpy/Pandas/SciKit/...)"]},
{"title": ["EduBlocks - Making the transition to Python easier!"], "author": ["Joshua Lowe"], "description": ["Looking for ways to make the transition from block based programming to Python easier, then look no further!  In this talk 14 year old Josh will introduce you to his project called EduBlocks, which is a drag and drop version of Python 3 that he has created to help teachers introduce programming languages, like Python, to children at an earlier age.\nThe goal of the project is to make the transition from block based programs like Scratch to Python easier for students and teachers, as presently there is no drop-in solution that bridges this gap. Josh will share his journey so far with you, from how he came up with the idea when he was only 11 years old, the developments along the way, the exciting plans for the future and how schools today in over 72 different countries  around the world are making use of EduBlocks on the Raspberry Pi and micro:bit. "], "date": ["Friday 27 July"], "tags": ["MicroPython", "Education", "Python 3", "Community", "Open-Source"]},
{"title": ["Exploring the Python AST Ecosystem"], "author": ["Chase Stevens"], "description": ["Materials are available at https://github.com/hchasestevens/europython-2018", "This session will introduce attendees to Python\u2019s rich ecosystem of abstract syntax tree tooling and libraries, with an emphasis on practical applications in static analysis and metaprogramming. Attendees should be fully comfortable with Python syntax and semantics, but familiarity with the ast module itself will not be necessary. ", "The talk will begin with a conceptual overview of ASTs, including a brief look at Python\u2019s built-in introspection capabilities. It will introduce tools for AST visualization (astor, showast, python-ast-explorer), creation (asttools, meta), and transformation to source code (codegen). ", "How the AST can be used for static analysis will be covered; this will include discussion of Python\u2019s built-in facilities (NodeVisitor) as well as of the 3rd party tools astsearch, astpath, and bellybutton. The talk will demonstrate the advantages and limits of these tools in comparison to other static analysis tooling (pylint, mypy); particular attention will be paid to how these tools can be incorporated into attendees\u2019 workflows and  existing codebases and projects. ", "Tooling for Python AST manipulation and metaprogramming will be the final topic covered, focusing on the use of the NodeTransformer built-in. The talk will cover practical applications and examples of metaprogramming, such as metaprogramming for DSLS (pony, xpyth), runtime code manipulation (patterns, yield-from), and others (e.g. assertion rewriting in pytest).", "While the talk will touch only briefly on each of the applications discussed, by the end of the session attendees should have a firm grasp of the kinds of problems the AST can be used to solve, what existing AST tooling can accomplish, and what resources are available for the development of their own AST tools."], "date": ["Friday 27 July"], "tags": ["Use Case", "Python general", "Tooling", "Code Analysis", "Static Analysis"]},
{"title": ["Easy interactive data applications with Dash"], "author": ["Matteo Guzzo"], "description": ["Plotly Dash is a Python  framework for building interactive dashboards and web data applications, based on Flask, React.js, and Plotly. It allows a python-only approach to something that previously required knowledge of Javascript, heavily reducing the overhead required to create a web application. I\u2019ll show how easy it is to set up a small interactive web app using data from the Twitch API and to expand it at will, using only Python. "], "date": ["Friday 27 July"], "tags": ["Web", "Visualization", "Data Science", "Scientific Libraries (Numpy/Pandas/SciKit/...)", "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)"]},
{"title": ["Developing in a black hole: vim, tmux, httpie and jq"], "author": ["Francisco Javier Aceituno Lapido"], "description": ["\u201cProductivity depends on the knowledge you have of the tools used.\u201d", "Do you feel that the development tools you use are heavy? \nDo you think that they make you less productive?\nDo you want to have maximum productivity without lifting your hands from the keyboard? ", "If so, this talk is for you.", "In this talk, I will show what are the tools I use every day in software development at OnTruck and how you can integrate", "the text editor, vim\nthe terminal multiplexer, tmux\nthe HTTP client, httpie\nand the json processor, jq", "to get a very productive development environment, all running on a simple terminal."], "date": ["Thursday 26 July"], "tags": ["Development", "Agile", "Unix", "Tooling", "Command-Line"]},
{"title": ["Deep Learning with PyTorch for Fun and Profit"], "author": ["Alexander Hendorf"], "description": ["There are all these great blog posts about Deep Learning describing all that awesome stuff.  - Is it all that easy? Let\u2019s check!", "We\u2019ll look into: style transfer (making a picture look like painting), speech generation (like Siri or Alexa) and text generation (writing a story).\nIn this talk I\u2019ll describe the whole journey: A fun ride from the idea to the very end including all the struggles, failures and successes.", "Steps, we\u2019ll cover:", "The data challenge: get the data ready", "Have it run on your Mac with PyTorch and an eGPU", "Creating a character-level language models with an Recurrent Neural Network", "Creating a text generator", "Creating artwork"], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Case Study", "Natural Language Processing", "failures/mistakes", "Deep Learning"]},
{"title": ["Domain-Driven Design Patterns in Python"], "author": ["Robert Smallshire"], "description": ["Domain-Driven Design (DDD) is an approach to software development that emphasises high-fidelity modelling of the problem domain, and which uses a software implementation of the domain model as a foundation for system design. This approach helps organize and minimize the essential complexity of your software.  DDD has been used with success within the traditional enterprise programming ecosystems of Java and .NET, but has seen only limited adoption in the Python community.", "In this talk we introduce Python programmers to the core tactical patterns of DDD and show how they can be realised in idiomatic Python, freeing the most valuable parts of your system \u2013 the domain model \u2013 from onerous dependencies on particular databases or application frameworks.", "In this talk we share what we\u2019ve learned from applying DDD in Python to large projects."], "date": ["Friday 27 July"], "tags": ["Software Design", "Abstractions", "Programming", "Architecture", "Databases"]},
{"title": ["Django structure for scale and longevity"], "author": ["Radoslav Georgiev"], "description": ["Django is great.", "But as we add new features, as our dev team grows & the software needs to be stable on production, things can get quite messy.", "We are going to look at some common patterns, derived from experience, on how to structure your Django project for scale and longevity.", "Main topics are:", "We are going to talk about when to rely on existing abstraction so it\u2019s actually helpful & when to avoid existing abstraction, and code things ourselves.", "The examples showed in this talk are derived from working with Django in the last 5 years on projects with:", "Key takeaways from the talk:", "The talk is great for all levels of Django knowledge - from beginners to advanced users & teams.", "The main way of getting the point across is going to be by showing regular code, talking how it can get messy & then following up with examples of improving that code. Hopefully this talk will start a lot of discussion afterwards.", "Breakdown of the talk:"], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Clean Code", "Python 3", "failures/mistakes", "Django"]},
{"title": ["Django queries optimization"], "author": ["Ivaylo Donchev"], "description": ["Collecting data from multiple Models is a common flow in Django development. In most of the cases ", "prefetch_related", " and ", "select_related", " do all of the job for optimizing the queries.", "When the models structure become complicated enough and we\u2019ve put our logic for collecting these items in models\u2019 properties we suddenly cannot use ", "prefetch_related", " or ", "select_related", " anymore. Our View \u2018s queries count depends on selected items count with high complexity. The problem is in the selection logic: we\u2019ve implemented an algorithm which calculates something and we cannot prefetch or select all of the objects. ", "So this talk\u2019s purpose is: To show how to use Django ORM to move the selection logic, the calculations, the aggregations over group of objects from our python code to our database and moving all of the logic for this in one place - the queryset and test it easily."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Django", "Databases", "PostgreSQL", "APIs"]},
{"title": ["Cython to speed up your Python code"], "author": ["Stefan Behnel"], "description": ["Cython", " is not only a very fast and comfortable way to talk to native code and libraries, it is also a widely used tool for speeding up Python code. The Cython compiler translates Python code to C or C++ code, and applies many static optimisations that make Python code run visibly faster than in the interpreter. But even better, it supports static type annotations that allow direct use of C/C++ data types and functions, which the compiler uses to convert and optimise the code into fast, native C. The tight integration of all three languages, Python, C and C++, makes it possible to freely mix Python features like generators and comprehensions with C/C++ features like native data types, pointer arithmetic or manually tuned memory management in the same code.", "This talk by a core developer introduces the Cython compiler by interactive code examples, and shows how you can use it to speed up your Python code. You will learn how you can profile a Python module and use Cython to compile and optimise it into a fast binary extension module. All of that, without losing the ability to run it through common development tools like static analysers or coverage test tools."], "date": ["Thursday 26 July"], "tags": ["Cython", "Compiler and Interpreters", "C-Languages", "Performance"]},
{"title": ["Debugging Your Code with Data Visualization"], "author": ["James Saryerwinnie"], "description": ["Let\u2019s face it.  Sometimes our code just isn\u2019t working how we expect it to work.\nWhen this happens, we fall back to our trusty tools to help us\ndebug: pdb, the logging module, or even simple print statements.  But sometimes\nthat just isn\u2019t enough, we still can\u2019t figure out why our code is broken.\nWe need something more.", "There are a number of fantastic libraries in python for\ncreating data visualizations.  These libraries are commonly used for\nanalyzing and visualizing large sets of data, but don\u2019t see as much\nusage when it comes to helping us write and debug our code.", "What if we could combine the two?  What if we could leverage data\nvisualization tools to understand what our program is doing?  Sometimes, by\nseeing a visual representation of what our code is doing, it becomes much\neasier to understand why our code is not working.  We don\u2019t need to create\npublication quality graphs and charts, we just need to generate quick, one-off\nvisualizations to understand what our code is doing.  What we want is the \u201cdata\nvisualization\u201d equivalent to print() statements.", "To help illustrate this point, I will walk through some of the hardest\nbugs I\u2019ve had to track down while working on projects such as the AWS CLI and\nboto3, the AWS SDK for Python.  For each bug, I\u2019ll show you how I was able to\nleverage data visualization techniques to troubleshoot and fix these bugs.\nCome learn how to debug more efficiently by leveraging data visualization."], "date": ["Thursday 26 July"], "tags": ["Public Cloud (AWS/Google/...)", "Visualization", "Debugging", "Case Study"]},
{"title": ["Data is not flat"], "author": ["Alisa Dammer"], "description": ["Feature engineering and model training often comes hand in hand. Some tasks have an overwhelming amount of high dimensional data, some tasks have little data or very low-dimension data. \nThis talk targets the latter problem: what can be done with the data itself to significantly improve the model performance and when manual feature engineering does make sense. ", "\nA sample case of Classification problem with NN will be presented\nThe goal of the talk is to remind about something every person working with the data thinks and probably uses.\n Slides, Jupyter notebook with the example, test and train sets, NN configuration file are available on:\nhttps://github.com/Alisa-lisa/conferences"], "date": ["Thursday 26 July"], "tags": ["Data", "Data Science", "Algorithms", "Machine-Learning"]},
{"title": ["Code Review Skills for Pythonistas"], "author": ["Nina Zakharenko"], "description": ["As teams and projects grow, code review becomes increasingly important to support the maintainability of complex codebases. In this talk, I\u2019ll cover guidelines for writing consistent python code beyond pep8, how to look out for common python gotchas, and what python tools are available to automate various parts of the review process. Most importantly, I\u2019ll cover the human aspect of code reviews - how we can be better at approaching reviews with empathy and understanding from the perspective of both a reviewer and a submitter. Following these successful code review practices will lead to happier teams and healthier code bases.", "This talk is useful for python developers with any amount of experience. No prerequisite knowledge is necessary. \n- For those who are just starting out, it will be a great general overview.\n- Intermediate developers may not know about the wide variety of tooling that\u2019s available.\n- Advanced developers will learn techniques for performing code reviews with empathy.", "This talk will enable you to have better code reviews on your teams at work, and a better approach to code reviews in open source projects. You\u2019ll leave with 3 main takeaways:\n 1. Code Reviews are most effective when conducted with empathy. If you do reviews with growth and learning in mind, they become tools for sharing knowledge instead of an opportunity to bruise egos or show off esoteric knowledge.\n 2. Python has powerful tooling available for code reviews such as pep8 as a style guide, pylint as a linter, coverage.py to identify test coverage, and vulture to identify dead code.\n 3. That python style guides beyond pep8 have clear benefits in terms of producing more consistent code that\u2019s easier to review and easier to maintain."], "date": ["Thursday 26 July"], "tags": ["Development", "Clean Code", "Programming", "Open-Source", "Code Analysis"]},
{"title": ["Creating a Culture of Software Craftsmanship\u202f"], "author": ["Keith Harrison"], "description": ["This time it\u2019ll be different. It\u2019s a green field project and you\u2019ve learned from your mistakes. You\u2019re not going to make the same ones again.", "Fast forward several months and you\u2019re in a mess. A change in one place causes bugs in a completely different place. Adding a simple feature means making changes all over your application. Progress is getting slower and slower. You\u2019re lost in complexity.", "Why does this keep happening and what can we do about it? ", "This talk will try to answer those questions.", "I\u2019ll show how complex software really is, define the different types of complexity found in software, explain the issues complexity causes and discuss different techniques we can use to manage it.", "This talk is suitable for anyone who has worked or will work on a software development project. No development experience is required."], "date": ["Friday 27 July"], "tags": ["Best Practice", "Agile", "Clean Code"]},
{"title": ["Change music in two epochs"], "author": ["Marcel Raas"], "description": ["This talk is about applying deep learning to music. We will look at the raw music data and discover the following:", "Instead of applying it to existing music we will generate our own music using some simple musical rules. The benefit of this is that we are in control of the complexity and we know exactly what is being played. We start out simple and then start adding more instruments, different timbres, etc. As we go up in complexity, we shall see how to adapt our models to be able to deal with it. This gives interesting insights in what structures in deep nets work well.", "I will show:", "For more info, see the github repository at https://github.com/marcelraas/music-generator"], "date": ["Friday 27 July"], "tags": ["Deep Learning", "Algorithms", "Machine-Learning", "Scientific Libraries (Numpy/Pandas/SciKit/...)"]},
{"title": ["A Python implementation in Rust?"], "author": ["Windel Bouwman"], "description": ["Rust is a fairly new programming language aimed as a competitor of C.\nThere are already attempts to write extension modules in rust and load\nthem into CPython. A whole new approach would be to re-implement the Python\nlanguage in rust.", "This is what the rspython project is about: implementing\na python interpreter in rust. Rust already has many features such as vectors,\nhashmaps and strings as unicode. There also exist already modules for\nregular expressions and dealing with files, so a lot can be re-used in\nthis area.", "During this talk we will dive into rust and python and the design of\nthe rspython. We will present some challenges and opportunities. Also\nwe will show the current state of this project in a demo."], "date": ["Thursday 26 July"], "tags": ["Compiler and Interpreters", "Python 3"]},
{"title": ["Bytecodes and stacks: A look at CPython\u2019s compiler and its execution model"], "author": ["Petr Viktorin"], "description": ["So, you wrote some Python code. What needs to happen before it starts running? And once it\u2019s running, how does Python keep track of what it\u2019s doing?", "I\u2019ll talk about CPython\u2019s tokenization, parsing, bytecode and its serialization and cache, the stack-based virtual machine, line number tables, and code, frame and function objects.", "Don\u2019t worry if you\u2019ve never heard of these concepts. While even experts should learn something new, the talk is aimed at anyone who\u2019s worked on a Python project or two."], "date": ["Friday 27 July"], "tags": ["Compiler and Interpreters", "CPython"]},
{"title": ["A tale of refactoring"], "author": ["Emmanuelle Delescolle"], "description": ["A couple years ago I was approached by a client to help them improve the performance and maintainability of their code.", "That code was filled with very long functions, some of them with very similar code and the project was really hard to understand as a whole.", "My first reflex was to refactor this code code to make it more understandable. In my opinion, it did fit part of my assignment as understandable code is easier to maintain but it was also very helpful later in letting me make small changes with full knowledge of what was going to be affected by those changes.", "Large methods and functions is something that creeps into our code whether we plan for it or not. This talk is about one way to deal with it.", "This talk will be based on code provided by the GildedRose Refcatoring Kata: https://github.com/emilybache/GildedRose-Refactoring-Kata", "Prerequisites:\n- Basic knowledge of Python\n- Basic knowledge of OOP", "Goals:\n- Demonstrate one approach for refactoring code\n- Show how to leverage Python\u2019s dynamic nature to make code simpler"], "date": ["Friday 27 July"], "tags": ["Case Study", "Programming", "Code Analysis", "failures/mistakes", "Clean Code"]},
{"title": ["CatBoost - the new generation of Gradient Boosting"], "author": ["Anna Veronika Dorogush"], "description": ["Gradient boosting is a powerful machine-learning technique that achieves state-of-the-art results\nin a variety of practical tasks. For a number of years, it has remained the primary method for\nlearning problems with heterogeneous features, noisy data, and complex dependencies: web search,\nrecommendation systems, weather forecasting, and many others.\nCatBoost (http://catboost.yandex) is a new open-source gradient boosting library, that outperforms existing publicly available implementations of gradient boosting in terms of quality. It has a set of addional advantages.", "CatBoost is able to incorporate categorical features in your data (like music genre, URL, search query, etc.) in predictive models with no additional preprocessing. For more details on our approach please refer to our NIPS 2017 ML Systems Workshop paper (http://learningsys.org/nips17/assets/papers/paper_11.pdf).", "CatBoost inference is 20-60 times faster then in other open-source gradient boosting libraries, which makes it possible to use CatBoost for latency-critical tasks.", "CatBoost has the fastest GPU and multi GPU training implementations of all the openly available gradient boosting libraries.", "CatBoost requires no hyperparameter tunning in order to get a model with good quality.", "CatBoost is highly scalable and can be efficiently trained using hundreds of machines", "The talk will cover a broad description of gradient boosting and its areas of usage and the differences between CatBoost and other gradient boosting libraries. We will also briefly explain the details of the proprietary algorithm that leads to a boost in quality."], "date": ["Thursday 26 July"], "tags": ["Big Data", "Data Science", "Open-Source", "Machine-Learning"]},
{"title": ["Creating Solid APIs"], "author": ["Rivo Laks"], "description": ["Increasingly, our apps are used not by humans but by other apps - via their APIs. Thus it is increasingly important that your APIs are well-designed and easy to consume for other developers.", "Adding a few API endpoints to your application for internal consumption is easy. Creating APIs that other developers will love to use is a much harder problem.\nYou\u2019ll need to think about solving variety of topics such as versioning, authentication, response structure, documentation and more. There are existing good practices for each of them, but often developers who haven\u2019t done a lot of API work aren\u2019t familiar with them.", "My talk will show how to find reasonable solutions for those problems.\nI will talk about importance and intricacies of good documentation and why auto-generating it from your code is useful. I\u2019ll show how to make use of familiarity by using standards such as JSON API and show benefits brought by its standardized response structure that makes lives of 3rd-party developers easier.", "Authentication will be discussed, including introduction to OAuth2. I\u2019ll talk about when OAuth2 is a good choice and when not, as well as dig into some trickier parts of it.\nWe\u2019ll then move on to versioning and how you can change your API without breaking all existing apps.\nFinally we\u2019ll wrap it all up by looking at some major APIs that are using the same principles."], "date": ["Friday 27 July"], "tags": ["Best Practice", "RESTful", "Web General", "APIs"]},
{"title": ["A Jupyter Enhancement Proposal Story"], "author": ["Raniere Silva"], "description": ["Python users should be familiar with the concept of Python Enhancement Proposals (PEPs), the way that the Python language evolves over time. In a similar fashion, the Jupyter project has Jupyter Enhancement Proposals (JEPs). This talk with cover the proposer first-hand experience when submiting JEP 23 - Add Template as Metatada enhancement proposal from it\u2019s beginning, during EuroPython 2017, up to its current status. We will, in addition, present efforts made as part of the OpenDreamKit project to perform Jupyter notebooks conversions using custom metadata, templates, and exporters, in a programmatic way. ", "Outline", "0:00 - 0:05 Who are we? We are impostors!\n0:05 - 0:10 Our previous experience with Jupyter Notebook. We will talk about the time that Software Carpentry used Jupyter Notebook for their lesson creation and OpenDreamKit Jupyter notebook programmatic notebooks conversion.\n0:10 - 0:15 You are not alone. We will talk how the idea for the Jupyter Enhancement Proposals (JEPs) borned at EuroPython 2017 Help Desk\n0:15 - 0:20 Writing our first Jupyter Enhancement Proposals. We will cover our steps to create the pull request required by the Jupyter Project.\n0:20 - 0:25 What is the current status of the Jupyter Enhancement Proposals? We will cover any progress from the time of this talk proposal submission and the date of it presentation.\n0:25 - 0:30 Time for questions "], "date": ["Wednesday 25 July"], "tags": ["Case Study", "Jupyter/iPython", "Community"]},
{"title": ["10 years of EuroPython and the Python community"], "author": ["Dougal Matthews"], "description": ["This talk will take you on a journey from Birmingham to Edinburgh via Florence, Berlin, Bilbao and Rimini. The last 10 years of EuroPython.", "This will be a trip down memory lane where we look at how the language, community and conference have evolved with some personal anecdotes along the way.", "This will be in part a retrospective, where we will look at what we have done well and where we can do better. Finally, we will look at some aspirations and ideas for the coming years."], "date": ["Thursday 26 July"], "tags": ["EuroPython", "Community"]},
{"title": ["White Mars: living far away from any form of life"], "author": ["Marco Buttu"], "description": ["Concordia Station is a French/Italian facility located inside Antarctica, in a plateau called Dome-C, in the middle of nowhere. A dark and cold place: no Sun from May to August, temperatures around -80 Celsius degress, no life. Here I am living and performing scientific research with other 12 collegues from Italy, France and Austria. We are the most isolated people on Earth, more than the austronauts in the International Space Station. There is no way to move from Concordia until November, and no one can come. It is like to live in another planet, and that is why the European Space Agency is interested in making bio-medical research on us, in order to better understand how the human body behaves in a such extraterrestrial environment. We will introduce our studies, describe this place and our life here, and of course also speak about Python."], "date": ["Wednesday 25 July"], "tags": ["Science", "Case Study"]},
{"title": ["Die Threads"], "author": ["David Beazley"], "description": ["In the brave new world of async, threads are now a thing of the past. Or are they not?"], "date": ["Wednesday 25 July"], "tags": ["Python general", "ASYNC / Concurreny", "Multi-Threading"]},
{"title": ["How to Ignore Most Startup Advice and Build a Decent Software Business"], "author": ["Ines Montani"], "description": ["It\u2019s a great time to be a software developer. Platforms are steadily becoming more mature, useful tools are released almost daily and things that seemed hopelessly futuristic only a few years ago are suddenly commercially viable. Despite this, the software world is awash with bullshit. The success of the largest technology companies has led to a very skewed set of lessons. This narrow focus is amplified by the venture capital industry and the fact that nobody really knows what\u2019s going to happen next.", "The good news is, none of this actually matters. The basics of creating something useful and selling it for money remain the same. In this talk, I\u2019m not going to give you \u201cone weird trick\u201d or tell you to ~* just follow your dreams *~. But I\u2019ll share some of the things we\u2019ve learned from building a successful software company around commercial developer tools and our open-source library spaCy."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Natural Language Processing", "Business", "failures/mistakes", "Use Case"]}
][
{"title": ["A Python for Future Generations"], "author": ["Armin Ronacher"], "description": ["A journey through the current Python interpreter, some of the effects of its\nleaky abstraction on the language design and how we could evolve the language to future proof it. Covers some practical and not so practical ideas based on experience in the JavaScript and Rust ecosystem."], "date": ["Monday 10 July"], "tags": ["python"]},
{"title": ["Building a real-time embedded audio sampling application with MicroPython"], "author": ["Alan Christie"], "description": ["While demonstrating the pyboard to a group of colleagues, a challenge was set to produce a practical demonstration of the device that would provide automatic and continuous voice recording and playback of short spoken phrases similar to that found in a number of talking toys.", "This talk covers the process of designing and testing the embedded real-time Python solution and includes the architecture, test methodologies and recordings as the stages progressed to the final source code. The talk concludes with a live demonstration of the final application. The solution uses MicroPython (an embedded implementation of Python 3), the pyboard and its AMP Audio skin.", "MicroPython", " is a lean implementation of Python 3 that is optimised to run in a very small footprint on micro-controllers and in constrained environments. It was created by the Australian programmer and physicist Damien George, after a successful Kickstarter backed campaign in 2013.", "The ", "pyboard", " is the original reference hardware created to host MicroPython. It is a compact low-power board based on an ARM processor with a heap of approximately 100kBytes that can run at 168MHz. It has sufficient hardware services and real-time capabilities to control all kinds of electronic projects.", "The ", "AMP Audio skin", " is a small additional module that attaches to the pyboard that adds a small power amplifier, speaker and a microphone with a pre-amp."], "date": ["Monday 10 July"], "tags": ["Gadgets", "MicroPython", "Sensors", "Micro-Computers", "Case Study"]},
{"title": ["Bringing Python to Godot game engine"], "author": ["Leblond Emmanuel"], "description": ["Godot", " is an advanced, feature-packed, multi-platform 2D and 3D open source game engine.\nThe project has joined the Software Freedom Conservancy project and it growing community makes it hopes to become a real alternative to Unity&GameMaker.", "This talk cover a year long journey of the port of Python as a scripting language for the engine, starting from a rant against Godot\u2019s Python-like proprietary language.", "We will have a look at Godot\u2019s internal architecture as  is it itself a real interpreter with it garbage collector, dynamic typing, introspection and even builtin custom scripting language. All of this having to work next to our Python interpreter and communicate back and forth with it.", "Finally we will see the different approaches that have been tried to bind Python to Godot each with there own pros&cons:", "Using Micropython interpreter instead of CPython", "Using PyBind11 to statically bind to Godot C++ API", "Using CFFI and rely on a 3rd party C API", "The audience should have some basic knowledge of C level computing (static vs dynamic language, compilation & linking)."], "date": ["Monday 10 July"], "tags": ["Open-Source", "Game-Development"]},
{"title": ["Best Practices for Code Reviews"], "author": ["Burak Goynuk"], "description": ["Code review is a critical examination which software engineers collaborate with other engineers, feel the team, improve their abilities, share their knowledge, and find defects early. This talk aims to show importance of the code review, give best practices about it by explaining good behaviours from both reviewer\u2019s and reviewee\u2019s perspective, with supporting real life examples, and stories.", "Like for other methodologies in engineering, to have good communication skills is the most critical requirement for review. You can start by being polite and humble. ", "Good reviewee should review his code before committing, be grateful, and positive about comments. Also, not to understand comments in personal is very important.", "Reviewer should understand problems, and requirements before starting review. He/she must check for whether all requirements are satisfied, or broken things, affected areas. Looking for future, considering all test cases, and maintenance issues are also in the plate of reviewers.", "At the end of this talk, you will be aware of communication skills helping you to be a good team mate, have a good understanding of code review, software development cycle.  Then, you will be able to make your team happy both as being reviewer and reviewee. ", "You will learn lots of best practices like above, which help you to be not only a good reviewer, but also be a good software engineer the one everyone wants to work with."], "date": ["Friday 14 July"], "tags": ["Beginners", "Best Practice", "Clean Code", "Code Analysis", "failures/mistakes"]},
{"title": ["Bitcoin and Blockchain for Pythoneers"], "author": ["Benno Luthiger"], "description": ["Why should a Python programmer be interested in Bitcoin and the Blockchain technology?", "Blockchain technology is one of the fastest moving part in the Fintech area. However, the Blockchain is not only the basis of crypto currencies. First of all it\u2019s a decentralized registry that cannot be modified. This means that using a Blockchain, users can trust in the validity of a dataset without the need to establish a central authority. Thus, the Blockchain can be used to store records e.g. of land ownership or and other property rights in countries with weak or corrupt or otherwise incompetent authorities.", "Therefore, Python programmers with an understanding of this technology are especially well prepared to contribute in this area, because the agility inherent to Python makes it easy to program in a fast moving environment. The fact that various applications in the Bitcoin and Blockchain area are implemented in Python prove this notion. However, the reverse is also true: An understanding of the distributed ledger technology possibly enables you to solve problems in projects you encounter in the near future.", "In this talk, I will present the following topics:\n\u2022   The Blockchain architecture: nodes, transactions, headers.\n\u2022   The Bitcoin protocol and its proof of work (POW)\n\u2022   Smart contracts\n\u2022   Bitcoin alternatives: Proof-of-work (PoW) compared to Proof-of-stake (PoS)"], "date": ["Monday 10 July"], "tags": ["Business Track", "Open-Source", "Business", "Databases"]},
{"title": ["Building a full-stack web application with Python, NPM, Webpack and React"], "author": ["Angela Branaes"], "description": ["Creating full-stack applications with Python, NodeJS and React can seem daunting at first. Having made many variations of these, I will show you the ropes, so you too can discover that it is in fact easy to get going.", "In this talk you will learn to create a full-stack web application in Python, with a Nodejs and React front-end. I will provide you with an easy-to- follow walkthrough of the process, and you\u2019ll exit this talk feeling confident that you can now create your own full-stack web application."], "date": ["Monday 10 July"], "tags": ["JavaScript Web Frameworks (AngularJS/ReactJS/...)", "Web Track", "Python 3", "Developing with Python"]},
{"title": ["Automating Instagram with Python and Selenium"], "author": ["Tim Gro\u00dfmann"], "description": ["In this talk about using Selenium and Python for social media automation you will get some insights into growing your own open source projects into tools that really get used and maintained by a community. You will get an idea of what pitfalls you have to face when working with something as fast changing as Instagram and how to best tackle this. \nYou\u2019ll  learn what the \u201cPage Object\u201d design pattern is, what it is useful for and why we use it.\nOf course we will also talk about OpenSource and why it\u2019s important.\nA lot of the talk will be based on my article on InstaPy published at the freeCodeCamp publication on Medium: https://medium.freecodecamp.com/my-open-source-instagram-bot-got-me-2-500-real-followers-for-5-in-server-costs-e40491358340", "So, who is this talk suited for?\nIf you\u2019re just starting out with python, are interested in automation or simply like to see a fun and interesting little open source project, I\u2019d love to see you at my talk and hear your ideas and opinions about it."], "date": ["Wednesday 12 July"], "tags": ["Beginners", "Educational Track", "Open-Source", "Jupyter/iPython", "Learning"]},
{"title": ["Big Data Analytics at the MPCDF: GPU Crystallography with Python "], "author": ["Giuseppe Di Bernardo"], "description": ["In close collaboration with scientists from MPG, the Max Planck Computing and Data Facility is\u00a0engaged in the development and optimization of algorithms and applications for high performance\u00a0computing, as well as in the design and\u00a0implementation of solutions for data-intensive projects.\u00a0Python is now used at MPCDF in the emerging area of \u201catom probe crystallography\u201d (APT): a Fourier spectral analysis in 3D reciprocal space can be simulated in order to reveal both composition and crystallographic structure at the atomic scale of billions APT experimental data sets. The Python data ecosystem has proved to be well suited to this, as it has grown beyond the confines of single machines to embrace scalability. This talk aims to describe our approach to scaling across multiple GPUs, and the role of our visualization methods too. Our data workflow analysis relies on the GPU-accelerated Python software package called PyNX, an open source Python library which provides fast parallel computation scattering. The code is well suited for GPU computing, using both the pyCUDA and pyOpenCL libraries. Exploratory data analysis and performance tests are initially carried on through Jupyter notebooks and Python packages e.g., pandas, matplotlib, plotly. In production stage, interactive visualization is realized by using standard scientific tool, e.g. Paraview, an open-source 3D visualization program which e.g. requires Python modules to generate visualization components within VTK files."], "date": ["Wednesday 12 July"], "tags": ["Analytics", "Scientific Libraries (Numpy/Pandas/SciKit/...)", "Big Data", "Science", "Visualization"]},
{"title": ["Best Practices for Debugging, Testing and Maintenance"], "author": ["Kristian Rother"], "description": ["Experienced programmers know that good programming involves a lot more than\nwriting code. Python offers an established set of techniques from several areas:\nDebugging is not an extraordinary activity, but certain tools and\nprocedures are available. E.g. automated tests ensure that bugs don\u2019t\ncome back. Finally, maintenance practices keep programs healthy for a long period of time. As a program grows, these best practices become more and more important.", "The inexperienced programmer is often unaware of the tools available to\nmake Python programs more stable. This talk provides an overview of\naccepted best practices for debugging, testing, and maintenance, and\nprovides hints what kind of project they are applicable to.", "The talk draws a map of tools and practices, including:"], "date": ["Tuesday 11 July"], "tags": ["Best Practice", "Debugging", "Testing", "Test Libraries (pyTest/node/...)"]},
{"title": ["Baby steps in short-text classification with python"], "author": ["Alisa Dammer"], "description": ["This talk aims to provide an information about where and how one could start using ", "simple text-classification", " models. Additionally it will be shown how a python classificator  can be incorporated into existing system.\nThe presentation will be broken into 3 topics and a conclusion.\nFirst, the presentation provides an overview of how the problem was approached, what information was useful or not and how the technologies stack shown in the second part was decided on.\nSecond part will concentrate on using  ", "Naive Bayesian", " model for text classification. How the model was trained, what difficulties were met and how they were solved. Additionally the talk will give a brief overview of other possible model choices (random forest, SVM).\nThe third part will show how the model was deployed and used in the production. One architecture solution will be shown in details (", "REST", " calls between Java Client and Flask Server), while other possibilities will be mentioned briefly. \nAs the conclusion the possible improvements for the model in use will be suggested as well as short example of supervised learning algorithm (", "CNN", ") and unsupervised classification algorithm (", "LDA", ") for the same purpose. Along with the examples the proc and cons will be named.", "Technologies mentioned and used: ", "Flask, Green Unicorn vs uWSGI, NLTK, Sci-Kit, Python 3, Java 8, Jersey, Docker, Kubernetes"], "date": ["Wednesday 12 July"], "tags": ["python", "Data Science", "Education", "Programming", "Machine-Learning"]},
{"title": ["Automatic Conference Scheduling with PuLP"], "author": ["Marc-Andre Lemburg"], "description": ["Linear programming is often regarded as very theoretical or even not known at all as a well-developed method of solving real world problems.", "The talk gives a short introduction to LP problems and presents an interesting use case for the Python linear programming problem solver PuLP: that of creating a conference schedule."], "date": ["Wednesday 12 July"], "tags": ["Developing with Python", "Scientific Libraries (Numpy/Pandas/SciKit/...)", "Algorithms", "Analytics", "Use Case"]},
{"title": ["Asynchronous I/O and the real-time web"], "author": ["Amit Nabarro"], "description": ["Building web applications is one of the most common uses of Python. With a plethora of different web frameworks aiming at varying audiences, it has become a rather simple and well-documented process to develop web applications and web services. So popular it has become that the WSGI specification is the industry standard protocol for developing web applications with Python. ", "\nBut the WSGI standard is lacking with two major limitations:", "Over the past decade multiple networking libraries have been developed to address these limitations. \nIn this talk we will explore:"], "date": ["Tuesday 11 July"], "tags": ["Performance", "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)", "ASYNC / Concurreny", "Web General"]},
{"title": ["Async Web Apps with Sanic"], "author": ["Dougal Matthews"], "description": ["This talk will introduce you to Sanic, the Python 3 web framework that supports async request handlers with a simple, Flask-like, API.", "We will start with a Sanic overview and compare it with other similar options before looking at the API and working through a basic app. Our goal here will be to get a feel for the Sanic API and demonstrate how it fits together. After this we will cover some of the more unique and interesting possibilities with Sanic, such as support for websockets and HTTP2.", "A web framework is often only as powerful as its ecosystem, so we will take a look at some of the popular Sanic extensions for databases, templating and testing."], "date": ["Monday 10 July"], "tags": ["Web", "Web Track", "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)", "Web General", "ASYNC / Concurreny"]},
{"title": ["SaltStack help desk"], "author": ["Juan Manuel Santos"], "description": ["If you have any questions about SaltStack, are interested in deploying it or just wish to know more about it, this is your stop! We can answer your questions about:"], "date": ["Friday 14 July", "Friday 14 July"], "tags": ["Saltstack"]},
{"title": ["An introduction to PyTorch & Autograd"], "author": ["Paul O'Grady"], "description": ["PyTorch is an optimized tensor library for Deep Learning, and is a recent newcomer to the growing list of GPU programming frameworks available in Python. Like other frameworks it offers efficient tensor representations and is agnostic to the underlying hardware. However, unlike other frameworks it allows you to create \u201cdefine-by-run\u201d neural networks resulting in dynamic computation graphs, where every single iteration can be different\u2014opening up a whole new world of possibilities. Central to all neural networks in PyTorch is the Autograd package, which performs Algorithmic Differentiation on the defined model and generates the required gradients at each iteration. In this talk I will present a gentle introduction to the PyTorch library and overview its main features using some simple examples, paying particular attention to the mechanics of the Autograd package.", "Keywords: GPU Processing, Algorithmic Differentiation, Deep Learning, Linear algebra."], "date": ["Thursday 13 July"], "tags": ["Deep Learning", "Science Track", "Data Science", "Machine-Learning"]},
{"title": ["AI on a Pi"], "author": ["Julien Simon"], "description": ["In recent months, Artificial Intelligence has become the hottest topic in the IT industry. In this session, we\u2019ll first explain how Deep Learning \u2014 a subset of AI \u2014 differs from traditional Machine Learning and how it can help you solve complex problems such as computer vision or natural language processing. Then, we\u2019ll show you how to start writing Deep Learning applications in Python thanks to MXNet, a popular library for Deep Learning for both CPUs and GPUs. We\u2019ll also see how to use pre-trained models and we\u2019ll load one on a Raspberry Pi equipped with a camera. Finally, we\u2019ll show random objects to the Pi\u2026and listen to what it thinks the objects are, thanks to the text-to-speech capabilities of Amazon Polly."], "date": ["Thursday 13 July"], "tags": ["Scientific Libraries (Numpy/Pandas/SciKit/...)", "Raspberry PI", "Open-Source", "Deep Learning"]},
{"title": ["Software Carpentry Help Desk - Start using Python and Git"], "author": ["Raniere Silva"], "description": ["Software Carpentry is a voluntee based project that, since 1998, has been teaching researchers in science, engineering, medicine, and related disciplines the computing skills they need to get more done in less time and with less pain. With more that 100 workshops worldwide, Software Carpentry is training a significant part of the next generation of researchers and data scientists.", "Normally, Software Carpentry workshop is a 2-day event that covers Bash, Git and Python. Instructors will teach how to navigate among files and directories using the command line, how to manipulate files using the command line, how to use Git to version controls your project, how to restore a old version of a file if you are using Git, how to create Python variables, how to create Python functions, how to create plots with matplotlib, \u2026 The material used in the workshops is available online under a open source license.", "The feedback received from workshop hosts, workshop attendees and readers of the online lessons has been very positive. Learners at the workshop enjoy the hands on approach that Software Carpentry uses during the workshop.", "The goal of this help desk is to assist any beginner to solve their problem and be more confident when using Bash, Git and Python. EuroPython attendees are invited to read the online Software Carpentry lessons and visit the help desk to solve any questions they have."], "date": ["Friday 14 July", "Friday 14 July"], "tags": ["Beginners", "Educational Track", "Science Track", "Education", "Jupyter/iPython"]},
{"title": ["The pytest/tox/devpi helpdesk"], "author": ["Oliver Bestwalter"], "description": ["We will answer your questions about ", "pytest", ", ", "tox", " and ", "devpi", ". These  tools and their plugins  can help you  you with testing and releasing your packages either individually or when used together. ", "Any questions regarding getting started or  concrete problems are welcome. We might not be able to solve all of them, but we will try our best to get you started and point you in the right direction. ", "Potential topics and questions are:", "I would like to test functionality X, but don\u2019t know how to go about this, can you help me?", "pytest/tox/devpi does not work as I expect. Is this a bug or am I doing it wrong?", "My tox.ini is pretty verbose - can I simplify it somehow?", "I use Unittest for my tests, how can pytest make things better for me?", "My test suite is turning into an unmaintainable mess, can you give me some tips on how to avoid that?", "I have a weird bug that I can only reproduce on my laptop, can you have a look?", "I can\u2019t test things properly locally because our continuous integration system is doing a lot of extra work, is there a way to do this differently?"], "date": ["Tuesday 11 July", "Tuesday 11 July"], "tags": ["Best Practice", "Developing with Python", "Testing", "Open-Source", "Learning"]},
{"title": ["So you want to use Jupyter....."], "author": ["Christian Barra"], "description": ["So you want to use Jupyter but you don\u2019t know where to start\u2026.or you started but now you feel lost.", "Well, we are here to help!\nbeginners are especially welcome and we will do our best to answer all your questions!", "Example of questions we\u2019ll try to answer:", "Remember to bring your computer!"], "date": ["Wednesday 12 July", "Wednesday 12 July"], "tags": ["Beginners", "Notebook", "Jupyter/iPython"]},
{"title": ["PyPy help desk"], "author": ["Antonio Cuni"], "description": ["So, you want to make the most out of PyPy but you don\u2019t know where to start? This is the right place! :)\nExamples of questions:", "how to use and install PyPy, either system wide or by using virtualenv", "how to optimize your programs for the PyPy JIT", "how to use vmprof to profile your programs and look at the code generated by the JIT", "how to install 3rd party packages and compatibility issues", "how to use CFFI to interface with C code effectively"], "date": ["Thursday 13 July", "Thursday 13 July"], "tags": ["PyPy"]},
{"title": ["Abstract Base Classes: a smart use of metaclasses"], "author": ["Leonardo Giordani"], "description": ["This talk shows what Python Abstract Base Classes (ABCs) are and how they can be used to categorise objects and implement a virtual inheritance tree. The goal of the talk is to introduce programmers to the concept of ABCs, and to show that metaclasses are not a terribly complex topic, but something that can be used by normal programmers. The talk is divided in three different \u201clevels of difficulty\u201d, each of one going deeper in the technical aspects of the subject.", "Level 1: Polymorphism - Behaviours and delegation - Collections", "\nThe first level is meant to give a quick overview of the ", "collections", " package and some useful code snippets. Even beginners can benefit of the information given here. To complete this level you only need to know what a ", "try/except", " block is.", "Level 2: Registering - Abstract Base Classes - Categories", "\nThe second level shows what real and virtual inheritance are, explains what is the meaning of registering and defines Abstract Base Classes. To complete this level you need to know what class inheritance is (i.e. what ", "class MyList(list)", " means).", "Level 3: Build your ABCs - Metaclasses - ABSs as interfaces", "\nThe third level shows how to create your own ABCs, why metaclasses are involved and why they are not a difficult concept. I will then quickly review a possible use of metaclasses as interfaces. To complete this level you need to know how to instantiate a class, and the difference between class and instance."], "date": ["Tuesday 11 July"], "tags": ["python", "Developing with Python", "Meta Classes", "The Answer to Life the Universe and Everything Else", "Mix-Ins"]},
{"title": ["OpenStack Help Desk"], "author": ["Dougal Matthews"], "description": ["Come and chat with us about OpenStack! We can answer questions about OpenStack, help you with specific problems or help you get started with contributing to an OpenStack project.\nYour helpers will be OpenStack developers with years of experience using and developing on a number of projects."], "date": ["Wednesday 12 July", "Wednesday 12 July"], "tags": ["Best Practice", "Open Stack"]},
{"title": ["MicroPython help desk"], "author": ["Radomir Dopieralski"], "description": ["You\u2019ve heard about MicroPython, but are unsure about how to start with\nit? Or maybe you are already building your own project, but got stuck\nwith a problem? Come talk to me, and maybe we will be able to find a\nsolution. Some example questions:"], "date": ["Tuesday 11 July", "Tuesday 11 July"], "tags": ["Gadgets", "MicroPython", "Internet of Things (IoT)", "Wearables", "Hardware/IoT Track"]},
{"title": ["Flask and Web Development Help Desk"], "author": ["Miguel Grinberg"], "description": ["I am the author of the Flask Mega-Tutorial, the most popular Flask tutorial after the one in the Flask official documentation. I also wrote the O\u2019Reilly Flask Web Development book, and a number of Flask extensions. I would be happy to answer questions about Flask, help you debug your Flask project, give you advice on any topic related to web development with or without Flask, REST APIs, microservices, WebSocket, Async, etc."], "date": ["Thursday 13 July", "Thursday 13 July"], "tags": ["APIs", "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)"]},
{"title": ["AsyncIO support for beginners"], "author": ["Ludovic Gasc"], "description": ["Example of questions we\u2019ll try to answer, it\u2019s a compilation of questions we\u2019ll already received:"], "date": ["Monday 10 July", "Monday 10 July"], "tags": ["Beginners", "Architecture", "HTTP", "ASYNC / Concurreny", "Python 3"]},
{"title": ["TCP / IP Animated "], "author": ["Danilo Abbasciano"], "description": ["This interactive game teaches is the follow-up of  ", "the Router Game by Roberto Polli", ", and teaches various TCP / IP protocols using ", "paper and pen", ".", "Participants are divided in teams, simulating exchanges through various protocols (DNS, TCP, IP)", "Every player has an L3 role: a PC or mobile phone, a Router, a Load Balancer \u2026 and must communicate with the others following the associate specification (eg. a TCP client may buffer frames, a Load Balancer re-encapsulates IP datagram, \u2026 )", "The team which is faster in exhanging messages wins."], "date": ["Monday 10 July"], "tags": ["Internet of Things"]},
{"title": ["MicroPython Workshop"], "author": ["Radomir Dopieralski"], "description": ["We will program some ESP8266-based development boards, make them blink LEDs, move servos, display pictures, read sensors, react to buttons, and, more importantly, talk over HTTP and MQTT with servers. This is an excellent occasion to try your skills in building and programming small electronic devices. No experience with electronics is required, everything you need to know will be covered during the workshop.\nYou will need to bring a laptop with a USB port. If it runs Windows, make sure to have some terminal emulator installed, such as PuTTy, CoolTerm or  even HyperTerm. On Linux and OSX we will use Screen, so you don\u2019t need anything special.\nI only have about 20 kits for this, so the number of people that can take part is limited."], "date": ["Monday 10 July"], "tags": ["Gadgets", "MicroPython", "Internet of Things (IoT)", "Wearables", "Hardware/IoT Track"]},
{"title": ["Twitter Bot Basics with Python"], "author": ["Kerstin Kollmann"], "description": ["Many of us use Twitter on a daily basis, but mostly as users or consumers who communicate via our personal (or organisation) accounts in quasi \u201cofficial capacity\u201d, using our own voice\u2026 when we\u2019re not busy keeping up with the news, friends, the industry \u2013 and the occasional Twitter bot delivering content into our timelines.", "Programming Twitter bots can actually be quite fun and is not all that complicated once you know some Twitter API basics and botiquette, and which Python libraries you can use to talk to Twitter. Coming up with a neat, unique idea for a bot might actually turn out to be the greater challenge than understanding how to make it work!", "With the help of my poster and using a bot I programmed myself as an example, I will show you how you, too, can build your first simple Twitter bot.", "I will: walk you through the process of setting up a Twitter app, tell you what you need to know about the platform\u2019s APIs (plural, yes!), let you know what to avoid if you do not want your bot to get banned, give tips on how to release your bot into the wild, and demonstrate how to use Python to actually get your bot to do stuff! Additionally, I will provide ideas for potential bots (as well as suggestions for how they can be realised with Python) and point out existing Twitter bots for inspiration."], "date": ["Tuesday 11 July"], "tags": ["Beginners", "DIY", "The Answer to Life the Universe and Everything Else", "APIs"]},
{"title": ["Python Bee"], "author": ["Emma Gordon"], "description": ["Thought up in 2009 by a group of MIT students who entered the Python bee into a competition for \u201cbad ideas\u201d, a Python bee is like a spelling bee for programmers. ", "Instead of spelling words, participants are given functions to write and must spell them out loud - one character at a time, without looking at the code that they\u2019re writing! Players must spell valid Python and every character counts, including symbols and whitespace. ", "And the twist for the second round (credit for this one goes to dropboxblogs):", "You\u2019re now allowed to look at the code, but\u2026 you must now team up with other programmers, entering alternate characters without being allowed to communicate via any other means.", "In order for everyone to be able to have a go, we\u2019ll split up into small groups to play - for those that want to be competitive, we\u2019ll use a scoring system so that we can still declare an overall champion. You\u2019re very welcome to come along just to have fun though!", "TL;DR - a fun hour of slightly ridiculous programming games :)"], "date": ["Friday 14 July"], "tags": ["python"]},
{"title": ["Solar Energy Optimization Project in Python"], "author": ["Cleber Rocco"], "description": ["This study presents a solar optimization investment project programmed in Python and solved by the CPLEX and Gurobi. A public university in Brazil would like to analyze the possibility to build a solar farm to generate electricity to its facilities. A team of two students and an assistant professor of operations research, all without any background on Python programming, chose this language to carry out the project due to its simplicity, the fact of being open-source and the possibility to use powerful optimization solvers free of charge for academics. We have used Spyder as the Python IDE in Anaconda to implement the model composed an objective function, 10 families of constraints and 6 families of variables. One model feature is the use of many tuples and conditionals and a huge amount of data that were manipulated, since the planning horizon was 25 years, with the options of 10 different solar panels and 6 inverter technologies to choose. The output displays were also programmed, which were very convenient for reading the model solutions. From this project, we were able to deliver to the university a deep analysis using optimization tools without any cost in terms of software licenses, like it could have happened if we had chosen GAMS or AMPL. The goal of the presentation is to discuss the model implemented in Python, with several codes of data manipulation. To understand the study is required a basic background on mathematical modeling in Python and optimization."], "date": ["Wednesday 12 July"], "tags": ["Educational Track", "Science Track", "Case Study", "Algorithms", "Analytics"]},
{"title": ["Ranking News Summary Bots by Semantic Document Relatedness"], "author": ["Karan Saxena"], "description": ["Semantic relatedness, or similarity between documents plays an important role in many\ntextual applications such as Information Retrieval, Document Classification, Question Answering, and more. Text understanding starts with the challenge of finding machine-understandable representation that captures the semantics of texts.", "Measurement of semantic relatedness comprises two constituents:\n - An effective representation of documents\n - A similarity measure between documents in terms of their respective representations.", "In particular, we chose three semantic models (", "Word2Vec", " and ", "Doc2Vec", ", ", "Doc2VecC", ") and one frequency-based model (", "Tf-Idf", "), for extracting and representing document features.\nWe explore and benchmark this issue of document similarity by experimenting with various existing language models, examining their performance in the task of computing document similarity by ranking different News Summary Bots.\nWe rank eight bots in all - \n-Luhn\n-Edmundson\n-Latent Semantic Analysis, LSA\n-LexRank\n-TextRank\n-SumBasic\n-KL-Sum", "We use ", "CommonCrawl", " news dataset documents as our input to the Summary Bots, and the all the eight different summaries are rated according to their semantic relatedness to the input document.\nFor semantic models, relatedness is calculated by converting each input document and all the summaries into vector embedding format and then taking the cosine similarity of each summary with the parent document."], "date": ["Thursday 13 July"], "tags": ["Beginners", "Data Science", "Machine-Learning", "Big Data", "Natural Language Processing"]},
{"title": ["MicroPython \u2013 Python for Microcontrollers"], "author": ["Christine Spindler"], "description": ["MicroPython is a lean and efficient implementation of the Python 3 programming language that includes a small subset of the Python standard library and is optimised to run on microcontrollers and in constrained environments.\nMicroPython is a full Python compiler and runtime that runs on the bare-metal. You get an interactive prompt (the REPL) to execute commands immediately, along with the ability to run and import scripts from the built-in filesystem.\nThe REPL has history, tab completion, auto-indent and paste mode for a great user experience.\nMicroPython is packed full of advanced features such as an interactive prompt, arbitrary precision integers, closures, list comprehension, generators, exception handling and more. Yet it is compact enough to fit and run within just 256k of code space and 16k of RAM.\nMicroPython aims to be as compatible with normal Python as possible to allow you to transfer code with ease from the desktop to a microcontroller or embedded system. If you know Python you already know MicroPython. On the other hand, the more you learn about MicroPython the better you become at Python.", "Besides the introduction of MicroPython I\u2019ll present a poster with all important information regarding MicroPython. I will present demos with the official MicroPython pyboards."], "date": ["Monday 10 July"], "tags": ["Internet of Things (IoT)", "MicroPython", "Open-Source"]},
{"title": ["modal-auth, a stand-alone JWT based authenticator with social magic for SPAs"], "author": ["Marco Montanari"], "description": ["Authentication is always a mess. Django offers nice tools, but they don\u2019t speak REST. Using a set of standard libraries and a few simple endpoints, comes modal-auth, a stand-alone authentication framework for integration with pure js front-ends that relies on JWT and a simple API to enable easy integration with other parties. \nThe system relies on Django Rest Framework, Djoser and Django-Rest-Framework-JWT to deliver the various parts as REST APIs. The system enables in addition the integration with Social Authentication both via static web redirects as well as token-based app authentication.\nThe tool is delivered as a Django project as well as a Docker Image. "], "date": ["Wednesday 12 July"], "tags": ["Mobile", "JavaScript Web Frameworks (AngularJS/ReactJS/...)", "Authentication", "Django"]},
{"title": ["Python at CERN"], "author": ["Sebastian Witowski"], "description": ["The Large Hadron Collider at CERN is producing 600 million collisions every second. Only 1 in a million collisions is interesting. It requires a fast programming language to analyze and filter this amount of data.\nIs Python such a language? No. Does it mean there is no place for Python at CERN? Quite the contrary. The ease of use makes Python a very popular programming language among scientists.\nThe interesting bits of data from the LHC have to be analyzed, shared and published. And with CERN\u2019s pursuit to create and use open source software, many interesting Python projects were born. \nFor big data processing, analysis and visualization, the ROOT framework [https://root.cern.ch] has been used for over 20 years. Nowadays, more scientists know Python, so the PyROOT [https://root.cern.ch/pyroot] was created \u2013 a Python extension module that combines Python\u2019s ease of use with the powerful capabilities of ROOT.\nTo manage all the scientific documents published at CERN, a digital library framework  Invenio [http://invenio-software.org] was created. It can be used to easily build a fully customized digital library, institutional repository or a multimedia archive and it powers websites like: https://zenodo.org, https://cds.cern.ch or https://analysispreservation.cern.ch.\nSharing knowledge \u2013 one of CERN\u2019s core values \u2013 can be achieved through various lectures, workshops and conferences. All these events can easily be organized with the help of Indico [http://indico-software.org]."], "date": ["Tuesday 11 July"], "tags": ["Physics", "Science", "Python general", "Open-Source", "General"]},
{"title": ["Django based Docker Manager for development teams"], "author": ["Marco Montanari"], "description": ["At Modal Nodes we are developing a tool that enables us to focus on coding and planning and not on devops, having most of Operations transformed into an application. We want to share this tool that can be deployed on your own infrastructure or as a paid SaaS environment with the possibility to connect the swarm installations you are working on and set up a set of shared infrastructures and tools to work with and automate deployment of projects on the swarm infrastructure. \nWe are doing this through an integration with Github and Dockerhub webhooks and triggers as well as a set of automation tools we are developing that enable the development team to focus on coding, be it in python/django, be it in nodejs, be it in php. The platform enables a team or a single developer to define programming templates for the single services set up and from there to build whole stacks of containers in a standardized fashion, without the hassle of complex configuration files (that can easily be re-generated anyway)."], "date": ["Wednesday 12 July"], "tags": ["Web Track", "Git", "Django Track", "Docker", "DevOps general"]},
{"title": ["PyDMFT: A library and a reproducible science case study"], "author": ["Oscar Najera"], "description": ["PyDMFT is a scientific library written in Python with Cython extensions and use of Numba for speed. It has been developed as a simple toolset for research on interacting electronic systems. It keeps data abstractions to the minimum thus making it easily compatible with NumPy arrays, easy to serialize and store data. Beyond the scope of the library, PyDMFT offers a large collection of python scripts that by using the library are capable of reproducing results presented on peer reviewed journal articles. This collections of research recipes are executed, organized, and displayed in a web gallery using the package Sphinx-Gallery. This large archive allows to find the specific implementation of a research work, makes it easy to recall how to execute a script as all the runtime data and setup need to be available for the gallery to be generated. As the library evolves, new builds of the gallery make it clear if examples break due to change in the library."], "date": ["Tuesday 11 July"], "tags": ["Science Track", "Physics", "Open-Source", "Use Case"]},
{"title": ["Efficient Global Optimization based on Generalized Simulating Annealing: PyGenSA"], "author": ["Sylvain Gubian"], "description": ["Many problems in statistics, finance, biology, pharmacology, physics, mathematics,\neconomics, and chemistry involve the determination of the global minimum of\nmultidimensional functions. Python modules from SciPy and PyPI for the\nimplementation of different stochastic methods (i.e.: pyEvolve, SciPy optimize) have\nbeen developed and successfully used in the Python scientific community. Based on\nTsallis statistics, the PyGenSA python module has been developed for generalized\nsimulated annealing to process complicated non-linear objective functions with a\nlarge number of local minima. Testing PyGenSA, basinhopping (SciPy) and differential\nevolution (SciPy) on many standard test functions used in optimization problems\nshows that PyGenSA is more reliable in general and more efficient in particular for\nhigh dimension problems."], "date": ["Tuesday 11 July"], "tags": ["Track", "Science"]},
{"title": ["TDD in Python with pytest and mock"], "author": ["Leonardo Giordani"], "description": ["In this tutorial I will start a simple Python project from scratch and will develop it together with the attendees following a strict TDD methodology. The testing framework in use will be ", "pytest", ", and during the training concepts like ", "coverage", ", ", "flake8", " and mocks (with the official ", "unittest.mock", " library) will be introduced.", "The tutorial is divided in 3 sections:", "During the tutorial we will use Python 3, but the concepts introduced are valid for Python 2 as well.", "To setup your laptop follow these steps:", "There will be no time to install Python or to set up the repository during the tutorial, so please take your time to configure your laptop. If you need help feel free to ping me during the conference."], "date": ["Thursday 13 July"], "tags": ["Test Driven Development (TDD)", "Python 3"]},
{"title": ["Building  a distributed system with Python for storing energy in electric cars"], "author": ["Oz Tiram"], "description": ["At The Mobility House we want to utilize the batteries found in electric cars to store energy from renewable sources and utilize this energy when production can not supply the demand. \nTo do that we are building software which naturally distributed. Each car and a charger are connected at different times and location to a central cloud based software which divides requests for energy consumption,\nthat is charging the car, or energy supply, that is  discharging the car.\nWe chose Python for rapidly building the various components of the system running on a variety of systems, from industry grade small servers, through large and powerful rack servers through cloud hosted servers. Python\u2019s rich eco-system of tools and libraries are a true booster for our system, and we would like to talk about our chosen architecture and celebrate  the tools we use from saltstack, pika, kombu, bottle and thespian."], "date": ["Wednesday 12 July"], "tags": ["Engineering", "Internet of Things", "General", "Business", "Linux"]},
{"title": ["Optimizing  Python code with Cython"], "author": ["Andrew Svetlov"], "description": ["Many people heard about speeding up CPython code by writing C\nExtensions but almost nobody did it.", "Writing bare C code is very hard and error prone, that\u2019s why much\neasier and safer Cython was born.", "This Python-like language allows to write C Extensions without\nmanaging reference counting and exception handling manually, Cython\ncode is comparable with Python from clearness and readablity\nperspective but might be tens times faster.", "But cythonizing the whole programm is redundant, mindless optimization\ndoesn\u2019t give any significant speedup but increases build toolchain\ncomplexity.", "In the training we\u2019ll learn the procedure step by step from very\nbeginning down to real world use cases.", "The talk is covering the following topics:\n* Problem detection aka bottleneck finding\n* Testing\n* Writing Cython optimizations for several common scenarios\n* Approaches for compiling and running\n* Tooling (profiling, debugging, coverage reporting)", "We\u2019ll consider optimization of the following very typical domains (from easier to harder): \n* Simple Mathematics \n* Standard Python data structures \n* Custom data structures", "Every example is started from non-optimized Python code and goes\nthrough several transformations to high speed Cython\u2019ed extension.", "The session pursuites teaching people to optimizing existing Python\nCode, bridging to exisiting C libraries is another very interesting\ntopic which is out of scope, sorry."], "date": ["Wednesday 12 July"], "tags": ["Cython", "Performance"]},
{"title": ["Native Python iOS apps"], "author": ["Dima Tisnek"], "description": ["Feeling outflanked by ES6?\nGet back at them by writing mobile apps in Python.", "Thanks to Pybee/Russel KM, you can, and I\u2019ll show you now.", "The objective is to [learn to] write an app in Python using native iOS UI. Training will cover the Python / Objective-C bridge, how to create and use objc objects from Python, how to implement objc protocol as Python classes, as well as working around limitations of having 2 independent garbage collectors (objc and py runtimes).", "After this training you\u2019ll have a simple working iOS app, ready to start beta-testing!", "Those who want to look at the code in advance will find it here: https://github.com/dimaqq/playing-with-python-on-ios"], "date": ["Tuesday 11 July"], "tags": ["Developing with Python", "Python 3", "Mac OS X"]},
{"title": ["Data Unit Testing with Python"], "author": ["Katharine Jarmul"], "description": ["Data validation is commonly used by data science teams to ensure their data \u201csmells right.\u201d Often, however, these teams might be evaluating the criteria by hand (or eyes) or evaluating only at end-of-term reports (i.e. monthly, quarterly or yearly numbers). In addition, these numbers may only be reviewed in aggregate, and the functions or pipelines used to create these reports might never be tested. Issues in schema changes, erroneous or duplicate data is left to fix perhaps after algorithms or other decision making approaches were already used on the datasets, leading to negative business impact.", "In this workshop, we will evaluate why unit testing approaches are important even with a data science or data engineering team. We\u2019ll introduce libraries that can help incorporate data validation, schema constraints and unit tests into your data workflows. Finally, we\u2019ll look at a real-world use case and implement some data unit tests and alerting for failure.", "Attendees should have a working understanding of common data science libraries (like Pandas and NumPy) and have the repository installed before they attend. The repository with the requirements: ", "https://github.com/kjam/data-cleaning-101", ". We will be focusing on the validation notebooks, so you will only need some of the libraries, but if you would like to install them all, you may go through the other notebooks as well!"], "date": ["Friday 14 July"], "tags": ["Scientific Libraries (Numpy/Pandas/SciKit/...)", "Data Science", "Data", "Jupyter/iPython", "Use Case"]},
{"title": ["Debugging for the Masses...Visually"], "author": ["Paul Everitt"], "description": ["Developers who have learned Python, and know they need to learn \u201cthat debugger thing\u201d, but have either bounced off each attempt or gotten stuck at the basics.", "Attendees will understand why debugging is badass and helpful, what are the major concepts, how they apply during regular development, and how a visual debugger puts a friendly face on all of this. Walking out, debugging will seem not-scary-at-all.", "This tutorial uses the free and open source PyCharm Community Edition, but the visual concepts apply to other IDEs as well.", "Intro", "Orientation\n- Hello World in arcade, command line\n- Hello World in arcade, in PyCharm Run\n- Hello World in arcade, in PyCharm Debug (without optimization)\n- Hello World in arcade, in PyCharm Debug (with optimization)\n- Hello World in arcade, with an error, jump to line", "First Steps\n- Debugging without a debugger: Struggle through a print-oriented debug cycle\n    - Debug with pdb\n    - Set breakpoint\n    - View variable information (Enhanced Variable Explorer, hides stuff)\n    - Ditto, without restarting\n- Various knobs in the debug window, e.g. restart\n    - Inline debugging", "Productive Debugging\n- Setting/unsetting the \u201cstop on exception\u201d support\n- Using the console/IPython/Evaluate Expression at a breakpoint\n- Conditional breakpoint\n- All flavors of stepping\n- Inline debugging\n- Hands-on", "In Depth\n- Stack frames\n- Watches\n- Manage all breakpoints"], "date": ["Tuesday 11 July"], "tags": ["Best Practice", "Development", "Game-Development"]},
{"title": ["Machine Learning as a Service"], "author": ["Amit Kapoor"], "description": ["\u201cJack of all trades, master of none, though oft times better than master of one\u201d", "One of the common pain points that we have come across in organizations is the last-mile delivery of data science applications. There are two common delivery vehicles of data products \u2013 dashboards and APIs.", "More often than not, machine learning practitioners find it hard to deploy their work in production and full stack developers find it hard to incorporate machine learning models in their pipeline. To be able to successfully do a data science-driven product/application, it requires one to have a basic understanding of machine learning, server-side programming and front-end application.", "In this workshop, one would learn how to build a seamless end-to-end data driven application \u2013 Starting from data ingestion, data exploration, creating a simple machine learning model, exposing the output as a RESTful API and deploying the dashboard as a web application \u2013 to solve a business problem.", "Data Engineering", " ", "\n1. Data Ingestion and Exploration", "Machine Learning", " ", "\n2. A simple machine learning model", "Dashboard", " ", "\n3.  Dashboard using bokeh     ", "API and Deployment", " ", "\n4. RESTful API ", "\n5. Integrating Model output to DB ", "\n6.  Deployment   ", "The repository for the workshop  is ", "here", "Key takeaways", " ", "Learn how to build and deploy a machine learning application end-to-end"], "date": ["Thursday 13 July"], "tags": ["Public Cloud (AWS/Google/...)", "Microservices", "Machine-Learning"]},
{"title": ["Launch your application into the cloud"], "author": ["Daniele Procida"], "description": ["Important: Please follow the ", "installation steps", " well before the workshop!", "This workshop (led by an experienced trainer, and supported by high-quality documentation and materials) will take you step-by-step through a meaningful, practical project, using ", "Docker", " locally on your own computer and in the cloud.", "All the skills and involved are transferable. You\u2019ll become familiar with key Docker commands, tools and concepts.", "You\u2019ll learn how Docker\u2019s pieces connect together, by using it on the desktop for development, and working with configuration and tools that lead to a real-world deployment of your efforts.", "You can\u2019t become a Docker expert in just a few hours, but you can become a confident and competent user.", "In the workshop, you will package a Python/Django application as a Divio Cloud addon.", "The Divio Cloud provides a platform and showcase for Python/Django developers to make their applications available to a wider audience - including users who\u2019ll never clone a GitHub repository or pip install a package.", "Whether you\u2019re primarily interested in ", "learning to use Docker with confidence", " or in ", "packaging Python/Django applications for a wider and non-technical audience", ", this workshop will give you valuable practical technical skills."], "date": ["Wednesday 12 July"], "tags": ["Packaging", "Deployment/Continuous Integration and Delivery", "Docker", "Django"]},
{"title": ["Crypto-Conditions & BigchainDB: Intergalactic Sparks from the Blockchain Verse"], "author": ["Sylvain Bellemare"], "description": ["This workshop wishes to present the ", "Python implementation of Crypto-Conditions", ", along with some examples of how it is being used in ", "BigchainDB", ". This is a great opportunity to learn about some basic cryptographic primitives and algorithms, about ", "ASN.1", " (serialization protocol widely used in cryptography), and to learn concepts that are fundamental in the blockchain space.", "Crypto-Conditions is a scheme for composing signature-like structures from one or more existing signature schemes (e.g.: RSA, ED25519) or hash digest primitives (e.g.: SHA256). It defines a mechanism for these existing primitives to be combined and grouped to create complex signature arrangements but still maintain the useful properties of a simple signature, most notably, that a deterministic algorithm exists to verify the signature against a message given a public key.", "BigchainDB aims to be a decentralized database with blockchain properties. BigchainDB uses Crypto-Conditions to secure digital assets.", "The Python implementation of Crypto-Conditions depends on some interesting libraries: pyasn1, pynacl & cryptography, and hypothesis (property-based testing).", "Suggested preparation but not mandatory: ", "contributing to cryptoconditions", "."], "date": ["Friday 14 July"], "tags": ["Security", "Distributed Systems", "Cryptography", "Databases"]},
{"title": ["Building Microservices with Python and Flask"], "author": ["Miguel Grinberg"], "description": ["In this tutorial, Miguel Grinberg starts with an introduction to this architecture, including what\u2019s great and not so great about it, and then teaches you how a traditional monolithic application written in Flask can be refactored into a modern distributed system based on microservices.", "Microservices rely heavily on good API design, for that reason, attendees need to have some amount of experience developing web applications with Python, in particular web APIs. The examples will all be using Flask, but Flask specific experience is not required, since the concepts apply to other web frameworks as well.", "By the end of the class, attendees will have a good understanding of what the microservices architecture is, its benefits and its disadvantages. In the hands-on portion of the class, a complete microservices application will be built, and students will walk away with the application running on their laptops. "], "date": ["Tuesday 11 July"], "tags": ["Microservices", "Web Track", "Python 3", "APIs"]},
{"title": ["Django & Celery - frequently used patterns"], "author": ["Radoslav Georgiev"], "description": ["In this training we will explore different patterns that we often have to use in our web applications when dealing with async work.", "In the Python and Django world, Celery is the go-to solution if we want to have workers, doing heavy lifting off the http process.", "We will learn the basic Celery API and explore some frequently used patterns:", "For the training, a set of setup Django apps will be provided. The attendees will have to work on top of that in order to complete different Celery related tasks."], "date": ["Monday 10 July"], "tags": ["Best Practice", "Django", "Django Track", "Use Case", "APIs"]},
{"title": ["Faster Python Programs - Measure, don't Guess"], "author": ["Mike M\u00fcller"], "description": ["Optimization can often help to make Python programs faster or use less memory.\nDeveloping a strategy, establishing solid measuring and visualization techniques\nas well as knowing about algorithmic basics and datastructures are the foundation\nfor a successful optimization. The tutorial will cover these topics.\nExamples will give you a hands-on experience on how to approach efficiently.", "Python is a great language. But it can be slow compared to other languages\nfor certain types of tasks. If applied appropriately, optimization may reduce\nprogram runtime or memory consumption considerably. But this often comes at a\nprice. Optimization can be time consuming and the optimized program may be more\ncomplicated. This, in turn, means more maintenance effort. How do you find\nout if it is worthwhile to optimize your program? Where should you start?\nThis tutorial will help you to answer these questions. You will learn how\nto find  an optimization strategy based on quantitative and objective criteria.\nYou will experience that one\u2019s gut feeling what to optimize is often wrong.", "The solution to this problem is: \u201eMeasure, Measure, and Measure!\u201c. You will\nlearn how to measure program run times as well as profile CPU and memory.\nThere are great tools available. You will learn how to use some of them.\nMeasuring is not easy because, by definition, as soon as you start to measure,\nyou influence your system. Keeping this impact as small as possible is\nimportant. Therefore, we will cover different measuring techniques.", "Furthermore, we will look at algorithmic improvements. You will see that the\nright data structure for the job can make a big difference. Finally, you will\nlearn about different caching techniques.", "You will need Python 2.7 or 3.5 installed on your laptop. Python 2.6 or 3.3/3.4\nshould also work. Python 3.x is strongly preferred.", "I will use a Jupyter Notebook for the tutorial because it makes a very good\nteaching tool. You are welcome to use the setup you prefer, i.e editor, IDE,\nREPL. If you also like to use a Jupyter Notebook, I recommend ", "conda", " for\neasy installation. Similarly to ", "virtualenv", ", ", "conda", " allows creating isolated\nenvironments but allows binary installs for all platforms.", "There are two ways to install ", "Jupyter", " via ", "conda", ":", "Use ", "Minconda", ". This is a  small install and (after you installed it)\nyou can use the command  ", "conda", " to create an environment:\n", "conda create -n pycon2016 python=3.5", "\nNow you can change into this environment:\n", "source activate pycon2016", ". The prompt should change to ", "(pycon2017)", ".\nNow you can install IPython: ", "conda install Jupyter", ".", "Install ", "Anaconda", " and you are ready to go if you don\u2019t mind installing\nlots of packages from the scientific field.", "After creating a new environment, the system might still work with some\nstale settings. Even when the command ", "which", " tells you that you are using an\nexecutable from your environment, this might actually not be the case.\nIf you see strange behavior using a command line tool in your environment,\nuse ", "hash -r", " and try again.", "You can install these with ", "pip", " (in the active ", "conda", " environment):", "Using the package manager of your OS should be the best option.", "Programmers with good basic Python knowledge. No previous\nknowledge in the field of optimization is required.", "This tutorial will help you to get the most out of your optimization work.\nYou will learn useful techniques for details combined with an overall strategy\nfor the big picture.", "The Python programming language is relatively easy to learn and allows to\nsolve real-world problem with a just a few concepts.", "But it also offers several advanced features that can help to greatly improve\nthe programming experience. The course teaches how important advanced features\nwork and provides details about meta-programming techniques. ", "The Python programming language is relatively easy to learn and allows to\nsolve real-world problem with a just a few concepts.", "But it also offers several advanced features that can help to greatly improve\nthe programming experience. The course teaches how important advanced features\nwork and provides details about meta-programming techniques. ", "Please note: This training is in the week before EuroPython and ", "not included in the conference ticket price", ".", "To attend you need to ", "register here"], "date": ["Monday 10 July"], "tags": ["Best Practice", "Data Structures", "Algorithms", "Tooling", "Performance"]},
{"title": ["Best Practices for Debugging"], "author": ["Kristian Rother"], "description": ["Debugging is a daily activity of any programmer. Frequently, it is assumed that programmers can debug. However, programmers often have to deal with existing code that simply does not work. This tutorial attempts to change that by introducing concepts for debugging and corresponding programming techniques.", "In this tutorial, participants will learn strategies for systematically debugging Python programs. We will work through a series of examples, each with a different kind of bug and with increasing difficulty. The training will be interactive, combining one-person and group activities, to improve your debugging skills in an entertaining way."], "date": ["Monday 10 July"], "tags": ["Best Practice", "Debugging", "Developing with Python"]},
{"title": ["Ansible 2 done right"], "author": ["Roberto Polli"], "description": ["After a quick Ansible roadshow, students  will be guided to reach the following goals:", "The training is interactive, jupyter notebooks  and a Docker image will be provided. Students will be driven performing the exercises and sharing their results. A couple of volunteers will be prepared to support the students.", "The training is based on Docker  images, so before the training, eveybody must setup:", "Further instructions on github when the training will be completed.\nFeel free to contact me for any issue or question!"], "date": ["Wednesday 12 July"], "tags": ["Configuration Management (Ansible/Fabric/Chef/...)", "Best Practice", "System Administration"]},
{"title": ["2D and 3D Game Development with Python"], "author": ["Martin Christen"], "description": ["In this 3-hours training, we learn how to create 2D games in Python using pygame and other modules and how to create 3D games using OpenGL (with an outlook to the Vulkan API).\nWe start creating a simple 2D breakout game and then go on to 3D and then we create a simple Pong-like game in 3D.", "This is an extended version of the workshop I gave at the PythonCamp 2017 in Cologne.", "At the end, you know the basics about game programming, 2D-graphics, 3D-graphics, sound, music and are ready to create your first 2D or even 3D game using Python.", "Bring your own device: this tutorial works best for Linux and Windows. Macs are probably supported too."], "date": ["Tuesday 11 July"], "tags": ["Visualization", "OpenGL", "3D"]},
{"title": ["Agile Data Analytics with Pandas"], "author": ["Alexander Hendorf"], "description": ["Agile Data Analytics with Pandas Training.\nPandas is the ", "Swiss-Multipurpose Knife", " for Data Analysis in Python. With Pandas dealing with data-analysis is easy and simple but there are some things you need to get your head around first as Data-Frames and Data-Series. \nAfter this tutorial you will be able to work with Pandas and make simple data analytics incl. visualisations.\nPandas is not only useful in data science it\u2019s also a great tool for creating e.g. sales reports or any other data-driven report required in business.", "Part one: ", "The Basics", "Part two: ", "Visualisation", "Pandas features directly accessible, powerful visualisations.", "Part three: Data Analytics and Aggregation", "The workshop will be provided as Jupyter notebook for the attendees to follow along.", "Please download this git and follow the install instructions:\n", "https://github.com/alanderex/pandas-pydata-berlin-2017", "\nIf you don\u2019t want to use anaconda, you can use python3 and \npip install pandas jupyter barnum numpy matplotlib xlsxwriter \n(at your own risk)"], "date": ["Thursday 13 July"], "tags": ["Visualization", "Data Science", "Analytics"]},
{"title": ["Beginners' Day"], "author": ["Tobey Announced"], "description": ["This session will be presented in English (although a few of the coaches do speak basic Spanish, French and Italian). ", "Please bring your laptop, as a large part of the day will be devoted to learning Python on your own PC.", "Sessions will include:"], "date": ["Sunday 9 July"], "tags": ["python"]},
{"title": ["Asynchronous Programming With Python"], "author": ["Francesco Pierfederici"], "description": ["This tutorial looks at asynchronous programming with Python and how it has evolved in the last 10+ years. It starts off by exploring coroutines, the yield statement, some third-party libraries like Tornado and Twisted and ends with asyncio and curio.", "Roughly half of the time (> 60 minutes) will be devoted to asyncio because it is a relatively new and very exciting technology with not a huge amount of in-depth literature. The rest of the time will be divided between explaining how we got to asyncio (and what everybody was doing before that) and looking at the other \u201ccompeting\u201d libraries out there. ", "Code: https://github.com/fpierfed/europython2017", "Time permitting, debugging and profiling tools and strategies will be explored as well. This last point is pretty important since async code can be quite hard to wrap one\u2019s head around. At the same time it is a big topic and would probably need its own separate tutorial\u2026", "It is expected that participants know Python but no assumption is made on their ability to write asynchronous code. This will be a live coding experience so bring your laptop and follow along!"], "date": ["Wednesday 12 July"], "tags": ["Python 3", "ASYNC / Concurreny"]},
{"title": ["A Hands-on approach to tuning Python applications for performance"], "author": ["David Liu"], "description": ["With the increase in usage of Python over the past few years, developers have found ways to strain the Python language in the applications they write. For many who use Python in production, getting the most out the language has proved to be a difficult task. This tutorial will explain the latest techniques, tips & tricks to tune Python applications. Attendees will get hands-on experience on tuning Python performance for the Black Scholes algorithm and Collaborative Filtering, and will learn when and how to effectively use the right tools and techniques to get the best performance. We\u2019ll summarize with a look at a real world example from the Barcelona Supercomputing Center and the performance tuning methods they used.\n\u00a0\nOverview:\n- Introduction & Tools of the trade for optimizing Python performance\n - Native Performance libraries\n - Performance profilers\n - Parallelism tools and other accelerators (Dask, Numba, MPI4PY, numexpr, Cython)\n - Hands-On activity: Optimizing Black Scholes algorithm\n - Hands on activity: Collaborative Filtering example\n - Introduction & Tools of the trade for optimizing Python performance\n - Real world Application example: PyCOMPSs from Barcelona Supercomputing Center"], "date": ["Thursday 13 July"], "tags": ["Best Practice", "Cython", "Multi-Processing", "Code Analysis", "Performance"]},
{"title": ["A Thorough Introduction to Containers and Kubernetes "], "author": ["Ruben Orduz"], "description": ["Containers have more or less taken over the world of application, web APIs, mobile endpoints and other forms of deployment. They have become the currency, the \u201ctable stakes\u201d and de-facto application deployment unit. Their raise to the fore has brought about a whole host of use cases which weren\u2019t practical or accessible in the world of \u201cclassic\u201d paradigms of infrastructure and virtualization. Containers have also brought application deployment closer and more accessible to developers. ", "But as more use cases, deployment styles and exponential adoption of containers was ongoing, a new set of problems began to surface: how do you manage the ever growing number of containers in a deployment? How do you make sure containers have the right resources, deployed to the right machine, running with the correct parameters, how do you scale in and out without disruption? How do you make sure in a fleet of X containers that they\u2019re all running and in healthy state? Enter Kubernetes.", "Initially developed internally by Google to replace their own aging and complex container orchestration and management framework. It had to meet all the stringent standards and mind-boggling scale that Google operates on, but from the get-go an effort was made to make the learning curve and developer experience as approachable as possible. At certain point the creators made the case to Google to release kubernetes to the open source community \u2013 a crucial decision that has helped \u201ck8s\u201d (as it\u2019s commonly referred to as) reach rock star levels of fame and mind share not just in the FOSS community but also across industries and businesses from small operations to gigantic multinational corporations with thousands.", "The goal of this course is to give the attendees a solid foundation of the core concepts mentioned above both in theory and hand-on practice using docker, kubernetes and friends to deploy a sample multi-tier python web application. All attendees need is a laptop with minikube installed and an Internet connection.", "Course Outline:"], "date": ["Monday 10 July"], "tags": ["python", "Scaling", "Docker", "DevOps general", "Distributed Systems"]},
{"title": ["You need more security in your application packaging"], "author": ["Juan Manuel Santos"], "description": ["There are as many different ways to package an application as there are programming or scripting languages. No one tool or library is in itself better than another; however when security comes into the picture, there is definitely a pattern between ease of installation and how secure the delivered application is. As more work is put into packaging the application, more measures can be taken in order to ensure its integrity and prevent security issues.", "This talk will cover:\n- The roles involved in the lifecycle of an application, from the start of the development process until it reaches the end user and it is actually used.\n- The inherent problems in this subject, regarding installation and security, as well as how they are related.\n- The different ways of packaging an application in order to deliver it to an end user, focused on a Python perspective.", "After the talk, attendees will have a better grasp on which is the best way for them to package and deliver their application according to their environment and target audience. They will also learn about the upgrade path to switch from one delivery method to another, should they need or want to.", "For this talk, it is desired that attendees have some general systems knowledge. Even though the talk will be focused on Python applications, some knowledge of information security is desired."], "date": ["Tuesday 11 July"], "tags": ["Packaging", "Developing with Python", "Security"]},
{"title": ["Writing code? Pfft... Evolve it instead!"], "author": ["Emma Gordon"], "description": ["We\u2019re heading into a future of delivery drones, driverless cars and 3D-printed \u201choverboards\u201d \u2026", "With machines now able to perform many tasks better than humans, some people are going to be out of a job.", "But not software developers, right?! Could a computer generate the code you currently write for a living?", "In this talk, we\u2019ll take a look at one of the many biologically inspired approaches to AI - Genetic Algorithms, and how they can be used to generate code given a description of the function that that code should perform.", "Spoiler - you\u2019re probably not out of a job, yet\u2026"], "date": ["Wednesday 12 July"], "tags": ["Machine-Learning"]},
{"title": ["Writing Beautiful Code"], "author": ["Anand Chitipothu"], "description": ["Writing code is hard. Writing beautiful code is even more so.", "How to write code that is pleasant to read, easy to understand and joy to maintain?", "Simple things like using right variable names, avoiding to much nesting, using white space and comments etc. makes a lot difference to readability of the code. Even though these things look very simple, even experienced programmers find it hard to put them in practice.", "In this talk, I\u2019ll try summarise the age old wisdom of writing beautiful code and explain those ideas using practical examples written in Python."], "date": ["Tuesday 11 July"], "tags": ["Best Practice", "Developing with Python", "Python general", "Clean Code"]},
{"title": ["Writing Awesome PyPI packages in Python"], "author": ["Magdalena Rother"], "description": ["One of the strengths of the Python programming language is the huge base of Open Source libraries. The PyPI (Python Package Index) repository provides currently 105,917 packages, many of them developed actively by contributors. ", "This talk is a tour through various tools and practices, which help to keep your package in a good state for your users and make it easier for other developers to contribute. One can find these practices in projects of different size, such as Django (24,244  commits, 1,397 contributors) Pandas (15,005 commits, 754 contributors) and Faker (20 commits, 3 contributors).", "Some things to consider when creating your own package:"], "date": ["Friday 14 July"], "tags": ["Best Practice", "Packaging", "Virtual Env", "Open-Source"]},
{"title": ["Why you might want to go async"], "author": ["Jonas Obrist"], "description": ["Asynchronous programming is becoming a hot topic in the Python community, especially with the rise of popularity of Python 3 and the new asyncio library in its standard library. However, it can still be a confusing and mysterious concept. In this talk, I will explain what async programming is, how it works and how it could benefit you. My goal of this talk is that at the end of it, you have an idea about what we mean when we say asynchronous programming in Python and you know how and when to use it.", "In the first part of the talk, I will dive into what asynchronous programming is and what it isn\u2019t. Explaining the difference between IO bound code and CPU bound code. ", "Then I will explain how this actually works in Python, explaining the idea of an event loop, coroutines and cooperative multitasking. ", "Finally, I will talk about why this may be beneficial, what kind of applications can really benefit from this and provide some examples from my experience."], "date": ["Tuesday 11 July"], "tags": ["Web Track", "Python 3", "ASYNC / Concurreny"]},
{"title": ["Write more decorators (and fewer classes)"], "author": ["Antonio Verardi"], "description": ["In the wake of famous talk \u201cStop Writing Classes\u201d by Jack Diederich (https://www.youtube.com/watch?v=o9pEzgHorH0), I\u2019d like to present a pattern that can be used to design clean and pythonic interfaces for programmers based on replacing single-method classes with decorated functions.", "This pattern is already used by some famous frameworks and libraries, like Pyramid (https://trypyramid.com/), but I believe it isn\u2019t that well-known to many (even experienced) Python developers and is not as widely used as it deserves.", "I\u2019ll show how this pattern can be employed to improve a programming interface which is used by an internal log processing framework at Yelp. This will demonstrate how a more functional approach, leveraging the power of Python decorators, can lead to simpler, more beautiful and easier to understand code.", "However, this talk doesn\u2019t suggest giving up classes altogether, but making use of them only when they are truly useful. In fact, the use-case I\u2019m going to analyze will combine classes, functions, and decorators to make the best out of these tools.", "Given that the presentation is going to be very code-oriented, the talk is intended for an audience of developers who are already familiar with most Python constructs, including decorators, even though the concept will be briefly introduced at the beginning of the talk. But, if you are one of these people, I promise you that the code will speak for itself."], "date": ["Tuesday 11 July"], "tags": ["Software Design", "Developing with Python", "Best Practice", "Use Case"]},
{"title": ["When Django is too bloated - Specialized Web-Applications with Werkzeug"], "author": ["Niklas Meinzer"], "description": ["Did you ever think, Django and all the other \u201cbatteries included\u201d frameworks are not flexible enough for your needs? Do you feel like they limit you in your creativity and design? Then this talk is for you!", "Werkzeug is a very lightweight HTTP/WSGI utility for Python. You might have actually used it before, since the popular framework Flask is based on it.\nWerkzeug handles the WSGI communication with the web server and parsing of HTTP packets for you, after that, you are left to do whatever you want. No pre-defined ORM, no request dispatching or template rendering. \nAs a developer you are supported with a live debugger that runs in the browser and a great variety of testing tools making it easy to write fine grained unit tests for your application.", "As a developer at MPS - Medical Systems, I work with Werkzeug on a daily basis. One of our products is ChemoCompile,  a chemo therapy planning, management and documentation tool used in hospitals in various European countries. It is a single-page web application written in Python (backend) and AngularJS (frontend). When we created it, we first prototyped it using Django, but soon realized, that we did not need most of the functionality that Django provides and many of our needs, like interfacing with hospital information systems, are too much out of the scope of a regular web applications. I will talk about, how we then discovered Werkzeug and built our own very customized stack on top of it and how you can do it too!"], "date": ["Thursday 13 July"], "tags": ["Developing with Python", "HTTP", "Architecture", "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)"]},
{"title": ["Why you don't need design patterns in Python?"], "author": ["Sebastian Buczy\u0144ski"], "description": ["Exactly 23 years have passed since release of one of the biggest IT classics - \u201cDesign Patterns: Elements of Reusable Object-Oriented Software\u201d. Contents of the book had considerable influence on dominant programming languages of those days. However, design patterns were not glorified by everyone. Voices of rational critic appeared, pointing out that design patterns are just ways to compensate for missing languages features by tons of clumsy code. If one implements design patterns in Python by the book, they will get code that looks awkward, at best. This talk is to present Python\u2019s features that either simplifies or eliminates need for implementing design patterns. Even if you don\u2019t know what design patterns are - don\u2019t worry. You still may see some new interesting Python\u2019s features and their usage."], "date": ["Tuesday 11 July"], "tags": ["Software Design", "Developing with Python", "Python general"]},
{"title": ["Using the right Async tool, present day"], "author": ["Anton Caceres"], "description": ["Recent releases like AsyncIO and Django Channels gave a new push towards building real-time web-apps fast and easy. However, as similar tools exist in Python since 2000th, how should we balance between modern and time-proven?", "This talk includes but is not focused just on AsyncIO. It gives an overview of Async libraries in Python, and helps with choosing a right tool for various web tasks.", "It describes caveats of using Twisted, Tornado and AsyncIO including theory and live code, and concludes with a basic overview of Django Channels.", "Talk plan", "Why do we need Async Web (5 min)", "Existing libraries and frameworks:  Twisted, Tornado, AsyncIO (15 min)", "Sample task, sample code, conclusions (10 min)", "(optional) what\u2019s about Django Channels?", "Q & A (5 min)"], "date": ["Tuesday 11 July"], "tags": ["Web", "Web Track", "ASYNC / Concurreny", "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)"]},
{"title": ["Type Annotations in Python 3: Whats, whys & wows!"], "author": ["Andreas Dewes"], "description": ["Python 3.5 introduced support for \u201ctype hints\u201d (or annotations), which allows us to annotate our code with useful bits of information without affecting its runtime behavior. Type hints don\u2019t enforce a particular use case and can therefore be used for many purposes.", "In my talk, I will explain some of the use cases of type hints, and show how we can use them to e.g. make our code more secure or teach it new tricks. We will have a look at popular libraries that help us to use the power of type hints (e.g. mypy), but we will also see how we can build our own extensions on top of the type hint system.", "After the talk you should walk away with a solid (basic) understanding of type hints in Python and an idea of how they might be useful to you now or in the future. "], "date": ["Thursday 13 July"], "tags": ["Developing with Python", "Type-Hinting", "Python 3", "Use Case"]},
{"title": ["There should be one obvious way to bring python into production"], "author": ["Sebastian Neubauer"], "description": ["The DevOps methodology is reality. That said, many developers have to deal with the process of bringing python applications into production.\nOne aphorism of the Zen of Python states: \u201cThere should be one\u2013 and preferably only one \u2013obvious way to do it.\u201d\nWhile for the language itself and code being written with it, this advice is often strictly followed for good reasons. For the process of bringing python into production it is not.", "In the first part of this talk I will give an overview of the different steps in the delivery pipeline, from packaging to deployment and the various possible implementations for each of those steps that emerged over the last years. We will discuss docker, pex, wheels, debs, and tars. We will learn why fixed environments are crucial and why pip is not yet what it should be. We learn about the different runtime environments, from bare metal servers over ephemeral container clusters to \u201cserverless\u201d and what they impose on the deployment process and scratch on the surface of configuration management using tools like Ansible and orchestration frameworks like Kubernetes. We will also explore the world beyond python by looking into other languages ecosystems and learn how they addressed and solved this issue.", "After we understood the requirements and realized that there is not \u201cone obvious way to do it\u201d, this talk is a call to action: Let us define and build the \u201cone obvious way\u201d of how we want to bring python into production!"], "date": ["Tuesday 11 July"], "tags": ["Configuration Management (Ansible/Fabric/Chef/...)", "Operations", "Deployment/Continuous Integration and Delivery", "Best Practice", "DevOps general"]},
{"title": ["Tracing, Fast and Slow: Digging into & improving your web service\u2019s performance"], "author": ["Lynn Root"], "description": ["Do you maintain a ", "Rube Goldberg", "-like service? Perhaps it\u2019s highly distributed? Or you recently walked onto a team with an unfamiliar codebase? Have you noticed your service responds slower than molasses? This talk will walk you through how to pinpoint bottlenecks, approaches and tools to make improvements, and make you seem like the hero! All in a day\u2019s work.", "The talk will describe various types of tracing a web service, including black & white box tracing, tracing distributed systems, as well as various tools and external services available to measure performance. I\u2019ll also present a few different rabbit holes to dive into when trying to improve your service\u2019s performance."], "date": ["Tuesday 11 July"], "tags": ["Performance", "Web Track", "Infrastructure", "Web General", "Distributed Systems"]},
{"title": ["Using Python and microservices to fuel WebPush at Mozilla"], "author": ["Mansimar Kaur"], "description": ["This talk will focus on how python and microservices fuel webpush in the storage team of Mozilla . It will also act as a good introduction to webpush technology and how to integrate it into web apps.", "The talk will cover:"], "date": ["Thursday 13 July"], "tags": ["Software Design", "Microservices", "Web Track", "Web General", "Open-Source"]},
{"title": ["Understanding Celery & CeleryBeat"], "author": ["Yigit Guler"], "description": ["Celery is a distributed task queue for Python. Although it is most popular in the web development ecosystem, it has a wide area of usage from system management to IoT devices. With Celery, transforming a function into a task is quite easy and can add great performance & usability to the applications that we build.", "This talk aims to give attendants a general overview on Celery and its uses. We will walk through the core Celery architecture by introducing key components with the help of various real-world examples. This will also lead to an understanding of the task queue systems in general. Attendants will also gain knowledge about Celerybeat; a tool that focuses on scheduling tasks.", "We will be looking for the answers to the following questions:", "Attendants should have a basic knowledge of Python, and a minor development experience."], "date": ["Monday 10 July"], "tags": ["Developing with Python", "Web Track", "Django Track", "Hardware/IoT Track"]},
{"title": ["The joy of PyPy JIT: abstractions for free"], "author": ["Antonio Cuni"], "description": ["The joy of PyPy JIT: abstractions for free", "The PyPy JIT is a powerful piece of technology which makes Python program\nrunning faster: in this talk, we will see how it helps us to write our\nprograms better without sacrificing performance.", "One of the key to write complex software systems of good quality is to make a\ngood usage of abstractions, to clearly separate the various layers and\ncomponents.  However, often each layer of abstraction adds some cost in terms\nof runtime performance, so we need to struggle finding the best trade-off\nbetween maintainability and speed.", "Because of the way it works, the PyPy JIT naturally removes the cost of most\nabstractions: we will look at real-life examples of how this is possible,\nshowing what the JIT can and can\u2019t do. We will also show how this compares to\nother popular systems of optimizing Python code, such as Cython."], "date": ["Wednesday 12 July"], "tags": ["Software Design", "Performance", "PyPy", "Architecture", "Compiler and Interpreters"]},
{"title": ["Testing microcontroller firmware with Python"], "author": ["Alexander Steffen"], "description": ["Last year\u2019s talk", " showed you how to use ", "CFFI", " to write unit tests for C code in Python. This year we will take the concept one step further and create integration tests covering (almost) the whole firmware of a microcontroller, again leveraging the power of CFFI.", "But instead of running the firmware on the controller, it will be executed on the development machine (that is, a standard x86 architecture), allowing for much faster test execution, without requiring the target hardware. For this to work, all the hardware-dependent parts of the firmware code need to be replaced by Python code simulating the hardware functionality, so that all the firmware above this hardware abstraction layer can be executed unmodified.", "In addition, this allows to use advanced security testing tools like ", "AddressSanitizer", " and ", "american fuzzy lop", " that would not be able to run directly on the microcontroller."], "date": ["Monday 10 July"], "tags": ["Other Hardware", "Testing", "Programming", "Hardware/IoT Track", "C-Languages"]},
{"title": ["Testing in Layers"], "author": ["Alex Martelli"], "description": ["The role of automated testing at the heart of modern development and operations is a given. However, the traditional approach to testing, separating too-developer-focused unit testing and (often only semi-automated) end-to-end integration testing\u2014is not optimal in the modern, fluid world of DevOps.", "Nothing short of full automation is suitable for continuous integration; any \u201ctesting\u201d requiring humans has a drastically different place in the continuum of development and deployment and should best be called by a completely different name like quality assurance. Within the realm of fully automated testing, the best approach, just as for other kinds of software, is modular and layered.", "This talk highlights the proper design of components for testing purposes and explains how such a design lets you compose multiple, layered testing suites that span the gamut from fast, light-weight unit tests meant to run all the time during development, to full-fledged end-to-end tests of whole systems\u2014and, crucially, the often-neglected intermediate layers, bridging the thoroughness of end-to-end tests with unit tests\u2019 speed and ability to pinpoint the location of any problems that emerge, enabling rapid fixes of most such problems.", "The talk also discusses the use of modular, layered testing components to validate software refactoring, and (when deployed in a load-testing arrangement) identify and validate software (and architectural) optimizations."], "date": ["Monday 10 July"], "tags": ["Developing with Python", "Deployment/Continuous Integration and Delivery", "Testing"]},
{"title": ["Teeing up Python: Code Golf"], "author": ["Lee Sheng"], "description": ["Code golfing is an interesting heuristic dedicated to minimizing the overall length of code to produce the same functionality. The result doesn\u2019t have to be incomprehensible, and in fact, we can make the code more Pythonic in the process!", "Concise code helps future readers of the code understand the intent without getting distracted by implementation errata. We\u2019ll cover numerous features of Python which allow complex ideas to be expressed concisely without sacrificing readability.  Broad subtopics:", "Slides: ", "https://goo.gl/9xPrSY"], "date": ["Wednesday 12 July"], "tags": ["Clean Code", "Functional Programming", "Python general", "Developing with Python"]},
{"title": ["Teach your (micro)services speak Protocol Buffers with gRPC."], "author": ["Mihai Iachimovschi"], "description": ["When it comes to microservices, there\u2019re a lot of things worth keeping in mind. Designing such fine-grained, loosely-coupled services requires paying lots of attention to various patterns and approaches to make them future-proof. A very important thing to consider, is the way those services will communicate with each-other in production. Usually the communication is done over the network using a technology-agnostic protocol. At the next level the service should provide an API for its friend services. Then, the data should be serialized without altering its meaning and transferred to the picked endpoint.", "Nowadays, exposing a REST API that operates with JSON over plain HTTP is a usual way to lay the grounds of communication for the services. It is easy to accomplish, but it has some drawbacks. First of all, JSON is a human readable format, and it\u2019s not as other serialization approaches. Also, with JSON it\u2019s not possible to natively enforce the schema, and evolving the API may be painful.", "This talk\u2019s purpose is to describe in deep detail the benefits of protocol buffers, that offer us for free an easy way to define the API messages in the proto format, and then reuse them inside different services, without even being locked to use the same programming language for them. Moreover, with gRPC we can define the API\u2019s endpoints easily in the same proto format. All these offer us a robust schema enforcement, compact binary serialization, and easy backward compatibility."], "date": ["Wednesday 12 July"], "tags": ["Python general", "HTTP", "Microservices"]},
{"title": ["Streaming: Why should I care?"], "author": ["Christian Trebing"], "description": ["You think, all that hype about streaming solutions does not affect you? I thought so also. But when playing around with that topic for some time, I realized that it sheds a different light on many topics I struggled with for some time. In this talk I want to share with you what I discovered when switching from a from a database centric view to stream oriented processing. ", "For sure, streaming does not solve any problem, but much more than I thought before. And in python you have good support with many streaming clients. I will give some examples and comparisons for working with Kafka and Avro Schemas."], "date": ["Thursday 13 July"], "tags": ["Data Structures", "Big Data", "Databases"]},
{"title": ["Space weather monitoring for a virtual reality simulation of a Martian settlment"], "author": ["Antonio Del Mastro"], "description": ["High-energy particles accelerated by the Sun during Coronal Mass Ejections (CME) are a major concern for a manned mission to Mars. On Earth surface, these particles are shielded by the Earth magnetic field. In space and on the Martian surface, where such shielding is absent or much weaker, CME pose a radiation hazard to the health of astronauts. The development of tools to understand and forecast the interplanetary space weather is a requirement for future manned space missions in order to properly protect the astronauts from the radiation environment. A variety of methods are currently developed by the scientific community and a number of public tools for space weather monitoring and forecast is already available online.\nWe present a Python-based tool which takes advantage of two publicly accessible space weather web portals. Our software combines the forecast of CME and a real-time propagation model of energetic particles throughout the inner Solar System and the Martian atmosphere. It consistently recovers real-time relevant information and provides with days-to-hours forecasts for the radiation dose astronauts on Mars would be exposed to. The system raises an alert signal when the radiation dose exceeds the security levels defined by the main space agencies adopted as a reference.\nOur tool is meant to be integrated in a virtual reality simulation of a human settlement on the surface of Mars (Mars City Project www.mars-city.org). ", "\nPrerequisite:  Intermediate knowledge."], "date": ["Friday 14 July"], "tags": ["Python general", "Physics"]},
{"title": ["Sustainable Scientific Software Development"], "author": ["Alice Harpole"], "description": ["In the experimental Sciences, new theories are developed by applying the Scientific method to produce results which are accurate, reproducible and reliable. This involves testing the experimental setup to show that it is working as designed and thoroughly documenting the progress of the experiment. Results will not be trusted unless the experiment has been carried out to a suitable standard.", "In computational Science, we should aim to apply the same principles. Results should only be trusted if the code that has produced it has undergone rigorous testing which demonstrates that it is working as intended, and any limitations of the code (e.g. numerical errors) are understood and quantified. The code should be well documented so that others can understand how it works and run it themselves to replicate results.", "Unfortunately, this can be quite challenging. By their very nature, scientific codes are built to investigate systems where the behaviour is to some extent unknown, so testing them can be quite difficult. They can be very complex, built over a number of years (or even decades!) with contributions from many people. However, even for the most complicated of codes there are a number of different tools we can use to build robust, reliable code.", "In this talk, I shall look at techniques and tools you can use to build more sustainable scientific code, including testing, continuous integration and documentation."], "date": ["Wednesday 12 July"], "tags": ["Best Practice", "Science", "Science Track", "Documentation", "Testing"]},
{"title": ["Taking the Hipster out of Streaming"], "author": ["Andreas Heider"], "description": ["Winton ingests data continually from the world\u2019s financial markets. We track millions of individual timeseries, with divergent formats, from disparate time zones, and whose frequencies vary from months to milliseconds. We go beyond simply reading and storing it - we stitch distinct and vast data sets together and subject them to intricate calculations in real-time. This talk will focus on the way we use Python to achieve these ends, and how we are creating tools to further commoditise streaming as a service. "], "date": ["Wednesday 12 July"], "tags": ["Science", "Data"]},
{"title": ["Solid Snakes"], "author": ["Hynek Schlawack"], "description": ["No matter whether you run a web app, search for gravitational waves, or maintain a backup script: being responsible for a piece of software or infrastructure means that you either get a pager right away, or that you get angry calls from people affected by outages. Being paged at 4am in everyday life is bad enough. Having to fix problems from hotel rooms while your travel buddies go for brunch is even worse.", "And while incidents can\u2019t be prevented completely, there are ways to make your systems more reliable and minimize the need for (your!) manual intervention. This talk will help you to get calm nights and relaxing vacations by teaching you some of them."], "date": ["Tuesday 11 July"], "tags": ["Best Practice", "Development", "Architecture", "DevOps general"]},
{"title": ["Scripting across hosts with Chopsticks"], "author": ["Daniel Pope"], "description": ["Chopsticks lets your import and run Python code on remote Unix hosts over SSH. It works with no code deployment and no preinstalled software other than Python and SSH. It has built-in support for running code on many hosts in parallel.", "Unlike Fabric or Ansible, Chopsticks not opinionated about the structure of the code you run, allowing it to be used for orchestration, auditing, diagnostics, monitoring probes, and more.", "Also unlike these, Chopsticks is not wedded to SSH, so it can transparently work on Docker containers over pipes, local subprocesses - and in future, sudo?", "Daniel will demonstrate Chopsticks in action, walk through the API, and explain the three clever tricks that Chopsticks is built on."], "date": ["Thursday 13 July"], "tags": ["Configuration Management (Ansible/Fabric/Chef/...)", "Docker", "System Administration"]},
{"title": ["Serverless Applications with Chalice"], "author": ["Kyle Knapp"], "description": ["Serverless computing: it is the practice of building and running services and applications without having to worry about provisioning and managing servers. Serverless computing has been a popular topic the past couple years, and with respect to Python, there have been various different frameworks and tools released for developing and managing your Python serverless applications. This talk will focus on developing and managing your serverless applications with ", "chalice", ", a python serverless microframework for AWS. Discussion points for this talk will include, but not be limited to:", "\u2022   Overview of serverless applications", "\u2022   Best practices in writing a serverless application", "\u2022    Basic usage and core features of chalice", "\u2022   Writing complete, production-level applications using chalice", "\u2022   Managing and maintaining serverless applications using chalice tooling", "By the end of the talk, audience members should have a better understanding of serverless computing and how to use chalice to develop and maintain serverless applications."], "date": ["Tuesday 11 July"], "tags": ["Best Practice", "Web Track", "Use Case", "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)"]},
{"title": ["Simple ETL in python 3.5+ with Bonobo"], "author": ["Romain Dorgueil"], "description": ["Simple is better than complex, right? That\u2019s true for data pipelines too.", "For more than 5 years, I hacked together extract-transform-load (ETL) processes in various different positions (ETL is just a fancy term for \u00abbunch of things that take data somewhere and put it elsewhere, eventually transformed\u00bb).", "I did it as a founder, as a consultant, as a technical co-founder, for some side projects, and now in a big corp (to be continued\u2026).", "In each case, I felt frustrated with the tools available, and in some serious cases, I had to hack things myself to get the job done. ", "Bonobo", " is the repackaging of my past experiences for python 3.5+, and grasping the basics should not take more than the length of the presentation.", "Topics outline (subject to small changes) :", "\u2022 INTRO : State of the art / different tools for different needs.", "\u2022 Where does it come from.", "\u2022 Writing a data processor.", "\u2022 Running and monitoring data jobs.", "\u2022 OUTRO : The road ahead.", "\u2022 Q&A", "Bonobo", " is the glue you need to tie together regular functions in a transformation graph (think unix pipes). Execution strategies are abstracted so you can focus on the real operations. As a result, you can engineer simple and testable systems, using the same good computer development practices as you use in <insert your favorite field here>.", "Spoiler : there is no \u00abbig data\u00bb in this talk."], "date": ["Wednesday 12 July"], "tags": ["Data Science", "Databases", "Data", "Open-Source", "Python 3"]},
{"title": ["Scientific computing  using Cython: Best of both Worlds!"], "author": ["Simmi Mourya"], "description": ["Cython is not only an excellent and widely used tool to speed up computational Python code, it\u2019s also a very smart way to talk to native code and libraries. The Cython compiler translates Python code to C or C++ code, and supports static type annotations to allow direct use of C/C++ data types and functions. You get the best of both worlds while working with Cython: Python like syntax with blazing fast C speed.", "This talk/tutorial by a Python/Cython developer introduces Cython programming language and leads the participants all the way from their first Python extension to an efficient integration with native C. \nTopics covered will be:\n1. Using the Cython compiler to build a native extension module\n2. Cython development from Jupyter notebook\n3. Mixing Python with static C types in the Cython language\n4. Calling into native code from Cython code (Brief introduction)\n5. Wrap up: A brief case study\nCyvlfeat: A Cython/Python wrapper for Computer Vision library, VLFeat.", "Participants are expected to have a good understanding of the Python language, some basic knowledge about C or C++.  No deep C programming knowledge is required, nor is any prior knowledge needed about writing extension modules for the CPython runtime."], "date": ["Friday 14 July"], "tags": ["Best Practice", "Cython", "CPython", "Scientific Libraries (Numpy/Pandas/SciKit/...)"]},
{"title": ["Skynet your Infrastructure with QUADS"], "author": ["Will Foster"], "description": ["The very small 2-person DevOps team within Red Hat Performance/Scale Engineering has developed a set of Open Source Python-based systems and network automation provisioning tools designed to end-to-end automate the provisioning of large-scale systems and network switches using tools like Foreman, Ansible, and other Open Source bits.", "QUADS \u2013 or \u201cquick and dirty scheduler\u201d allows a normally overburdened DevOps warrior to fully automate large swaths of systems and network devices based on a schedule, even set systems provisioning to fire off in the future so they can focus on important things like Netflix and popcorn or not reading your emails while your datacenter burns in an inferno of rapid, automated skynet provisioning. QUADS will also auto-generate up-to-date infrastructure documentation, track scheduling, systems assignments and more.", "In this talk we\u2019ll show you how we\u2019re using QUADS (backed by Foreman) to empower rapid, meaningful performance and scale testing of Red Hat products and technologies. While QUADS is a new project and under constant development, the design approach to handling large-scale systems provisioning as well as the current codebase is consumable for others interested in improving the efficiency and level of automation within their infrastructure."], "date": ["Tuesday 11 July"], "tags": ["Operations", "OpenStack", "Infrastructure", "DevOps general", "System Administration"]},
{"title": ["Replacing passwords with multiple factors: email, OTP, and hardware keys"], "author": ["Justin Mayer"], "description": ["Passwords have formed the cornerstone of I.T. system authentication for decades, but recent high-profile breaches have underscored the risks of password-based authentication systems.", "The good news is that we can replace passwords with other factors:", "These factors can be used independently or in conjunction with one another to provide vastly greater security than the traditional username-plus-password combination.", "Attendees of this talk will walk away with a detailed understanding of:", "Attendees will learn how to implement these multi-factor authentication methods in their own Python-based web applications, with primary focus on methods for integrating email-based authentication, one-time passwords, and U2F hardware keys into Django-based projects."], "date": ["Monday 10 July"], "tags": ["Best Practice", "Web", "Authentication", "Security", "Django"]},
{"title": ["Running Python code in parallel and asynchronously"], "author": ["Michal Wysokinski"], "description": ["My outline will be:\n1) What does it mean to run code in parallel in Python? How does it differ from concurrency? Can they be applied at the some time?\n2) GIL and why it complicates parallelism in Python (CPython), but only to some extent.\n3)  Difference between a thread and a process from the OS point of view.\n4) When parallelism in Python is useful and when to avoid it.\n5) Description of how to achieve parallel execution in CPython and how to do it properly.\n6) Possible traps when using parallel programming in Python.\n7) What happens if the code runs both in parallel and asynchronously?\n8) Is it really beneficial?\n9) How such execution can be achieved?", "As the outline shows I will focus on the parallel part as it is an important topic in our current time of multicore processors and multiprocessor systems.", "The topic has been discussed a lot of times but mainly from the scientific point of view, where it\u2019s been used for speeding up calulcations time.  I will not go into these use cases (e.g. using MPI) but rather discuss it from web development point of view (e.g. multi worker applications)."], "date": ["Tuesday 11 July"], "tags": ["Performance", "ASYNC / Concurreny", "Multi-Processing"]},
{"title": ["Rethinking how we build HTTP APIs"], "author": ["Fergal Walsh"], "description": ["Rethinking how we build HTTP APIs", "The Python universe is overflowing with web frameworks, from full featured batteries included frameworks like Django to micro frameworks like Bottle or Flask. They each have their own specific features but in the end they are all very similar in their core functionality of processing requests and generating responses.", "In this talk I will discuss why I felt the need to create yet another framework, a pico framework, that specifically focuses on the task of building HTTP based APIs for the web.", "Pico, as it is aptly called, doesn\u2019t do templating, ORM, custom routing, authentication, validation, caching, or a million other things. Instead it helps you write clean APIs using simple functions and modules with minimal boilerplate. Pico is both opinionated and flexible in equal measures so you can focus on what matters; your API logic. Pico helps you to write code that that is simple to get started, trivial to test, and easy to maintain as your project grows.", "APIs built with Pico are self describing so client code can automatically/dynamically be created. Pico includes both a Python & Javascript client but it is also very simple to interact with your API with plain old cURL/Requests/jQuery/etc. It is just a HTTP API after all.", "Having recently released Pico 2.0, this talk will outline the evolution of this framework over the past 7 years and discuss some lessons learnt along the way about building HTTP APIs and frameworks. "], "date": ["Friday 14 July"], "tags": ["APIs", "HTTP", "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)"]},
{"title": ["Rendering complex 3D-Geodata using pyRT"], "author": ["Martin Christen"], "description": ["PyRT (pronounced \u201cpirate\") is a rather new open source project creating a ray tracer in pure Python and some optional CPU/GPU acceleration using bindings. Ray tracing is a technique for generating an image by tracing the path of light. \nPyRT was created to render large 3D City models. In this talk, the possibilities and experiences of ray tracing in Python using pyRT are shown. pyRT also runs in the Jupyter Notebook.\nRendering complex 3D-Geodata, such as 3D-City models with an extremely high polygon count and a vast amount of textures at interactive framerates is still a very challenging task, especially on mobile devices. This talk presents an approach for processing, caching and serving massive geospatial data in a cloud-based environment for large scale, out-of-core, highly scalable 3D scene rendering in a web-based solution. PyRT  is used for rendering large amounts of geospatial data. The approach for processing, rendering and caching 3D-City Models is shown.", "Screenshots:\n"], "date": ["Wednesday 12 July"], "tags": ["Visualization", "GEO and GIS", "Open-Source", "Jupyter/iPython Notebook", "3D"]},
{"title": ["React server side rendering with Python"], "author": ["Mihir Soni"], "description": ["React is widely used as client side library for building UI along with reducing complexity involved in maintaining state. Another important aspect is how to render React components on server side. I\u2019ll explain the impact of server side rendering on application performance and how it can help improve SEO better by ensuring that web crawlers see your pages same as you intend it to. Apart from this, I\u2019ll also talk about how can achieve it with the small demo.", "Outline of talk"], "date": ["Thursday 13 July"], "tags": ["JavaScript Web Frameworks (AngularJS/ReactJS/...)", "NodeJS"]},
{"title": ["Realtime Distributed Computing At Scale (in pure Python!): Storm And Streamparse"], "author": ["Alexander Lourenco"], "description": ["Realtime distributed computing is tough, especially at scale: managing a large data pipeline is tough, and it\u2019s even tougher to keep latency low and availability high when processing tens of thousands of items per second. Many people turn in despair to Java or Scala when it comes time to scale up, but we can do it in Python: Apache Storm is a distributed realtime computation system that can let you scale up- and no need to reach for a new language!", "This talk will walk the audience through the basics of Apache Storm and how it\u2019s an elegant, useful solution to realtime distributed computing,  as well as how streamparse can let you write your storm components in Python by writing some code and a basic storm topology in Python. We\u2019ll also look at how Parsely uses Storm in production to handle billions of realtime events a month. If we have time, we\u2019ll go a bit into how Storm has several advantages over other common Python computing data streaming solutions, like Spark\u2019s microbatching.", "Goals:", "At the end of the talk, ideally you should be able to understand:\nWhat Apache Storm is, how it works generally, and what scenarios it\u2019s useful for\nHow streamparse can be used to write your Storm topologies\nHow Storm + streamparse is used in an actual high-availability, low-latency production environment"], "date": ["Wednesday 12 July"], "tags": ["Analytics", "Big Data", "Open-Source", "Distributed Systems", "Use Case"]},
{"title": ["Pythonist view on Microservices & Containerization"], "author": ["Abhishek Sharma"], "description": ["Microservices architecture and containerization are words thrown around when we talk about designing systems that are loosely coupled, although it may sound like buzz words but these key concepts play a very important part in system as a whole.", "In this talk, we will cover how microservices can be implemented in python using available open source frameworks and how it can be deployed independently to scale and perform in production environment. I\u2019ll also share several use-cases where it is worth planning and developing system architecture considering microservices/containerization and will also discuss some trade-off of having such architecture.", "Outline:"], "date": ["Friday 14 July"], "tags": ["python", "Web", "Distributed Systems"]},
{"title": ["Pythonic Refactoring: Protecting Your Users From Change"], "author": ["Mark Smith"], "description": ["So you\u2019ve released a library! Now you need to ", "maintain", " it. You want to add features, restructure the code, fix bugs, and maybe improve the library\u2019s usability. Your users just want their code to carry on working. ", "That\u2019s okay!", "This talk will cover techniques in both code and project management to allow you to keep your code moving forwards without breaking your users\u2019 code. It is aimed at developers with a little experience of writing libraries in Python, and will cover some intermediate subjects like function decorators and magic methods.", "Refactoring in Python is a mixed bag - on the one hand you have ", "powerful tools", " like the ", "@property", " decorator, ", "__dunder__", " methods, and even ", "metaclasses", ". On the other hand, because Python code has no concept of private or protected like some other languages, it can be difficult to know what your public interface even ", "is", ".", "I\u2019ll talk about how to identify your public interface, ", "and", " make that clear to your users (", "cough", " documentation ", "cough", "). I\u2019ll cover how to structure your tests so you know when you\u2019ve broken your public interface. I\u2019ll discuss how to use some of Python\u2019s language features to trick your users into thinking your code hasn\u2019t changed at all (except for those brilliant new features you\u2019ve just added!). And finally, I\u2019ll cover how you know it\u2019s time to break backwards compatibility and how to break it to your users."], "date": ["Friday 14 July"], "tags": ["Software Design", "Best Practice", "legacy-code", "Programming", "python"]},
{"title": ["Python REST frameworks review"], "author": ["Rafa\u0142 Nowicki"], "description": ["Number of libraries for building RESTful web applications is growing up. Selecting best framework becomes hard decision for web developers. ", "During the presentation I will go through best libraries I can recommend for building RESTful web applications.", "Selection of libraries will be subjective, based on my experience with building microservices in Python. I will share code examples, weaknesses and strengths for each library. I hope everyone will find something that best suits his needs."], "date": ["Monday 10 July"], "tags": ["HTTP", "Web Track", "RESTful", "APIs"]},
{"title": ["Python Profiling with Intel\u00ae VTune\u2122 Amplifier"], "author": ["Shailen Sobhee"], "description": ["Python has grown in both significance and popularity in the last years, especially in the field of high performance computing and machine learning. When it comes to performance, there are numerous ways of profiling and measuring code performance\u2014with each analysis tool having its own strengths and weaknesses. In this talk, we will introduce a rich GUI application (Intel\u00ae VTune\u2122 Amplifier) which can be used to analyze the runtime performance of one\u2019s Python application, and fully understand where the performance bottlenecks are in one\u2019s code.  With this application, one may also analyze the call-stacks and get quick visual clues where one\u2019s Python application is spending time or wasting CPU cycles."], "date": ["Monday 10 July"], "tags": ["python"]},
{"title": ["Pythonic JavaScript for Web Developers"], "author": ["Ville S\u00e4\u00e4vuori"], "description": ["Having a basic knowledge of JavaScript is obligatory for every Web developer in todays world.", " Most of us are familiar with the pain of having to write some simple hide/show logic and ajax queries with jQuery on a page that is mostly rendered server-side. Nowadays, however, there are lots of great JavaScript frameworks and build tools that not only make these things very easy to do The Right Way, but also make the whole process quite painless.", "I spent past year in a small startup writing only front-end code and evaluating different tools and best practises. Bringing these tools to old Django projects has been eye-opening. There are practically no documentation or code examples on how to integrate these things to Python backend projects, so it\u2019s very hard to get started from scratch. In this talk we\u2019ll go trough some of the tools, examples on how to get started, and also some coding guidelines on how to make JavaScript look and feel more sane and Pythonic.", "The current state of JavaScript frameworks is notoriously bad; there are more of them than blog engines written with Django. We\u2019ll focus on ", "Vue.js", " which is a lightweight, very easy to get started and yet powerful tool.", "We\u2019ll also take a look at new end-to-end browser test tools and modern build tools that enable us to take full advantage of the huge NPM package universe (Cheeseshop for JS)  and write modern ES2015/ES2016 JavaScript that has more powerful and cleaner syntax."], "date": ["Wednesday 12 July"], "tags": ["Best Practice", "JavaScript Web Frameworks (AngularJS/ReactJS/...)", "Web Track", "HTML5", "Django"]},
{"title": ["Python Packaging - current state and overview"], "author": ["Jakub Wasielak"], "description": ["Historically, Python packaging has been a source of significant pain for even the most devoted Python enthusiasts. I\u2019ve found myself in the situation, where I did know the basic concepts behind the tools, but despite that only thing I could do was following tutorials. That was the time to change it and that\u2019s the reason this presentation was written.", "In this talk, I\u2019ll provide a quick overview of the current state of Python packaging tools. I\u2019ll mostly focus on setuptools, pip and wheels, putting an emphasis on their superiority over their precursors. I\u2019ll also list down the honorable mentions of tools worth knowing. Then I\u2019ll share examples of how you can use the features of the Setuptools library - those well known and those we use when pip-installing packages, but most of us can\u2019t name them.", "The point of this presentation is to explain how to use tools which are all there, just waiting to make developing, testing, and distributing our Python packages easier. Doesn\u2019t matter if you\u2019re a Python expert or a beginner - the knowledge covered by this presentation will be useful despite your level."], "date": ["Monday 10 July"], "tags": ["Development", "Packaging", "PyPi", "Open-Source", "python"]},
{"title": ["PyPy meets Python 3 and Numpy"], "author": ["Armin Rigo"], "description": ["PyPy is an alternative Python implementation whose JIT often gives seriously better performance than CPython.  Now PyPy supports, in beta version, two major new application domains: Python 3.x, and Numpy and the rest of the scientific stack.  These are each an important milestone for a subset of the Python community.", "Thanks to a grant by Mozilla, \u201cPyPy3\u201d now largely supports Python 3.5 with one or two extensions from Python 3.6.  Full support should be  very close.  (Note that PyPy2 will not disappear, if only because PyPy itself  is written in Python 2.7.)", "Numpy and the major packages of the scientific stack are now starting to work well with PyPy (PyPy2 mostly, but also PyPy3).  This is thanks to progress in \u201ccpyext\u201d emulating the CPython C API, as well as fixes to the packages in collaboration with the upstream developers.", "We will also mention some more \u201cwhat\u2019s new in PyPy\u201d topics from the last couple of years."], "date": ["Friday 14 July"], "tags": ["Scientific Libraries (Numpy/Pandas/SciKit/...)", "PyPy", "Python 3"]},
{"title": ["Python and Angular, a perfect match?"], "author": ["Oliver Braun"], "description": ["Python on mobile devices is still negligible mostly because of the GUI problems which arise. But Python on android devices is considered to be a solved problem since the module Python for Android is available. We have nowadays at least the possibility to develop for mobile devices with the GUI engine Kivy which is maybe the first choice for rapid prototyping on that platform. But as it comes to design work and mobile device look alike Kivy is still far behind the web development tools HTML/CSS.", "In our talk we present a conceptual work where we used Ionic - this is an mobile development framework based on Angular - to build the GUI part of an app and connected that to a Python back end. In our point of view our proposal is very general and will give Python a boost towards modern UX development and makes HTML/CSS/JavaScript a real option especially in combination with Angular.\nThe main part of our solution that we show is the interoperation between JavaScript and Python such that asynchronous calls in both direction are possible. \nThe advantage is to develop UX and back end code only once and use it literally on every platform where a Python interpreter and a browser runs."], "date": ["Friday 14 July"], "tags": ["Mobile", "JavaScript Web Frameworks (AngularJS/ReactJS/...)", "Web Track", "HTML5", "Cross-Platform-Development"]},
{"title": ["Python on Windows, Like a Boss"], "author": ["Nicola Iarocci"], "description": ["Historically, Python coding on Windows has been kind of troublesome, but not anymore. Since a couple of years ago it is possible write awesome quality Python code with Visual Studio. This is good news for Python developers of all levels, because Visual Studio offers and incredible set of tools to enhance all the stages of product development: from managing virtual environments and handling package management, to writing and refactoring code, up to testing & debugging - all of that for free. In this talk I will demo how you can use Visual Studio to boost your Python development on Windows."], "date": ["Monday 10 July"], "tags": ["Windows", "python", "Python general"]},
{"title": ["PyCharm tips and tricks"], "author": ["Dmitry Trofimov"], "description": ["PyCharm, a Python IDE with its free and open-source community edition, in last several years has become a tool of choice for more and more Python developers. But not everybody uses its full power. Moreover, most only use a fraction of the functionality it provides.", "The reality is that an IDE is not just about a set of integrated tools, but an environment that understands the semantics of your project, of what you\u2019re doing. It can leverage this to provide you with functionality that can make repetitive mundane tasks become frictionless, as well as give insight into potential problems.", "In this session, we will go through the most powerful features the IDE offers and whether you do web development or work with data using Python, you will benefit knowing how the IDE can leverage your programming skills."], "date": ["Wednesday 12 July"], "tags": ["Best Practice", "python", "Clean Code", "Tooling"]},
{"title": ["pybind11 - seamless operability between C++11 and Python"], "author": ["Ivan Smirnov"], "description": ["pybind11", " is a lightweight header-only C++11 library that exposes C++ types to Python and vice versa and allows creating Python extension modules with minimum boilerplate by leveraging compile-time introspection and type inference. While this library\u2019s goals and some of the  syntax may be considered similar to Boost.Python, it has a much smaller footprint, is entirely self-contained, and offers additional features like direct support for NumPy arrays.", "In this talk, we will look at how to write Python extension modules in C++ from scratch with pybind11, starting from simple bindings and building up to more complex examples that deal with iterators, STL data structures, NumPy types and Python callbacks. We will also touch upon some of the internal machinery of the library like the virtual call mechanism and reference counting."], "date": ["Friday 14 July"], "tags": ["Developing with Python", "Python general", "C-Languages", "CPython", "Compiler and Interpreters"]},
{"title": ["Python Microservices"], "author": ["Miguel Grinberg"], "description": ["This talk is for Python web developers interested in learning what are the core ideas behind microservices, what problems they try to solve, and what are the viable options to implement them in Python, both from technical and teamwork point of views. Some of the topics that will be discussed include the role of APIs, the improvements microservices bring to application scalability, upgrades, and maintenance, and the challenges in breaking up a monolithic application.", "Attendees will leave the talk with a good idea of what microservices are, and how they help build better applications. As usual with my presentations, there will be actual code examples presented during the talk that I will also host on GitHub, for those interested in investigating further on their own. "], "date": ["Monday 10 July"], "tags": ["Public Cloud (AWS/Google/...)", "Microservices", "Web Track", "APIs"]},
{"title": ["Protocols and Practices enforcing in Python through bytecode and inspection"], "author": ["Alessandro Molina"], "description": ["Python is an interpreted development language with powerful introspection features, up to allow accesso to the byte code itself to see what the virtual machine is going to do. Reaching down to byte code or low level inspection is usually a very uncommon need and it\u2019s usually only involved in debugging or understanding the interpreter internals, but it can be a powerful tool to check that third parties code that (or the code we will write ourselves in the future) sticks to some protocols or best practices that are supposed to be in place.", "Most of the needs for this checks are usually performed at execution time or through techniques like metaclasses and monkeypatching of third parties code, but in some cases it would be possible to inadvertently skip those checks or work them around, while verifying the resulting byte code allows us to check what\u2019s really going to be executed and enforce the required constraints."], "date": ["Monday 10 July"], "tags": ["Software Design", "Type-Hinting", "Documentation", "Compiler and Interpreters", "Tooling"]},
{"title": ["Programming in Parallel with Threads "], "author": ["Mike M\u00fcller"], "description": ["Threads are typically not the way to take advantage of multiple CPUs for CPU-bound problems. The Global Interpreter Lock (GIL) allows the use of only one CPU at the time when using threads. However, the GIL is released for IO task.", "The use case is a scientific simulation model that has to run 18,000 different simulations. The input data for these simulations need to be extracted from a common database, re-assembled and translated into several input files per simulation. After each simulation that is run with an external, standalone executable, the output data needs to be gathered and rearranged in a output database.", "The implementation scaled up to 50 threads. On a eight-core machine more than 90 % usage of all CPUs could be achieved, bringing the total run time down to about two hours from about 15 hours.", "Depending on the use case, threading can help to speedup a program and even take advantage of multiple CPUs. This talk presents such a use case. The approach can be translated to problems from other domains if the sub-tasks can be turned into IO tasks.", "Asynchronous programming could have been used here. However using a thread per task and using class that represents a task, is likely conceptually simpler for programmers not used to asynchronous programming."], "date": ["Tuesday 11 July"], "tags": ["Performance", "Developing with Python", "Multi-Threading", "Use Case", "Multi-Processing"]},
{"title": ["PostgreSQL and Python, a match made in heaven"], "author": ["Giulio Calacoci"], "description": ["This talk is about a love story. \nThe perfect love between PostgreSQL and Python.\nPostgreSQL is the default database choice for many Python developers, because it is robust, stable and open source.\nIn 2ndQuadrant, we breathe PostgreSQL and we love python too, using it as much as possible for internal and external open source projects. We want to share our love for python and PostgreSQL and how they work together. So let us tell you a real love story!"], "date": ["Tuesday 11 July"], "tags": ["PostgreSQL", "Open-Source"]},
{"title": ["Practical Debugging - Tips, Tricks and Ways to think"], "author": ["Radoslav Georgiev"], "description": ["When we write code, oftentimes things are not working as expected. We followed the tutorial and yet we got an error. We introduce a new feature but something else broke. ", "Having to deal with bugs is inevitable. Trying to \u201cdebug\u201d what happened or what caused the problem can be really frustrating and timewasting.", "The aim of this talk is go give ways to think & steps to take when we are faced with the process of debugging.", "The language for the examples is going to be Python & the tools used - from the python ecosystem.", "The talk will be practical, with a lot of real-world examples.", "The goal is to cover the following scenarios by showing different ways to approch the problem:", "We will be talking about critical changes, binary search, problem isolation, interactive debuggers, printing, testing, greping and other interesting things."], "date": ["Friday 14 July"], "tags": ["Best Practice", "Debugging", "Testing", "failures/mistakes", "Use Case"]},
{"title": ["PostgreSQL - The Database for Industry 4.0  and IOT"], "author": ["Harald Armin Massa"], "description": ["Industry 4.0 - the current trend to make more use of data technology\nand analysis in manufactring. ", "IOT - The Internet of Things, where many \u201cthings\u201d currently just loosing their information will transfer and store them within central systems.\nThere are aspects of those trends most do agree on: \nThere will be orders of magnitude more data to store and analyze. \nMore agents will need to connect and interact with databases.\nThis talk will explore what makes PostgreSQL an excellent candidate to be the database for \nmanaging all that data. Strengths in development,  culture and community, extensibility and robustnest will be presented.\nSelected features of current Version 9.6 and the soon-to-be-released PostgreSQL Version 10 will be discussed for their value in those trends. There will be an explanation of their technical realisation, and special pointers how to use those features from PostgreSQL."], "date": ["Wednesday 12 July"], "tags": ["Best Practice", "Analytics", "Data", "Big Data", "Business"]},
{"title": ["Physical computing with Raspberry Pi and Python"], "author": ["Ben Nuttall"], "description": ["The Raspberry Pi Foundation is working to put the power of digital making in the hands of people all over the world, and is well known for its series of small, cheap single board computers.", "The Raspberry Pi runs a well supported Linux distro based on Debian, which ships with a variety of programming tools and educational software. Python is the main supported language on the platform, used in many educational resources, and many Python libraries exist for making the most of the Pi platform with other devices.", "I will cover:"], "date": ["Friday 14 July"], "tags": ["Internet of Things (IoT)", "Raspberry PI", "Education", "Hardware/IoT Track", "Community"]},
{"title": ["Pandas - not just for data scientists"], "author": ["Uzi Halaby Senerman"], "description": ["This is not a tutorial. It\u2019s an attempt to expose non data scientists experienced pythonistas to the powerful pandas library. Most of python developers don\u2019t use pandas (either because they never heard of it, felt that it\u2019s a too steep learning curve or never thought that it will be useful for them). I intend to talk about python performance limitations and show how pandas can be used to overcome some of these limitations. The talk will be accompanied by a live Jupiter Notebook session that will demonstrate a typical use of pandas."], "date": ["Friday 14 July"], "tags": ["Performance", "Data Science", "Jupyter/iPython"]},
{"title": ["Overcoming Cognitive Bias "], "author": ["Anna Ravenscroft"], "description": ["Starting with a brief description of how built-in mechanisms in our brains lead to cognitive bias, the talk will address how a variety of cognitive biases manifest in the Python and tech communities, and how to overcome them."], "date": ["Friday 14 July"], "tags": ["Communication", "Community"]},
{"title": ["Optimizing queries for not so big data in PostgreSQL"], "author": ["Stephanie Mifsud"], "description": ["Hotjar\u2019s user recordings count above 400 million, with supporting tables containing 4.5 billion records. This 5TB data fits nicely into Postgres and doesn\u2019t quite merit the full big data suite of tools. However, at the rate of 1000 recordings per minute, and overall request rate of 750K per minute, the penalty of inefficient queries and updates can quickly cause nasty performance spikes if not thought out well.\nThis talk is about the challenges we faced at the lower end of big data: the good decisions which helped keep our application running and other lessons we had to learn the hard way.", "Considerations for Database Design", "Design entities for the domain", "Balance normalization with performance", "Sharding later has big migration costs, consider designing for this early", "Speak to the database from your Web Application", "Why use ORMs and at which level of abstraction?", "Stored Procedures are fast, should we have more of those?", "Bringing data closer to the application", "Materialize Views", "Defer aggregations", "Application Level Caching", "Handling Operational Troubles", "Explain(analyze, buffers) is your friend", "Detect and manage Index Bloat", "Reduce Deadlocks", "Reducing Impact of Background Maintenance Jobs", "Keep impact on database low with cursors and streaming", "Plan data retention policies early, so cleaning can be an ongoing process"], "date": ["Thursday 13 July"], "tags": ["python", "Performance", "SQL Alchemy", "PostgreSQL", "Data"]},
{"title": ["Plone: where is it today and where is it going"], "author": ["Alessandro Pisa"], "description": ["Plone", " CMS, first released in 2001, is now close to its 5.1 version.", "Did you know that the ", "2016 Olympics web site", " was built with ", "Plone", "?\nDid you know that many ", "huge organizations", " that care about data protection use ", "Plone", "?", "There are good reason why ", "Plone", " is such a successful Python project, but probably the most important is that ", "Plone", " does take into account the security of your data very seriously.", "Nowadays, information and data play a crucial role, sometimes they are the more important asset of a company.\nThey have to be in a digital form and accessible from every device, it is no surprise that they are exposed to a growing threat.", "During the talk I will review ", "Plone", " built in security protection systems.\nIn addition I will review some of its features, like the ability to create, without writing a line of code, custom content types, to change documents workflows, to organize your documents in a snap.", "I will also talk about the foreseen new features that will be soon in ", "Plone", " and I will present ", "Castle CMS", " and ", "Quaive", ", some important projects built on top of ", "Plone", " that are currently under the spotlight."], "date": ["Friday 14 July"], "tags": ["Web Track", "Plone"]},
{"title": ["Optimization using Flow Networks in NetworkX."], "author": ["Rishabh Daal , IMD, Maths & Computing, IIT (BHU), Varanasi (INDIA)"], "description": ["Prerequisite:", " Basic Programming.", "Goals:", "Introduction to NetworkX Library", "Using NetworkX for optimization Techniques using Network Flow.", "This talk can be divided into three major parts.", "Introduction to NetworkX.", "Basic Introduction to Network Flow.", "The solution of ", "Project selection problem", " using Network Flow and NetworkX.", "1. Introduction to NetworkX.", "What is NetwrokX?", "Creating a graph in NetworkX.", "Some awesome methods.", "Algorithms available.", "Using with other libraries like Pandas.", "2. Basic Introduction to Network Flow.", "Origin of Problem: Mincut of soviet union railway network. ", "A quick explanation of Max-Flow and min-cut problem.", "Max-flow = min-cut", "How to reduce problems for Network Flow optimization?", "Model the problem for using NetworkX", "3. Solution of Project selection Problem using NetworkX.", "Problem statement.", "How can we solve it using max flow / min-cut?", "Modeling in form of graph.", "Proof of correctness", "Representing the graph in NetworkX", "Finding answer in NetworkX"], "date": ["Thursday 13 July"], "tags": ["Algorithms", "Case Study", "Education", "Programming", "Teaching"]},
{"title": ["OpenAPI development with Python"], "author": ["Takuro Wada"], "description": ["After this session, audiences will get\n- Basic knowledge of OpenAPI (Swagger)\n- Ecosystem of OpenAPI(Swagger) and tools related to Python and knowledge to make use of them in their own projects ", "(1) This talk is for:\n- Developers who are creating or using API services such as web applications, mobile applications and all other kinds of applications", "(2) Audience will be expected to have (prerequisite):\n- Basic knowledge of development with API (REST and others) \n- Basic knowledge of Python"], "date": ["Tuesday 11 July"], "tags": ["Web Track", "Documentation", "RESTful", "Use Case", "APIs"]},
{"title": ["MSS - Software for planning research aircraft missions"], "author": ["Reimar Bauer"], "description": ["Scientific aircraft research flights have to be planned beforehand.", " For that it is necessary to have model forecasts of relevant quantities such as meteorological parameters, chemical composition or particle information to guide the aircraft to the location of interest. Typically, many scientific instruments on board those aircrafts used to investigate e.g. the chemical composition of the air in order to get new insights often with the involvement of different science groups.", "For discussion of the possibilites of the research flights, the ", "Mission Support System", " (MSS) was developed. This software helps to review a big amount of metereological and model data by viewing the forecasted parameters of interest along possible regions of a proposed flight path. Data and possible flight paths can be displayed on a hoizontal view (map projection) or on a vertical view (along the proposed flight path). Flight paths can be constructed and modified on these views. Exchange through a waypoint table is also possible.", "The talk gives a brief insight into the MSS software development current state.", "We are using the OWS interface standard. https://geopython.github.io/OWSLib/ MSS is a client/server application. The QT client interacts with a paste wsgi server. The software is available for all platforms on conda-forge."], "date": ["Wednesday 12 July"], "tags": ["PyQt", "Visualization", "Data Science", "Open-Source", "Community"]},
{"title": ["Neat Analytics with Pandas Indexes"], "author": ["Alexander Hendorf"], "description": ["Pandas is the Swiss-Multipurpose Knife for Data Analysis in Python. In this talk we will look deeper into how to gain productivity utilising Pandas powerful indexing and make advanced analytics a piece of cake.", "We will cover:"], "date": ["Wednesday 12 July"], "tags": ["Scientific Libraries (Numpy/Pandas/SciKit/...)", "Data Science", "Analytics"]},
{"title": ["Modelling pollution from traffic, using Smartphone data and Python"], "author": ["Anders Lehmann"], "description": ["The talk presents results from my PhD project on models for transportation related pollution.", "Pollution from personal transport in Cities is a big and growing problem. By monitoring the flow, and congestion in the transport system two goals can be achieved. First, the adherence to agreed limit values (or breaking said limits) can be followed and used to decrease health effects of local pollution hotspots. Secondly, monitoring of the total emission of climate forcing gases from transportation, is important for designing climate mitigation actions. ", "Python is used in combination with other tools to convert sensor data from smartphones, into pollution concentrations in urban settings. To mitigate the lack of complete data coverage, the missing data is simulated by a traffic model, to locate congestion and model the traffic related pollution concentration."], "date": ["Friday 14 July"], "tags": ["MongoDB", "Science", "PostgreSQL", "Case Study"]},
{"title": ["Network visualization and automation"], "author": ["Antoine Fourmy"], "description": ["Network automation and orchestration is the latest phase in the evolution of IP and optical networks.\nOver the last few years, network engineers have created a variety of libraries and softwares to help them with the management, configuration and automation of huge networks made of hundreds of thousands of network devices (e.g. routers, switches, antenna\u2026).", "In this talk, I will introduce NetDim, a vendor-neutral software for network modeling and automation based on the standard Python library for GUI programming: tkinter.", "I will start the presentation with an introduction to network visualization, and show how tkinter can be used to implement graph drawing algorithms, as well as a full-on Geographic Information System (GIS), allowing one to place network devices on a world map at their GPS coordinates.", "I will then discuss the whys and wherefores of network automation, and show how to automatically generate and push scripts to a network device via SSH or Telnet.", "More details about NetDim on github (", "https://github.com/mintoo/NetDim", ") and on this website (", "http://netdim.fr", ")"], "date": ["Thursday 13 July"], "tags": ["Configuration Management (Ansible/Fabric/Chef/...)", "Visualization", "Infrastructure", "GEO and GIS", "Open-Source"]},
{"title": ["Linespots: Predicting Bugs in your Code"], "author": ["Maximilian Scholz"], "description": ["In times of increased awareness of technical debts, reviewing and auditing code becomes more important. The main problem with code review is the amount of time that is being spent searching the needle in the haystack. You just don\u2019t know what you are looking for and where to find it. One possible solution to the problem to the idea of bug prediction. If we could somehow know where bugs are in our code, focusing reviewing efforts on that area should, in theory, increase the effectiveness of our review. More bugs should be uncovered while less time is spent reviewing.\nThis is what Linespots tries to offer. It is an algorithm developed during my thesis that analyses a project\u2019s history and calculates a probability value for each line of code in the project, representing the likeliness of a bug existing in that line.\nUsing the probabilities, reviewers can focus on the areas that are at a higher risk of containing bugs and spend less time on robust code.\nThe research done so far showed, that by analyzing 0.5% lines of code with the highest risk values in a project, an average of 50% of the bugs fixed in the next 150 commits were correctly predicted by Linespots. This is an improvement by factor 10 compared to Bugspots, an algorithm developed at Google, which Linespots is based upon.", "Outline:"], "date": ["Friday 14 July"], "tags": ["Science", "Algorithms", "Clean Code", "Code Analysis", "Static Analysis"]},
{"title": ["Mock it right! A beginner\u2019s guide to world of tests and mocks."], "author": ["Maciej Pola\u0144czyk"], "description": ["The main goal of this presentation is to make beginner audience familiar with mocks and patches but there is a chance that more experienced ones will also find something new for themselves. Presentation shows the common use cases when developing unit tests. I will say what are the best practices when working with mocks and patches and what kind of mistakes, done by many developers, may be avoided so the dragons will not come. During this presentation I will prepare mock-it-o drink as a prize.", "First, I will briefly introduce an audience with the topic of unit testing. Then I will show a simple code which will be tested during the presentation. It covers all common use cases of writing unit tests which are usage of mocks, patches and their side effects. In the end I will show a template of unit test which will be extended according to our needs.", "Next, I will say what is a mock, and what are the benefits of using it. Why it is better than any Dummy class implemented for purpose of unit tests and, what is the most important and sometimes forgotten by experienced developers, how to create the best mock, which involves using spec_set and spec to protect us from dragons when interface of mocked class changes.", "Last but not least part of my presentation will be dedicated to patches. I will explain when and how patches should be used (how to use side_effect, patch properties and environment variables). Finally, I will say how to avoid common mistakes when working with patches."], "date": ["Monday 10 July"], "tags": ["Best Practice", "Developing with Python", "Testing"]},
{"title": ["Mary had a little lambda"], "author": ["Anjana Vakil"], "description": ["Mary had a little lambda,\na function pure as snow.\nAnd for every program that Mary wrote,\nthe lambda was all she needed to know.", "Python\u2019s ", "lambda", ", a tiny anonymous function, can be useful in a pinch when you\u2019re feeling too lazy to type that extra ", "d", "-", "e", "-", "f", ". But did you know that behind this little lambda is actually one of the most powerful & elegant abstractions in the history of computer science? ", "The lambda calculus, dating back to the work of lambda shepherd Alonzo Church in the 1930\u2019s, lets us represent our programs - all their logic and data - as pure, anonymous functions, using nothing but (a whole lot of) ", "lambda", ". Let\u2019s take it for a spin and see what we can create: booleans and conditionals, integers, arithmetical operators, data structures\u2026 you name it. With some determination, and a little squinting, we might even see lambda do the impossible: reconcile object-oriented and functional programming. You heard it right: lambda can do it all!", "Join me as we explore its astounding computational power, and walk away with a deeper respect and admiration for the almighty little ", "lambda", "."], "date": ["Wednesday 12 July"], "tags": ["Functional Programming", "The Answer to Life the Universe and Everything Else"]},
{"title": ["Meson: compiling the world with Python"], "author": ["Jussi Pakkanen"], "description": ["Compiling source code into libraries and executables has always been problematic, especially for cross platform projects. Typical problems in existing build systems include slow build times, undecipherable syntax, lack of support for cross compilation and so on. Some people choose to not use a build system at all but instead just write a one-off Makefile, which will usually work fine on their machine and nowhere else. All this makes software development slower than it needs to be.", "The ", "Meson build system", " is a new build system designed from the ground up to provide a solution for these (and other) problems. It is implemented in Python 3 and provides a simple, non-Turing complete DSL for describing the build. The project provides built-in support for common tasks such as documentation generation, building Qt apps and Python extension modules. Meson is currently seeing a lot of uptake in the Free software world with big projects such as GStreamer, parts of GNOME, Wayland and even the X server either transitioning, or very strongly considering the transition to Meson. ", "In this talk we go over the design of Meson, how to use it for new and existing projects and the benefits this brings, including faster compiles, less time wasted debugging the build system environment and easy access to modern software development tools and practices."], "date": ["Monday 10 July"], "tags": ["Development", "All Other Programming Languages", "Tooling", "Cross-Platform-Development", "Open-Source"]},
{"title": ["Large-scale data extraction, structuring and matching using Python and Spark"], "author": ["Deep Kayal"], "description": ["Motivation -", " Matching data collections with the aim to augment and integrate the information for any available data point that lies in two or more of these collections, is a problem that nowadays arises often. Notable examples of such data points are scientific publications for which metadata and data are kept in various repositories, and users\u2019 profiles, whose metadata and data exist in several social networks or platforms.", "In our case, collections were as follows: (1) A large dump of compressed data files on s3 containing archives in the form of zips, tars, bzips and gzips, which were expected to contain published papers in the form of xmls and pdfs, amongst other files, and (2) A large store of xmls in the form of xmls, some of which are to be matched to Collection 1.", "Problem Statement -", " The problems, then, are: (1) How to best unzip the compressed archives and extract the relevant files? (2) How to extract meta-information from the xml or pdf files? (3) How to match the meta-information from the two different collections? And all of these must be done in a big-data environment.", "Presentation \u2013", "\n", "The presentation will describe the solution process and the use of python and Spark in the large-scale unzipping and extraction of files from archives, and how metadata was then extracted from the files to perform the matches on."], "date": ["Friday 14 July"], "tags": ["Analytics", "Big Data"]},
{"title": ["Lessons learnt building a medical chatbot in Python"], "author": ["Wilhelm Van Der Walt"], "description": ["\u201cTo put an accessible and affordable health service in the hands of every person on earth.\u201d", "Thats our mission at babylon. Leveraging the powers of AI, python and micro services we took a step towards that vision by building a medical chatbot that we shipped in November last year. In this talk I would like to share with you all the things we learnt in the process.", "This talk is our story. Its a story that starts with an idea and meanders through the dark and dangerous land of things like Graph databases, machine learning and async programming in python. The story is far from over, but we have come to a point where we would like to reflect and share with the community all that we have learnt.", "More specifically I will cover:\n- Architecture decisions we made and why we made them\n- lessons learnt doing async in python at scale\n- testing chatbots\n- clinical governance and safety (literally 2 sentences, I promise)\n- The drawbacks of REST\n- Why I am glad we did most of it in Python", "And then of course some time for questions at the end :)"], "date": ["Friday 14 July"], "tags": ["failures/mistakes", "RESTful", "Graph Databases", "Machine-Learning", "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)"]},
{"title": ["Leveraging consistent hashing in your python applications"], "author": ["Alexys Jacob"], "description": ["While ", "consistent hashing", " is largely known and adopted in the NoSQL database clusters to solve data distribution and data access reliability, it is less known and used by the typical developers.", "This talk will introduce you to consistent hashing and the problems it solves while going through a ", "practical use case in a python application", ".", "We will start from its standalone design and scale it out to an optimized clustered version thanks to consistent hashing."], "date": ["Tuesday 11 July"], "tags": ["Software Design", "Scaling", "Distributed Systems", "Use Case"]},
{"title": ["Lessons learned in X years of parallel programming"], "author": ["Michele Simionato"], "description": ["There is a lot more to parallel programming in Python than\n", "multiprocessing.Pool().map", ". In this talk I will share some\nhard-learned knowledge gained in several years of parallel\nprogramming. Covered topics will include performance, ways to measure\nthe performance, memory occupation, data transfer and ways to reduce\nthe data transfer, how to debug parallel programs and useful\nlibraries. I will give some practical examples, both in enterprise\nprogramming (importing CSV files in a database) and in scientific\nprogramming (numerical simulations). The initial part of the talk\nwill be pedagogical, advocating the convenience of parallel programming\nin the small (i.e. in single machine environment); the second part will\nbe more advanced and will touch a few things to know when writing\nparallel programs for medium-sized clusters.\nI will also briefly discuss the compatibility layer that we have developed at GEM\nto be independent from the underlying parallelization technology (multiprocessing,\nconcurrent.futures, celery, ipyparallel, grid engine\u2026)."], "date": ["Friday 14 July"], "tags": ["Best Practice", "Algorithms", "failures/mistakes"]},
{"title": ["Introduction to TensorFlow"], "author": ["Alejandro Solano"], "description": ["Deep learning is at its peak, with scholars and startups releasing new amazing applications every other week, and TensorFlow is the main tool to work with it. However, Tensorflow it\u2019s not an easy-access library for beginners in the field. In this talk, we will cover the explanation of core concepts of deep learning and TensorFlow totally from scratch, using simple examples and friendly visualizations.", "The talk will go through the next topics:", "\u2022 Why deep learning and what is it?", "\u2022 The main tool for deep learning: TensorFlow", "\u2022 Installation of TensorFlow", "\u2022 Core concepts of TensorFlow: Graph and Session", "\u2022 Hello world!", "\u2022 Step by step example: learning how to sum", "\u2022 Core concepts of Deep Learning: Neural network", "\u2022 Core concepts of Deep Learning: Loss function and Gradient descent", "By the end of this talk, the hope is that you will have gained the basic concepts involving deep learning and that you could build and run your own neural networks using TensorFlow."], "date": ["Friday 14 July"], "tags": ["Deep Learning", "Data Science", "Jupyter/iPython", "Machine-Learning"]},
{"title": ["Introduction to Nonparametric Bayesian Models"], "author": ["Omar Guti\u00e9rrez"], "description": ["When we use ", "supervised machine learning", " techniques we need to specify the number of parameters that our model will need to represent the data (number of clusters, number of Gaussians, etc.).", "Somewhat,  we are making our model inflexible.  In this talk we will study the nonparametric models, in specific, Bayesian Nonparametric Models (BNP) whose main purpose is getting more flexible models since that in BNP the parameters can be automatically inferred by the model.", "The outline is the next:"], "date": ["Thursday 13 July"], "tags": ["Data Science", "Machine-Learning"]},
{"title": ["Kajiki, the fast and validated template engine you were looking for"], "author": ["Alessandro Molina"], "description": ["Being dissatisfied with some of the constraints and complex usage of Genshi, the TurboGears2 team started working on an alternative that could solve Genshi speed issues, complex inheritance system and be backward compatible with genshi templates. This is a talk about what lead to the creation of the Kajiki template engine and what\u2019s particular about it. ", "The talk will cover: \n- Comparison on the major template engines available in python to showcase what\u2019s special in Kajiki (validated, xml based) what was special in Genshi (also lazy evaluated)\n- What\u2019s a validated template engine and why it\u2019s good to have one.\n- How Kajiki works, showcase kajiki syntax, it\u2019s performances and how to use it in any python project.\n- Why Kajiki is fast, code generation applied and how to write a code generation template engine like Kajiki and Jinja2 (showcase a simple 50 lines of code template engine that uses code generation)."], "date": ["Monday 10 July"], "tags": ["Web Track", "Templating"]},
{"title": ["Jupyter notebooks for teaching and learning"], "author": ["Thomas Kluyver"], "description": ["The Jupyter Notebook (formerly IPython Notebook) has been used to support learning in different scenarios, including taught courses, self-directed learning and reference material such as software documentation. People have used it to learn how to program, and to learn about diverse subjects where computer code is important to human understanding. The aim of this talk is to dive into where and how notebooks can be used most effectively for education.", "I will first describe notebook-based learning material created by a variety of people for different purposes, deliberately taking a broad definition of \u2018education\u2019, along with my own experiences using notebooks to teach Software Carpentry sessions and conference tutorials. I\u2019ll pull out both strengths and limitations of notebooks as an educational tool to explore how they can be used most effectively.", "In the second part of the talk, I\u2019ll talk about several extra software tools which can make the notebook more valuable in educational settings, including Jupyterhub, with which a teacher can provide notebook servers for a group of students, nbgrader, which allows notebooks to be used as assignments, and cite2c, which can insert academic citations into notebooks. I\u2019ll also touch on commercial offerings integrating the notebook, such as SageMathCloud."], "date": ["Monday 10 July"], "tags": ["Science", "Education", "Jupyter/iPython Notebook", "All Other Programming Languages", "Educational Track"]},
{"title": ["Inspiring all children, a journey: diversity and computing education"], "author": ["C\u00e9line Boudier"], "description": ["Do you remember when you wrote your first line of code? Do you remember who inspired you  to become who you are when you were a child? But also, what the challenges might have been? ", "\nI remember when I was a little girl with a strong interest in a lot of things, including science, and what and who helped me pursue an education and a career in science and technology.\nHowever, my journey in the industry from France to the UK, from software engineer student to team lead, from language processing to robots to online coding games, made me understand there is still a lot of work to be done in terms of diversity.\nI will talk about my own experiences, what shaped my dreams and inspirations, the reality check, and the project I\u2019m now working on Code For Life.\nCode For Life is an initiative started at Ocado Technology in 2014, in response to the UK putting computing in the primary school curriculum. It comprises a small full time team and also a large group of dedicated volunteers who focus on creating free, open source games, mostly web games developed with Django, to teach all children how to program. We are all dedicated to inspire all children and give them the tools and opportunities they deserve. "], "date": ["Tuesday 11 July"], "tags": ["Educational Track", "Education", "Diversity", "Open-Source", "Game-Development"]},
{"title": ["Infrastructure design patterns with Python, Buildbot, and Linux Containers"], "author": ["David Liu"], "description": ["In today\u2019s world of fast-paced development, infrastructure can get left behind quickly, leading to a potential increase in technical debt. Buildbot is normally known to be a continuous integration (CI) framework built in Python, but can be refashioned to solve infrastructure design patterns that arise in enterprise or production and deployment situations. Using Python and native Buildbot components paired with Linux Containers, patterns such as license management, resource allocation, load balancing, and enterprise application deployment can be architected quickly with room for expansion as one\u2019s needs grow.", "Learn how to move past the CI mindset and construct infrastructure needs with Buildbot and popular Linux Containers such as Docker and ClearContainers. Attendees will learn the best known methods of configuring Buildbot in non-CI implementations, and how to utilize the framework components for future needs. "], "date": ["Wednesday 12 July"], "tags": ["Developing with Python", "Docker", "Infrastructure", "DevOps general", "Distributed Systems"]},
{"title": [" Inspect (Or Gadget)"], "author": ["Hugues Lerebours"], "description": ["Introspection is often seen as a bad coding practice and as\nsuch a gadget.\nNevertheless, the Python Standard Library provides different tools\n(among them the \u2018inspect\u2019 library) to easily identify a generator,\nrecover the source code of a function or get a function signature.\nWe propose to spend 1/2 hour to dig into what introspection has to offer\nto developers, to see what tools are available, what you can get out of\nthem and some useful use cases that we met in our practice at Criteo."], "date": ["Thursday 13 July"], "tags": ["Track", "Business"]},
{"title": ["Inside Airbnb: Visualizing data that includes geographic locations"], "author": ["Guillem Duran Ballester"], "description": ["This talk is about creating visualizations for data that includes geographical locations. We will be using data from InsideAirbnb.com to represent the current status of Airbnb listings in Mallorca. ", "We will show practical examples of different visualizations of geographical data:", "First, we will start with how to use bokeh to overlay data on google maps. We will use examples to show how the GMapPlot interface works. We will briefly explain how to use it,  and what are its limitations. ", "Then, we will talk about plotting shapefiles with holoviews. Shapefiles are files that describe the shape of maps. We will explain how to deal with shapefiles. For instance, we will describe how we use shapefiles to group geographical data by regions. We will also briefly explain how holoviews works and how it can be used to display geographical data.", "Moreover, we will talk about using datashader and geoviews to visualize big data. First, we will briefly introduce datashader, bin based plotting and the datashader Pipeline. After that, we will show how to create plots with geoviews: how is the Interface, a few use cases and some examples. Finally, we will move to plotting big data on interactive maps.", "Eventually we will finish with dynamic maps for visualizing time series: we will explain how do we do it and show some examples of how to build an interactive dashboard for visualizing geographical data that varies over time."], "date": ["Thursday 13 July"], "tags": ["Visualization", "Data Science", "Big Data", "Jupyter/iPython", "Case Study"]},
{"title": ["Improve your developer's toolset"], "author": ["Pawe\u0142 Lewtak"], "description": ["For Python development, we mainly focus on IDE, browser and sometimes a command line. I want to focus on command line tools which seem to be a bit forgotten these days. Let me show a few tools I\u2019m using on daily basis and how they helped me become more productive. I\u2019ll prove it\u2019s possible to start up a new environment from scratch that feels like $HOME. Finally, I want to convince you how important it is to constantly challenge yourself and your tools, how useful is a custom toolbox tailored to you."], "date": ["Tuesday 11 July"], "tags": ["Development", "Tooling", "Linux"]},
{"title": ["Infrastructure as Python Code: Run your Services on Microsoft Azure"], "author": ["Peter Hoffmann"], "description": ["Using Infrastructure-as-Code principles with configuration through machine processable definition files in combination with the adoption of cloud computing provides faster feedback cycles in development/testing and less risk in deployment to production. The ", "Microsoft Azure Cloud", " allows different ways to provision, deploy and run your python  service:", "Each of the alternatives has different strengths and drawbacks. Presenting our learnings from migrating our infrastructure into the Azrue Cloud will help to avoid common pitfalls and show deployment patterns that will ease the live of devops."], "date": ["Tuesday 11 July"], "tags": ["Public Cloud (AWS/Google/...)", "python", "Deployment/Continuous Integration and Delivery"]},
{"title": ["Identity management, single sign-on and certificates with FreeIPA"], "author": ["Christian Heimes"], "description": ["Authentication, authorization and public key infrastructure are complicated and hard to get right, yet crucial for every infrastructure. Manifold user databases in each application as well as ad-hoc self-signed TLS/SSL certificates don\u2019t scale and are hard to administrate. Users don\u2019t want to remember a password for each service, admins prefer a centralized PKI, and developers struggle with correct handling of password.", "FreeIPA is an Open Source, Python-based identity management solution. It is much more than a simple user database. FreeIPA combines multiple mature products under an easy-to-use installer, command line and web interface: 389-DS LDAP server, MIT Kerberos, Dogtag PKI certificate system, BIND DNS with DNSSEC, SSSD, certmonger and more. It provides identities for users, services and machines with single sign-on (optionally 2FA) and role or host based ACL. Keycloak and Ipsilon IdP can be integrated to offer OpenIDC or SAML. Mutual trust with Active Directory is possible, too.", "Installation of a FreeIPA server and integration with a WSGI application is much simpler than you might think.  At the end of my talk you will know how to deploy a FreeIPA server with just one command, how to add replicas for redundancy, how to authenticate users and access user data like name, email and group membership without adding a single line of Kerberos or LDAP code to your application, and how to issue TLS certificates with auto-renewal and OCSP."], "date": ["Thursday 13 July"], "tags": ["Authentication", "Infrastructure", "Web Track"]},
{"title": ["I don't like Mondays-what I learned about data engineering after 2 years on call"], "author": ["Daniele Rapati"], "description": ["The first weekend of October 2015 my company bought an advert during the first episode of \u201cDownton Abbey\u201d on Sunday evening. \nIt was so successful that the website went down for half an hour.\nWe wanted to look at the analytics and the data to estimate the impact.\nBut they were having a very hard weekend too: the replica of the production database we used was unreachable and the only person who knew how to fix it was on a plane.\nMonday really was a memorable day.", "This session is about sharing some life experience and best practices around Data Engineering.\nAttendants should have some previous understanding of data and tech in business.\nAttendants should leave with an understanding of on-call practices and with some quick win actions to take.", "What does it mean to be on call?", "How do you make sure that the phone rings as little as possible?", "Fixing versus Root Cause Analysis.", "Systems break at junctures.", "Especially if the juncture is with a third party.", "Why and when is it worth reacting to errors as soon as they happen?", "External Services.", "Increasing Business Trust.", "Allowing others to build on solid ground.", "How do you make sure the phone rings when it should?", "Alerting tools: emails, chat, specialised applications like PagerDuty, OpsGenie and Twilio.", "Monitoring systems.", "Monitoring data (Data Quality) as a continuous early warning system."], "date": ["Friday 14 July"], "tags": ["Business Track", "Life", "Data", "failures/mistakes"]},
{"title": ["How to use pandas the wrong way"], "author": ["Pietro Battiston"], "description": ["UPDATE: slides and materials", " can be found at ", "http://pietrobattiston.it/python:pycon#europython_rimini_july_2017", "The pandas library represents a very efficient and convenient tool for data manipulation, but sometimes hides unexpected pitfalls which can arise in various and sometimes unintelligible ways.", "By briefly referring to some aspects of the implementation, I will review specific situations in which a change of approach can make code based on pandas more robust, or more performant.", "Some examples:", "inefficient indexing", "multiple dtypes and efficiency", "implicit type casting", "HDF5 storage overhead", "GroupBy.apply()", "\u2026 when you don\u2019t actually need it"], "date": ["Wednesday 12 July"], "tags": ["Science", "Science Track", "Data", "Data Science", "Scientific Libraries (Numpy/Pandas/SciKit/...)"]},
{"title": ["How to make money with your Python Open-Source Project"], "author": ["Max Tepkeev"], "description": ["Developers create new open-source projects every day. As the project becomes popular they have to invest more and more time into it\u2019s development and of course at some point a question arises: \u201cHow can I make some money with my project ?\u201d", "In this talk we will try to answer this question. We will talk about different models of making money, their pros and cons. We will concentrate on Python Open-Source projects mostly and try to answer the following questions:", "After this talk you will have a clear understanding of how you can make money with your project. What your next steps should be and how you can get the actual profit while still continuing making your customers happy."], "date": ["Wednesday 12 July"], "tags": ["Business Track", "Python general", "Open-Source", "Business", "General"]},
{"title": ["How to apply deep learning for 3D object"], "author": ["Masaya Ohgushi"], "description": ["I talk about the \u201cHow to achieve the 3D object recognition accuracy 80%(40 category) for 3month \"", "Deep Learning  is the good technique for image recognition and speech recognition.\nAnd it apply the other field.\nMany people try to apply the Deep Learning, but it is difficult to make a result.", "In my situation, I have enough knowledge about the 3D object and label data.\nI\u2019ll talk about the how to achieve the  80 % (40 category)", "In My approach", "I hope to people who want to apply Deep Learning for the 3D model"], "date": ["Thursday 13 July"], "tags": ["Deep Learning", "Machine-Learning"]},
{"title": ["How SAP is using Python to test its database SAP HANA"], "author": ["Christoph Heer"], "description": ["SAP operates one of the largest test infrastructure to test its in-memory database SAP HANA. The infrastructure provides different services like continues integration, code coverage and code linting for a huge C++ project with Python test coding. These services are essential for the development teams and quality specialists. Without these services developing and shipping of new SAP HANA version wouldn\u2019t be possible.\nIn 2010, we started with a single Jenkins master with ten nodes. But to keep our testing time acceptable for the growing number of developers we had to scale up and that led to multiple different scaling challenges. The current test infrastructure is powered by more than thousand physical servers. Scaling of the infrastructure was only possible with custom optimizations like improved scheduling, expressive test configuration and robust tooling implemented in our favorite language Python. With the flexibility and power of Python it\u2019s possible for developers to implement complex test scenarios to verify features and mitigate regressions. On infrastructure side, it has been easier to extend, optimize and adapt the infrastructure for new requirements like different CPU architectures and newer Operating systems versions.", "This talk provides insights and stories how we scaled and improved our test infrastructure and how new technologies like Linux Containers can improve automated testing and software quality assurance."], "date": ["Tuesday 11 July"], "tags": ["Operations", "Case Study", "System Architecture", "Testing", "Distributed Systems"]},
{"title": ["How to build up a Python community and empower women"], "author": ["Kristi Progri"], "description": ["In 2012 not a lot of people were interested in Python in the relatively small city of Tirana, the capital of Albania. Even fewer girls were interested in Python. During (Jona Azizaj and me) our talk we will share the story of how we, a small but dedicated group of people, jump started the community in a small country like Albania and what other small cities and countries should avoid during their first steps in developing a Python community in similar conditions. Most important we will share tips and tricks on how to keep the Python spirit alive for a long time after the first enthusiastic steps, with the goal that our shared experience will help other communities to make the first steps or grow even further. Also nowadays we are witnessing that the number of girls involved in technical fields, especially development, is really low and we are going to present what as the influence on low participation of girls and the steps we should take to fix it."], "date": ["Wednesday 12 July"], "tags": ["Case Study", "Education", "Diversity", "Open-Source", "Community"]},
{"title": ["How Facebook uses Python to build (and operate) datacenters at scale"], "author": ["Nikola \u0110ipanov"], "description": ["With 4 datacenters on-line and more coming fast, building and operating datacenter buildings becomes a problem we need to solve at scale. At Facebook, Several teams of Production Engineers write the software that helps us do this efficiently, and we use Python\u2026 a lot.", "In this talk, I will go into some detail about only some of problems we try to solve to make sure our datacenters come online on time so that we can make sure you can connect with all your friends on Facebook, and\nkeep them humming, as efficiently as possible.", "We\u2019ll go into some detail about the awesome Python infrastructure (some of it open source), that we use to build this software, and some of the engineering practices.", "This is a talk for you if you were wondering how to track each and every strand of fiber cabling within a datacenter, or make sure we find out that the cooling system isn\u2019t really doing it\u2019s thing before actual servers catch fire from serving you live videos. "], "date": ["Tuesday 11 July"], "tags": ["Use Case", "DevOps general", "Distributed Systems", "Open-Source"]},
{"title": ["How CPython parser works, and how to make it work better"], "author": ["A. Skrobov"], "description": ["The part of CPython core that parses the Python source code is some very old and convoluted code: the time has proven its reliability, but few CPython hackers understand (or care) how it works, or even what exactly it does. There is, however, a good reason to care: for short-running scripts, the performance of CPython may easily be dominated by that of parsing the source code.", "The talk will describe the two parsers that are involved, it will explain how these two parsers build two different kinds of syntax trees, and then show how the structure of one of the trees can be amended to reduce its memory footprint threefold, with only minor changes necessary in its consumers. It will also suggest other, more invasive improvements, which can yield even better savings.", "The talk will assume fluency in C and a basic acquaintance with CPython core internals, and will give the attendees an introduction into hacking the parser, guiding their way through to the very tangible end result of reducing Python overall memory consumption by up to 30%, measured at standard micro-benchmarks."], "date": ["Wednesday 12 July"], "tags": ["Data Structures", "legacy-code", "C-Languages", "CPython", "failures/mistakes"]},
{"title": ["How Booking.com serves Deep Learning model predictions"], "author": ["Sahil Dua"], "description": ["With so many machine learning frameworks and libraries available, writing a model isn\u2019t a bottleneck anymore while putting your models in production is still a challenge.", "In this talk, you will learn how we deploy the python deep learning models in production at ", "Booking.com", ".", "Topics will include:"], "date": ["Thursday 13 July"], "tags": ["Deep Learning", "Data Science", "Infrastructure", "Predictions", "Machine-Learning"]},
{"title": ["Graph Databases: Talking about your Data Relationships with Python"], "author": ["Nicolle Cysneiros"], "description": ["Have you ever considered how many relationships you have in your virtual life? Every friend or page liked on Facebook, each connection in LinkedIn or Twitter account followed is a new relationship not only between two people, but also between their data. In Brazil only, we have 160 millions Facebook users. How can we represent and manipulate all these relationships? Graph Databases are storage systems that use graph structure (nodes and edges) to represent and store data in a semantic way.", "This talk will begin approaching the challenge in representing relationships in Relational Databases and introducing a more friendly solution using graph. The definition of Graph Database, its pros and cons and some available tools (Neo4J, OrientDB and TitanDB) will be shown during the presentation, as well as how these tools can be integrated with Python.", "Outline:", "Comparison between Graph Databases", "Comparison between Neo4J and Relational Database", "Applications"], "date": ["Friday 14 July"], "tags": ["Databases"]},
{"title": ["Hi, my name is README! - A Look at Why Docs are So Important"], "author": ["Raphael Pierzina"], "description": ["When starting a new project, as developers we usually get right into hacking things, like tinkering with libs that we would like to learn or solving a particular problem as quickly a possible. Occasionally we also decide to publish the resulting package to PyPI, so that others can use our nifty code, submit a pull request and maybe even form a community around the project.", "If you\u2019re lucky someone might find it on the front-page of PyPI or the GitHub search or maybe even Hacker News or Reddit. What happens next is on you really.  But what does that mean?", "Before jumping right to the command line and installing your package, those who are interested usually try to find out what problems the project is solving and how it can help them with their own. That\u2019s what your README file is for - it\u2019s most likely the first thing potential users read, that you control.", "A good README briefly and concisely explains what your software does, how it can be installed and what API it exposes. You also want to provide information on the requirements, the license it uses and how the project is managed. Who are you? How to get in touch to report problems and give feedback? Where can I find the Code of Conduct for this project?", "This talk is for everyone who is interested in working on open source projects and wants to know how documentation can help newcomers and more experienced users use your code and to encourage them to engage in the community."], "date": ["Wednesday 12 July"], "tags": ["Best Practice", "Documentation", "Open-Source", "Community"]},
{"title": ["Green threads in Python"], "author": ["Vinicius Pacheco"], "description": ["This talk is for general public with problems to scale. The good background for this talk is people with minimal knowledge about threads. After this talk I expect that the audience can be enable to understand multiprocessing, when use and which tools and methods are appropriate for each case. ", "Understanding threads\nIt\u2019s the first moment on the talk. Here I\u2019ll speak about the thread theory and what happen when we use threads on the OS", "Threads and multiprocess API\nI\u2019ll give simple examples about what python give us to use threads and multiprocessing perhaps with two APIs \nhttps://docs.python.org/3/library/threading.html\nhttps://docs.python.org/3.5/library/multiprocessing.html", "Understanding Green threads\nHere I\u2019ll speak about green threads theory and what happen when we use green threads on our OS", "Green thread Patterns and tools\nHere I\u2019ll show few examples with keep alive patterns, discuss about a few tools and show gevent and asyncio examples", "Parallelism x asynchronism\nI\u2019ll show the diference between parallelism and asynchronism discussing about the two theories", "Why, when and how\nIt\u2019s is the last talk moment and I\u2019ll explain the how complex is work with multiprocess showing cases like queues consume and APIs consume   "], "date": ["Wednesday 12 July"], "tags": ["Multi-Processing", "Python 2", "Python 3", "CPython", "ASYNC / Concurreny"]},
{"title": ["GPU Acceleration of a Global Atmospheric Model using Python based Multi-platform"], "author": ["Ki-Hwan Kim"], "description": ["A global atmospheric model play an important role in short-term weather forecasting and long-term climate prediction. The model requires enormous computing resources because the all atmospheric states must be calculated every time step (usually a tens of seconds to several minutes). However, since the most atmospheric models run only on CPU machines, they are not able to use the modern microprocessors with high performance and low power such as NVIDIA GPU and Intel MIC.", "It often costs a lot to convert codes from one machine to the other machine.  Although it can be accelerated on GPU and MIC using OpenMP and OpenACC directives, it is not easy to achieve peak performance. I developed a new Python module named PyMIP (Python based Machine Independent Platform) to integrate C, Fortran, CUDA and OpenCL codes with a simple user interface. The main code includes configuration, flow control, IO and MPI parallel is written by Python. Only hotspots include huge number crunching code are written by compile language as C, Fortran, CUDA and OpenCL. The hotspot codes are compiled and imported using PyMIP in runtime. PyMIP enables that a user can switch machines with simple flag.", "I am developing a new global atmospheric model based on PyMIP to make it easy to utilize various modern microprocessors.  In this presentation, I will introduce PyMIP and show the computational performance result in NVIDIA GPU of the dynamical core of the model developed based on PyMIP."], "date": ["Monday 10 July"], "tags": ["Best Practice", "Science", "Science Track", "C-Languages"]},
{"title": ["Get over the boundaries between client and server in web app development"], "author": ["Alberto Berti"], "description": ["The practice in the development of advanced web applications is to break it into two main areas where the effort on the server, with the typical WSGI environments, focuses on data access configuration whereas the application logic is delegated mostly to the client through the use of JavaScript frameworks.", "The reason for this separation into two roles lies in the need to use JavaScript on the browser and the fact that the communication channel (HTTP) and the way in which the application state is handled on the server side is still that thought to serve full web pages.", "In this talk I\u2019ll show a framework and an application where the line between the two worlds is blurred and where it is possible to think of the application in terms of unity, with the two components that cooperate equally and communicate without thinking in terms of URLs or HTTP verbs .", "This is made possible by the asynchronous/reactive management of the processing from the database driver to the user interaction, the use of websocket for communication and the use of Python (optional) for the development of the client part.", "Some technologies used are: PostgreSQL, the \u201casyncpg\u201d driver, the \u201caiohttp\u201d web server, Crossbar (http://crossbar.io) for the websocket comms, pkg \u201cmetapensiero.sphinx.patchdb\u201d for schema upgrades, the package \u201cmetapensiero.reactive\u201d and \u201cmetapensiero.signal\u201d for the management of reactive event streams,the package \u201cJavascripthon\u201d for Py3 to ES6 JS transpiling."], "date": ["Tuesday 11 July"], "tags": ["Web Track", "JavaScript", "PostgreSQL", "Architecture", "ASYNC / Concurreny"]},
{"title": ["Front-end testing with Python"], "author": ["Tim Babych"], "description": ["Web-developers use Python to develop web-applications, serving HTML or JSON content to user\u2019s browsers which render it. We test our applications to check that they serve content right and that they respond to HTTP requests in an expected way. However, this is not all that happens in a modern web application. There are lots of moving parts which are executed not on the server, but directly in user\u2019s browser, and they need to be tested too. The best way to check that our app works well in a browser is to test it in a browser, and Python gives you tools to do that conveniently.", "With a Selenium tool and Python package, you can control the browsers, making them open web pages and interacting with them. I will show how to install Selenium and needed drivers, and tell about best practices for writing Selenium tests, such as", "To test the visual look of your application there is a Needle tool, which lets you compare screenshots with baseline set, and highlight the differences. I will talk about how to incorporate that functionality into your tests.", "As browser testing can get quite slow, I will also show how to set up running them concurrently."], "date": ["Monday 10 July"], "tags": ["Web Track", "Testing", "Web General", "HTML5"]},
{"title": ["Full-Text Search in Django with PostgreSQL"], "author": ["Paolo Melchiorre"], "description": ["After some experiences in the implementation of full-text search functionality with different system, we have decided to use PostgreSQL to implement full-text search functionality in our next project, a website to search for shows, venues, bands and festivals.", "In the past, I have worked in two different projects, a mobile platform to sell and buy used items and a sport videos sharing platform, where I used two of the most currently famous full-text search software (Elasticsearch or Solr) but I had some synchronization and management problems.", "After that, in my company, we searched for new Django support of full-text search PostgreSQL implementation and we decided to use it to avoid any problems that I had in the past.", "I\u2019m going to start speaking about the full-text search in a general context and I want to show the problems I encountered implementing it in the past.", "Afterwards, I\u2019m going to talk about the PostgreSQL functionality to implement the full-text search functionality and also present the django.contrib.potgres.search module, with step-by-step demonstrations of its functions with real world data.", "Finally, I\u2019m going to show the way we use and test this functionality in our project and which functionality lacks us to have a complete implementation of full-text search in our project.", "At the end, I want to present my conclusions about our solution and I want to explore some new features that will be present in the next versions of Django and PostgreSQL."], "date": ["Wednesday 12 July"], "tags": ["python", "Django Track", "Django", "PostgreSQL", "Elastic Search"]},
{"title": ["Finding bugs for free: The magic of static analysis."], "author": ["Mark Shannon"], "description": ["Overview", "Intended Audience", "(lgtm.com is a commercial project that is free to use for open-source software) "], "date": ["Friday 14 July"], "tags": ["Developing with Python", "Tooling", "Code Analysis", "Static Analysis"]},
{"title": ["From an old-school data managing company to data analytics with Python"], "author": ["Henrik Hain"], "description": ["Our mission is to manage a huge amount of communication and document data in large scale industry projects by providing web based project management systems. The increasing amount of communication creates the desire for a GPS helping us and our customers to navigate through the communication stream. Our R&D projects are focusing on topics like clustering, event detection, and network analysis (Who knows who, domain experts).", "Traveling the wild side of NLP, Data Science, and Analytics, we stumbled across amazing Python tools supporting us in our goal to navigate the project communication and therefor supporting our clients in Project & Risk Management avoiding wrong turns. We would like to share some of our approaches to answer our research topics and challenges:", "One of the challenges, amongst others, is to utilize and adapt up to date clustering algorithms for social stream data and to expose them as reentrant services. Another one is to tailor them for the current application domain, improving clustering precision by parametrization and other means. Furthermore the integration of a Python based analytics system into an existing JAVA based application environment and eco system is required.", "In addition, we would also like to share some of our \u201ctraffic jams\u201d experienced during our travel starting as traditional Java/SQL focusing company that integrated Python into its development portfolio."], "date": ["Friday 14 July"], "tags": ["Algorithms", "MongoDB", "Data Science", "RESTful", "Use Case"]},
{"title": ["From Fun to Business - How Open Source Changed my Life"], "author": ["Lasse Schuirmann"], "description": ["coala", " began as a fun project. We never believed there would be anything useful growing out of it - and yet it did. Contributors all over the world came to us and helped creating the community as it is.", "But how did all of this happen? What does this mean for the main contributors? How can we make a living of an open source project?", "This talk tells our story. What we did - good and bad things - so we can learn from it. From my personal open source contributions over founding an open source project to building a freelance agency and founding a startup.", "Participants will learn how they can grow an open source project, automate newcomer processes and gain insights into how they can start making a living of it, possibly founding a company eventually. There is no single recipe for this but we can - and should - exchange the tips and tricks we\u2019ve gained with our ventures. This talk is for entrepreneurs, wanna-be-freelancers and future or past open source project founders.", "This talk is completely new and has not been presented at any conference yet although it overlaps with previous talks of mine which have received much positive feedback at previous regional PyCons. It will be tested at a local meetup to ensure proper timing."], "date": ["Monday 10 July"], "tags": ["failures/mistakes", "Business Track", "freelancing", "Community", "Open-Source"]},
{"title": ["Fixture factories for faster end-to-end tests"], "author": ["Stephan Jaensch"], "description": ["When developing and maintaining many different services, unit testing is not enough to make sure your code works in production. By now, many teams doing SOA (service-oriented architectures) have a set of end-to-end tests that cover critical workflows to make sure these work. For these tests, all of the utilized services need to have the proper test fixture data in their datastores. This often leads to developers having to deal with raw datastore data (like JSON or SQL) for these tests, making the authoring of those tests very slow, tedious, and error-prone.", "This talk is going to discuss several approaches we tried at Yelp to generating these fixture data in a quicker, developer-friendly and more correct way. ", "The main part of the talk will be a deep-dive into what fixture factories are, how to implement them and how to integrate them with pytest, the leading Python testing framework. I\u2019ll show you several other benefits this approach has over writing raw fixture data and how this leads to more maintainable and easier to adapt code. We\u2019ll also explore how you can then run your tests in parallel, cutting down runtime drastically."], "date": ["Thursday 13 July"], "tags": ["Development", "Developing with Python", "Testing", "Test Libraries (pyTest/node/...)", "Microservices"]},
{"title": ["Fighting the controls: tragedy and madness for programmers and pilots"], "author": ["Daniele Procida"], "description": ["Damn it, this can\u2019t be happening! As programmers, we find ourselves time and again spiralling down into tighter loops of desperate troubleshooting, fighting the controls of our machinery and descending into what feels like a kind of madness. Later, when it\u2019s all over, we realise that the clues we needed to recover the situation were staring us in the face all along, but we somehow couldn\u2019t even see them.", "There\u2019s a reason for this: the nature of debugging for programmers means that it quickly tips us into these states, and then very effectively keeps us there.", "In programming we have worked hard to improve some aspects of programmers\u2019 work, creating methodologies, development frameworks, paradigms, practices and thinking deeply about how to solve the problems of producing good code. We have done very little work to improve the way we debug our code,", "The good news is that although programmers have not developed very adequate strategies or techniques for mitigating the risks that debugging draws us into, other industries, and in particular aviation, have. We can learn from their lessons without paying their price."], "date": ["Thursday 13 July"], "tags": ["Debugging", "Programming"]},
{"title": ["Feeding a real-time user interface"], "author": ["Vita Smid"], "description": ["Imagine you have some streaming computations running on a server. Client programs subscribe to real-time updates, so that they may visualise the computations for end users. ", "How do you share this constantly changing server state with all connected clients? Sending an entire snapshot after each change is very inefficient, so you must implement some sort of incremental updates \u2013 diffs. ", "But how do you generate these diffs on the server? And how do you represent them so the clients know how to apply them to update their own state?", "We have been working on these problems for a long time while building a stock trading platform in Python. I\u2019d like to show you a couple of open source libraries that we developed for this purpose, and share our experience with tracking state and propagating it to user interfaces running in other processes."], "date": ["Tuesday 11 July"], "tags": ["Data", "Structures"]},
{"title": ["Fast Python! Coding competitions with CPython and PyPy"], "author": ["Alessandro Amici"], "description": ["In a coding competition you want to solve problems \u201cfast\u201d\u2026 why would you choose a \u201cslow\u201d interpreted language like Python? Because the \u201cslow\u201d Python wins competitions more often that most people think.", "We will show how coding competitions work, what are the resources and constraints that competitors need to take into account, and we will find out that, like very often in real life, the actual processing time is only a small term in the complex equation that describe a competition.", "The \u201cfaster\u201d PyPy may help in gaining raw speed, but that is not the real advantage it gives you in a competition."], "date": ["Wednesday 12 July"], "tags": ["Fun and Humor", "Developing with Python", "Algorithms", "PyPy", "Scientific Libraries (Numpy/Pandas/SciKit/...)"]},
{"title": ["Feeding data to AWS Redshift with Airflow"], "author": ["Federico Marani"], "description": ["Airflow is a powerful system to schedule workflows and define them as a collection of interdependent scripts. It is the perfect companion to do extract/transform/load pipelines into data warehouses, such as Redshift.", "This talk will introduce some of the basis of Airflow and some of the concepts that are data pipeline specific, like backfills, retries, etc. Then there will be some examples on how to integrate this, along with some lessons learned there. ", "At the end, there will be a part dedicated to Redshift, how to structure data there, how to do some basic transformation pre-loading, how to manage the schema using SQLAlchemy and Alembic."], "date": ["Thursday 13 July"], "tags": ["Analytics", "Science Track", "Big Data", "Databases"]},
{"title": ["Fast product development using Django Rest Framework. #lessonslearned"], "author": ["Samuel Fuentes"], "description": ["A year ago we decided to use Django and, specifically, DRF as the cornerstone of our upcoming fast-iterating web platform. In this talk I discuss why and how the architecture has evolved, key decisions made and the lessons we learned along the way.", "I\u2019ll share the techniques we used for iterating quickly and how the technology supported (and shaped) them. In addition some quirks and DRF-specific tricks will be brought along the way.", "Expect a general talk about how Python (and specifically DRF) can be used as a based for quick product iterations, a discussion regarding how to build and evolve a platform to meet those needs and some DRF-specific tidbits. No previous knowledge is required but experience in web development will make the content more accessible."], "date": ["Thursday 13 July"], "tags": ["Web General", "Django", "Architecture", "Use Case", "APIs"]},
{"title": ["Facing the challenge of climate change with xarray and Dask"], "author": ["Francesco Nazzaro"], "description": ["In the last years climate change has become one of the most important topic. For any period longer than a few days science is not able to provide comparable forecasts, but still a lot of useful information about future climate conditions can be gained on time scale of a few months to even several years.", "Climate forecast and climate projections data are quite complex to analyse and represent. The Python science ecosystem proves extremely effective as a platform to retrieve, analyse, process and present this type of data. The backbone of the platform is the n-dimensional array library xarray that provides the perfect mix between pandas data structures and dask performance and parallelization.", "Reliable climate forecasts and climate projections are now available from the Copernicus Climate Change Service, operated by ECMWF, that will become the central hub for European effort in study and mitigate climate change impacts. The service also provides access to an open cloud platform, the CDS Toolbox, that is based on the Python 3 xarray/dask/pandas stack.", "In this talk I will present how to retrieve, analyse, process and display climate data in a generic use case with xarray and with the Copernicus CDS Toolbox.", "slides: ", "http://slides.com/francesconazzaro/europython-2017"], "date": ["Wednesday 12 July"], "tags": ["Visualization", "Data Science", "Jupyter/iPython Notebook", "Scientific Libraries (Numpy/Pandas/SciKit/...)"]},
{"title": ["Dockerized pytests"], "author": ["Gonzalo Rafuls"], "description": ["When working with pytest and custom plugins things can get eery when trying to mimic your Jenkins environment for debugging your tests locally, specially across your team and their workspaces.\nIn this talk will go through the challenges faced to containerize a wild pytest environment.", "Topics:", "Running Pytest on Jenkins jobs", "Pytest custom plugins", "Challenges for locally debugging/replicating a Jenkins job/pytest run", "Dockerizing pytest and it\u2019s dependencies"], "date": ["Thursday 13 July"], "tags": ["python", "Jenkins", "Docker", "Testing", "Test Libraries (pyTest/node/...)"]},
{"title": ["Effortless Logging - Let the loggers work for you"], "author": ["Mario Corchero"], "description": ["Logs are your best friends on those late nights when you try to troubleshoot that problem in production that was written by a friend of you who is on holidays at the moment. Logs are the main way to know what is happening at runtime with an running application but as we don\u2019t realize how important they are until we actually need them it is usually an under appreciated part of our development process.", "This talks overviews the logging module of the standard library and demonstrates some basic best practices and techniques make the most out of our logging when we need it.\nAfter this talk you will be fully familiar not only on how to use the logging library but also how it is actually designed, how it works, how to extended further than the basic usage and some sample recipes and configurations for complex applications."], "date": ["Monday 10 July"], "tags": ["Beginners", "Developing with Python", "Best Practice", "Programming", "Python general"]},
{"title": ["Executing scripts in a few milliseconds with MicroPython"], "author": ["Marwan Al-Sabbagh"], "description": ["Command execution time can become important in a number of applications. Commands executed in command-line completion need to execute in less then 100ms or users will perceive a delay. In Shell scripting one might want to execute commands repeatedly in a for loop and fast execution times makes this more feasible. ", "Python is a very powerful language but has a much slower startup time compared to other interpreted languages like Perl, Lua and Bash. It can take up to 10 times longer to startup then some of these other languages.", "MicroPython was written as a lean implementation of Python 3 with a small subset of the standard library mainly intended to run on microcontrollers. But it happily runs on Unix systems with excellent startup performance, making it an ideal candidate for implementing certain time sensitive commands.", "This talk will:", "Explain when achieving fast execution times matters and when it doesn\u2019t.", "Present two different approaches to measuring command execution time, one simple and the other more detailed and accurate.", "Compare execution times of a simple set of scripts that add two numbers in an number of different interpreted languages (micropython, python3, awk, perl, lua, bash). ", "Present an example use case of MicroPython on Unix. Bash completion for pip install that completes the names of available packages live from a remote pypi mirror.", "Demonstrate the auto completion script with pip on a local pypi mirror."], "date": ["Friday 14 July"], "tags": ["MicroPython", "Unix", "Command-Line"]},
{"title": ["Explaining behavior of Machine Learning models with eli5 library"], "author": ["Mikhail Korobov"], "description": ["ML estimators don\u2019t have to be black boxes. Interpretability has many benefits: it is easier to debug interpretable models, humans trust decisions of such models more.", "In this talk I\u2019ll give an overview of ML models interpretation and debugging techniques. I\u2019ll cover", "The talk focus is on explanation algorithms, because it is important to be aware of pitfalls and limitations of the explanation method to be able to interpret an explanation correctly. I\u2019ll also show how to use these techniques in practice, to debug and explain behavior of estimators from Python ML libraries like scikit-learn and xgboost using open-source ", "eli5", " library.", "Attendees will get both practical and theoretical understanding of these explanation methods. Target audience is ML practitioners who want to ", "1) get a better quality from their ML pipelines - understanding of why a wrong decision happens is often a first step to improve the quality of an ML solution;", "2) explain ML model behavior to clients or stakeholders - inspectable ML pipelines are easier to \u201csell\u201d to a client; humans trust such models more because they can check if an explanation is consistent with their domain knowledge or gut feeling, understand better shortcomings of the solution and make a more informed decision as a result."], "date": ["Thursday 13 July"], "tags": ["Scientific Libraries (Numpy/Pandas/SciKit/...)", "Data Science", "Algorithms", "Predictions", "Machine-Learning"]},
{"title": ["Django: From a nightmare to a dream with Best Practices."], "author": ["Stephane Wirtel"], "description": ["With the adventure in the source code of the site of EuroPython, we have detected that the code was difficult to maintain. With the members of the Web team, we have started to refactor the code with the best practices and good concept. Also, we will see some awesome libraries for the Django project.", "In brief, you have a legacy code and you want to improve it with best practices, then this talk is for you. ", "You don\u2019t want to break it but you don\u2019t want to change it because you can break it at all times, we will show you how to improve an existing code with some tools and best practices, and your code can be deploy on Friday evening with no risk.", "From a nightmare to a dream.", "Keywords, TDD, Refactoring, Tests, BDD, Selenium, CI, and many more\u2026"], "date": ["Tuesday 11 July"], "tags": ["Best Practice", "Test Driven Development (TDD)", "Django"]},
{"title": ["Django Rest Framework, one year after: tips, tools, tricks and pitfalls."], "author": ["Alejandro Castillo"], "description": ["One year ago we started OnTruck. Our CTO had previously had some success with DRF so after discussing it, we decided to give it a try. After a year building a quickly iterating startup on top of Django Rest Framework, we have reflected a lot on it. Even now, with a full year of development on top of it, we still periodically discuss going forward or dropping it. For the time being it still wins. So we think we have learned a lot about it.\nThis talk is a walkthrough of the discoveries & learnings we have made at OnTruck during that year.\nWe will cover different aspects of the framework, what advantages it has given us and also what tradeoffs it has forced. We will discuss both how it relates to Django on the inside and how it relates with other systems outside. We will approach it both from a purely user perspective and also discuss some of its internals and the way we tweaked them to make it work for us. We will cover the pitfalls we have both avoided and fallen into. The tricks that have helped us keep our speed and sanity. The tools we have both used and discarded on the way. And finally the tips we would give ourselves if we were starting all over again after this year."], "date": ["Monday 10 July"], "tags": ["Developing with Python", "Django Track", "Django"]},
{"title": ["Django, Django Rest Framework and Angular2: RAD on SaaS platforms"], "author": ["Marco Montanari"], "description": ["Rapid Application Development has been a major topic for the desktop development world. Yet, desktop development has proven to be at the end of its timeline and the latest major environment is now the web in its many forms (from browser to Electron and similars). Django offers an amazing infrastructure and Django Rest Framework an amazing middleware to solve most of the problems. The RAD development on Angular2 is then enabled by a set of libraries developed at Modal Nodes for both front and backend that ease the development of the front end tools and front end interactions with both unauthenticated and authenticated systems via JWT and Djoser. Specifically, we will see the changes in the metadata that will enable better interactions and the usage of both the backend elements and the front-end ones in order to ease development."], "date": ["Monday 10 July"], "tags": ["JavaScript Web Frameworks (AngularJS/ReactJS/...)", "Web Track", "Django Track", "Developing with Python"]},
{"title": ["Django and Graphql"], "author": ["Patrick Arminio"], "description": ["The web is constantly evolving, that is even more true with the frontend world. You don\u2019t have anymore the traditional webapp, in fact you now have two apps, backend and frontend. But how do they communicate? Traditionally we have always created REST APIs, but now, there\u2019s a new player. GraphQL!"], "date": ["Tuesday 11 July"], "tags": ["Django", "RESTful", "APIs"]},
{"title": ["Discovering Descriptors"], "author": ["Mariano Anaya"], "description": ["Python is full of amazing (yet often overlooked) features, that can help us write better, cleaner, and more maintainable code. One of them is the descriptors interface.", "By means of descriptors, we can run code when accessing or setting properties of another object. This can have a lot of applications, and keeping descriptors in mind might come in handy when facing a hard problem.", "The goal of the talk is to explore descriptors, and how they can be written, as well as analysing some interesting examples in well-known libraries or projects in order to identify scenarios where descriptors are the Pythonic way to go."], "date": ["Tuesday 11 July"], "tags": ["Developing with Python", "Python general", "Data Structures"]},
{"title": ["Developing elegant workflows in Python code with Apache Airflow"], "author": ["Micha\u0142 Karzy\u0144ski"], "description": ["Every time a new batch of data comes in, you start a set of tasks. Some tasks can run in parallel, some must run in a sequence, perhaps on a number of different machines. That\u2019s a workflow.", "Did you ever draw a block diagram of your workflow? Imagine you could bring that diagram to life and actually run it as it looks on the whiteboard. With Airflow you can just about do that.", "Apache Airflow", " is an open-source Python tool for orchestrating data processing pipelines. In each workflow tasks are arranged into a directed acyclic graph (DAG). Shape of this graph decides the overall logic of the workflow. A DAG can have many branches and you can decide which of them to follow and which to skip at execution time.", "This creates a resilient design because each task can be retried multiple times if an error occurs. Airflow can even be stopped entirely and running workflows will resume by restarting the last unfinished task. Logs for each task are stored separately and are easily accessible through a friendly web UI.", "In my talk I will go over basic Airflow concepts and through examples demonstrate how easy it is to define your own workflows in Python code. We\u2019ll also go over ways to extend Airflow by adding custom task operators, sensors and plugins."], "date": ["Thursday 13 July"], "tags": ["Best Practice", "Analytics", "Data Science", "Clean Code", "Open-Source"]},
{"title": ["Despicable machines: how computers can be assholes"], "author": ["Maciej Gryka"], "description": ["When working on a new ML solution to solve a given problem, do you think that you are simply using objective reality to infer a set of unbiased rules that will allow you to predict the future? Do you think that worrying about the morality of your work is something other people should do? If so, this talk is for you.", "In this brief time, I will try to convince you that you hold great power over how the future world will look like and that you should incorporate thinking about morality into the set of ML tools you use every day. We will take a short journey through several problems, which surfaced over the last few years, as ML and AI generally, became more widely used. We will look at bias present in training data, at some real-world consequences of not considering it (including one or two hair-raising stories) and cutting-edge research on how to counteract this.", "The outline of the talk is: - Intro the problem: ML algos can be biased! - Two concrete examples. - What\u2019s been done so far (i.e. techniques from recently-published papers). - What to do next: unanswered questions."], "date": ["Thursday 13 July"], "tags": ["Best Practice", "Data Science", "Education", "Community", "Machine-Learning"]},
{"title": ["Deep Learning your Broadband Network @HOME"], "author": ["Hongjoo Lee"], "description": ["Most of us have broadband internet services at home. Sometimes it does not work well, and we visit speed test page and check internet speed for ourselves or call cable company to report the service failure. As a Python programmer, have you ever tried to automate the internet speed test on a regular basis? Have you ever thought about logging the data and analyzing the time series ?", "In this talk, we will go through the whole process of data mining and knowledge discovery. Firstly we write a script to run speed test periodically and log the metric. Then we parse the log data and convert them into a time series and visualize the data for a certain period.", "Next we conduct some data analysis; finding trends, forecasting, and detecting anomalous data. There will be several statistic or deep learning techniques used for the analysis; ARIMA (Autoregressive Integrated Moving Average), LSTM (Long Short Term Memory).", "The goal is to provide basic idea how to run speed test and collect metrics by automated script in Python. Also, I will provide high level concept of the methodologies for analyzing time series data. Also, I would like to motivate Python people to try this at home.", "This session is designed to be accessible to everyone, including anyone with no expertise in mathematics, computer science. Understandings of basic concepts of machine learning and some Python tools bringing such concepts into practice might be helpful, but not necessary for the audience."], "date": ["Friday 14 July"], "tags": ["Deep Learning", "Data Science", "Scientific Libraries (Numpy/Pandas/SciKit/...)", "Machine-Learning", "Analytics"]},
{"title": ["Declarative Thinking and Programming"], "author": ["Florian Wilhelm"], "description": ["Declarative Programming is a programming paradigm that focuses on describing ", "what", " should be computed in a problem domain without describing ", "how", " it should be done.  The talk starts by explaining differences between a ", "declarative", " and ", "imperative", " approach with the help of examples from everyday life. Having established a clear notion of declarative programming as well as pointed out some advantages, we transfer these concepts to programming in general. For example, the usage of control flow statements like loops over-determine the order of computation which impedes scalable execution as well as it often violates the single level of abstraction principle. ", "Following the theoretical part of the talk, some practical examples are given how declarative programming can be applied easily within Python. This comprises the advantages and disadvantages of using a configuration file, e.g. config.yaml, versus a Python configuration module, e.g. setup.py. Furthermore, the benefits of avoiding statements of control flow with the help of list and dictionary comprehensions as well as sets are demonstrated.", "The talk is concluded by a short, high-level excursion to a logistic programming language, namely PyDatalog in order to build the bridge between logistic and declarative programming. This is accomplished by showing how a mathematical crossword can be easily solved with the help of declarative and logistic programming."], "date": ["Thursday 13 July"], "tags": ["Best Practice", "Developing with Python", "Programming", "Clean Code"]},
{"title": ["Debugging in Python 3.6: Better, Faster, Stronger"], "author": ["Elizaveta Shashkova"], "description": ["Python 3.6 was released in December of 2016 and it has a lot of new cool features. Some of them are quite easy for using: a developer can read, for example, about f-strings and they can start using them in their programs as soon as possible. But sometimes features are not so evident, and a new frame evaluation API is one of them. ", "The new frame evaluation API was introduced to CPython in PEP 523 and it allows to specify a per-interpreter function pointer to handle the evaluation of frames. It might not be evident how to use this new feature in everyday life, but it\u2019s quite easy to understand how to build a fast debugger based on it. ", "In this talk we are going to explain how standard way of debugging in Python works and how a new frame evaluation API may be useful for creating the fast debugger. Also we will consider why such fast debugging was not possible in the previous versions of Python. If someone hasn\u2019t made a final decision to move to Python 3.6 this talk will provide some new reasons to do it. "], "date": ["Monday 10 July"], "tags": ["Debugging", "Compiler and Interpreters", "Python 3", "CPython", "Developing with Python"]},
{"title": ["Cloud Native Python in Kubernetes"], "author": ["Floris Bruynooghe"], "description": ["Serverside applications are more and more likely to need to run in\ndynamic cloud environments where they can automatically scale as\nrequired.  One rightfully popular approach is to run the application\nas a Docker container inside a Kubernetes cluster, giving you a lot of\noperational benefits thanks to the Kubernetes folks.", "For the most part it is rather easy to make your Python application\nwork inside a Docker container.  But there are a number of common\npatterns one can follow to save time by delegating more things to the\nruntime environment.  Furthermore you can start adding a few simple\nnon-intrusive features to your application which will help improve the\napplication live-cycle in the cluster, ensuring smooth hand-over when\nmigrating the container to different nodes or scaling it up or down.", "This talk will quickly cover the basics of Kubernetes and will then\nstart from a simple program and will discuss the steps to take to make\nit behave well in this environment.  Starting with the basics steps\nyou can rely on the runtime for, covering logging and all the way to\nsupporting the service life-cycle, health checking and monitoring in a\nKubernetes environment.  You will see that building a cloud-native\napplication is not very hard and something you can gradually\nintroduce."], "date": ["Thursday 13 July"], "tags": ["Software Design", "Microservices", "Docker"]},
{"title": ["Call a C API from Python becomes more enjoyable with CFFI"], "author": ["Jean-S\u00e9bastien Bevilacqua"], "description": ["Python is slow ! Python can\u2019t access bare metal !", "You often hear theses assumptions? Theses limitations can be surpassed by Python extensions written in C. However, according to my personal experience, doing this by leveraging C may yield to several issues (e.g., memory management).", "C Foreign Function Interface for Python (a.k.a., CFFI) allows you to easily write Python extensions. One of the main aims of CFFI is to to wrap C libraries. Along the same lines, it may also be used for performance enhancement.", "By this call, I am firstly presenting CFFI and it\u2019s two modes of utilization: API level and ABI level. Then I will share my own experience about wrapping ", "shaderc", " library in six hours (", "pyshaderc", ").", "Next we are going to the next level, let\u2019s wrap all the Vulkan API! Vulkan is the new 3D API and is not a piece of cake. To see the real advantage of CFFI, a side by side comparison between two Python modules is going to be presented:", "I have developed two versions of Vulkan wrapper (one in a pure C, and the second by leveraging CFFI) and I can assure you that CFFI is a a way better!", "Let\u2019s code!"], "date": ["Wednesday 12 July"], "tags": ["Best Practice", "Developing with Python", "Python general", "C-Languages", "Performance"]},
{"title": ["CyberSecurity.bootcamp()"], "author": ["Piotr Dyba"], "description": ["Cyber-security is a critical part of all distributed applications. By understanding and implementing proper security measures, you guard your own resources against malicious attackers as well as provide a secure environment for all relevant parties. ", "The purpose of the talk is to show starting points on how to improve security in python applications by destroying a few servers during the presentation. It will provide the most important information and will cover:", "Basic knowledge of networking, python and REST is advised. "], "date": ["Tuesday 11 July"], "tags": ["Developing with Python", "Security", "RESTful", "Web General", "Privacy"]},
{"title": ["But how do you know your mock is valid? Verified fakes of web services"], "author": ["Adam Dangoor"], "description": ["If your code calls a third party service then you may want to test that your code works but you don\u2019t want to call the service in your tests.", "It may be expensive, slow or impossible to call that service. For example, if you are making a Slack bot, you want to create tests which don\u2019t make calls across the network to Slack.", "One approach is to create a mock of that service. Our tests can now run quickly, cheaply and reliably. But if we copy the service incorrectly, or if the service changes, our tests will pass while our code does not work.", "Verified fakes solve this problem. You can write tests which confirm that your mock is an accurate representation of the service being mocked. Those tests can be a small subset of your test suite and they can be run periodically, to verify the validity of the many tests which use the mock.", "This talk will follow the example of VWS-Python, a verified fake for a proprietary web service. It will discuss the practicalities of creating such a fake and it will focus on the trade-offs, tooling and approaches involved.", "By the end of this talk the audience will understand how to tie together ", "pytest", ", Travis CI, ", "requests", " and ", "Responses", " to create a verified fake.", "The talk is aimed at people who have an interest in writing correct software. It is assumed that the audience is familiar with basic testing techniques."], "date": ["Monday 10 July"], "tags": ["python", "Test Driven Development (TDD)", "Testing", "Test Libraries (pyTest/node/...)", "APIs"]},
{"title": ["AAA Games with Unreal Engine 4 and Python"], "author": ["Roberto De Ioris"], "description": ["Unreal Engine is the game industry leading platform for developing AAA Videogames. Now you can script your gameplay logic, automate your development pipelines or test your productions with Python too. The UnrealEnginePython plugin aims at covering the whole feature set of  Unreal Engine 4 and extending it with the huge modules library available in the Python world.", "The talk will briefly introduce the Unreal Engine platform and its capabilities as well as how it can be programmed without the python plugin (Blueprints and C++).", "The biggest part of the talk will focus on how the Unreal Engine 4 patterns are mapped to the python plugin, what is already working and what you can expect from future developments.", "No prior knowledge of game/graphics programming is required,  and if you are in the movie or cartoon industry you can get interesting infos too"], "date": ["Monday 10 July"], "tags": ["Developing with Python", "Game-Development"]},
{"title": ["A journey into Git internals with Python"], "author": ["Andrey Syschikov"], "description": ["Despite 12 years of history and wide popularity the workings of Git still remain largely a mystery for many.  A lot of Git users operate it just by remembering a bunch of commands and repeating them in a correct order.  I was one of them until I decided to dig deeper into how Git actually works and suddenly I understood that internally Git operates by rather simple principles and after you figure them out suddenly all those commands start to make sense. To look into the Git\u2019s internal structure you need a programming language to crunch the data and Python fit perfectly for this task.", "In this talk, I will dig into the internals of Git with Python, that will help you better understand how Git works."], "date": ["Thursday 13 July"], "tags": ["Git"]},
{"title": ["A  robotic platform for natural and effective human-robot interaction"], "author": ["Enrico Carbognani"], "description": ["This  talk deals  with  the usage  of  artificial  intelligent  techniques  in  humanoid  robotics. The focus is on human\u2013robot interaction with the goal of building a robotic platform which embodiments are able to interact in natural and effective way with humans through speech, gestures, and facial expressions. The system is fully implemented in Python and based on the Robotic Operating System (ROS). The talk will describe the hardware and software configuration of our currently NAO based humanoid platform.  The strategy has been to use available high level Python libraries for spoken language processing, sentiment analysis,  vision,  interfacing with Artificial Intelligence applications  in   order   to   provide current edge technologies performances.   The overall system architecture is based on finite state machines nodes interacting via the ROS communication layer. \nThe main fields of applications that the platform is targeting are:\n   - Entertainment\n   - Education\n   - Field robotics\n   - Home and companion robotics\n   - Hospitality\n   - Robot Assisted Therapy (RAT)\nWe will present the latest status of the platform together with a NAO based demo."], "date": ["Friday 14 July"], "tags": ["Robotics", "Machine-Learning", "Natural Language Processing"]},
{"title": ["A Gentle Introduction to Data Science"], "author": ["Marc Garcia"], "description": ["This introductory talk, will cover the basics of datascience. From the incluence of artificial intelligence, and the quest to replicate a human mind, to a practical demo on how to build a hello world machine learning in Python.", "The talk will try to answer questions such as: What do we understand by data science? What do we know about the human mind, that can be an inspiration for our programs? Which problems can we solve with data science? What tools are available to do data science in Python?"], "date": ["Wednesday 12 July"], "tags": ["Science", "Data"]},
{"title": ["2 + 2 = 5: Monkey-patching CPython with ctypes to conform to Party doctrine"], "author": ["Frankie Dintino"], "description": ["A few weeks into your tenure as a software engineer at the Ministry of Truth you are assigned your first real feature request: write a context manager that can make \u201c2 + 2\u201d equal 5 at runtime. Your solution should be written only in Python (for maximum portability). Absurd? Perhaps, but you know better than to ask questions. You are no thought-criminal.", "In this talk I walk through the steps I took to modify the value of two plus two in CPython at runtime\u2014using only Python and the ctypes module. What began for me as a silly and frivolous side project became an education in how the python data model works behind the scenes and how CPython compiles, optimizes, and executes python code.", "The goal of this talk is to provide an introduction to CPython internals while walking through the steps needed to monkeypatch integer addition to make \u201c2 + 2\u201d equal 5. The audience should come away with a better understanding of how python objects and types are represented in memory, how references are counted, and how python scripts are transformed into abstract syntax trees, compiled into code objects, and then executed by the CPython virtual stack machine. And because I\u2019ve limited myself to using ctypes, these topics can be explored without familiarity with C as a prerequisite."], "date": ["Monday 10 July"], "tags": ["Fun and Humor", "Developing with Python", "Python general", "C-Languages", "CPython"]},
{"title": ["A faster Python? You Have These Choices"], "author": ["Paul Ross"], "description": ["Python was never intended as a fast language but many modern uses of Python require high performance computing, particularly in data science. This talk explores your options for squeezing maximum performance out of critical Python code.", "This talk provides a succinct summary of the options you have: C extensions, Cython, CFFI, PyPy and many others. It also shows the trade-offs between execution performance and the cost of writing and maintaining code with each choice. Each option is also explored for maturity and ease of use for Python programmers. A real world programming problem is coded and benchmarked using each of these techniques. All the code used in the talk is available on GitHub.", "At the end of this talk you will be better place to decide on which technique to use to make your code run 100x faster."], "date": ["Thursday 13 July"], "tags": ["Performance", "Developing with Python", "CPython", "Cython"]},
{"title": ["How to create inspiring data visualizations?"], "author": ["Jan Willem Tulp"], "description": ["Many times data visualizations need to communicate insights clearly and effectively. But sometimes the goals of a visualization go beyond that: they need to inspire and engage people. But how do you draw them in? What is the process behind creating a creative data visualization? During this talk, I will show some of my projects, and explain a little about the process behind it."], "date": ["Tuesday 11 July"], "tags": ["Visualization", "Data Science"]},
{"title": ["The Different Roads We Take"], "author": ["Tracy Osborn"], "description": ["We\u2019ve all taken different routes to get to where we are today, and we\u2019re not all currently on the same road going the same place. Tracy Osborn will talk about the idea of the \u201cPython engineer,\u201d her (long and full of bumps and potholes) journey to learning and teaching Python, and the harmful myths about learning programming and the paths available when you do so."], "date": ["Thursday 13 July"], "tags": ["Education", "Business"]},
{"title": ["The Encounter: Python\u2019s adventures in Africa"], "author": ["Daniele Procida"], "description": ["A genuine encounter changes both parties. In this talk Daniele and Aisha will report on the dialogue opened up by recent PyCons and other Python events in Africa. They\u2019ll discuss Python\u2019s impact in countries including Namibia, Nigeria and Zimbabwe, and what open-source software means for Africa at large - and what the encounter means for Python too."], "date": ["Friday 14 July"], "tags": ["Diversity", "Community"]},
{"title": ["If Ethics is not None"], "author": ["Katharine Jarmul"], "description": ["The history of computing, as it\u2019s often covered in textbooks or talks, remains primarily focused on a series of hardware advancements, architectures, operating systems and software. In this talk, we will instead explore the history of ethics in computing, touching on the early days of computers in warfare and science, leading up to ethical issues today such as Artificial Intelligence and privacy regulation."], "date": ["Wednesday 12 July"], "tags": ["Best Practice", "Everything", "Data Science", "Life"]}
][
{"title": ["Citizen Science with Python"], "author": ["Ian Ozsvald"], "description": ["You could make a difference in the world with a little science and Python. We\u2019ll look at several data-driven humanitarian and healthcare projects developed using Python and, all going well, run some audience experiments. By the end of the talk I hope you\u2019ll be looking to run your own experiments with the scientific Python stack."], "date": ["Friday 27 July"], "tags": ["Science", "Data"]},
{"title": ["Code Review Skills for Pythonistas"], "author": ["Nina Zakharenko"], "description": ["As teams and projects grow, code review becomes increasingly important to support the maintainability of complex codebases. In this talk, I\u2019ll cover guidelines for writing consistent python code beyond pep8, how to look out for common python gotchas, and what python tools are available to automate various parts of the review process. Most importantly, I\u2019ll cover the human aspect of code reviews - how we can be better at approaching reviews with empathy and understanding from the perspective of both a reviewer and a submitter. Following these successful code review practices will lead to happier teams and healthier code bases.", "This talk is useful for python developers with any amount of experience. No prerequisite knowledge is necessary. \n- For those who are just starting out, it will be a great general overview.\n- Intermediate developers may not know about the wide variety of tooling that\u2019s available.\n- Advanced developers will learn techniques for performing code reviews with empathy.", "This talk will enable you to have better code reviews on your teams at work, and a better approach to code reviews in open source projects. You\u2019ll leave with 3 main takeaways:\n 1. Code Reviews are most effective when conducted with empathy. If you do reviews with growth and learning in mind, they become tools for sharing knowledge instead of an opportunity to bruise egos or show off esoteric knowledge.\n 2. Python has powerful tooling available for code reviews such as pep8 as a style guide, pylint as a linter, coverage.py to identify test coverage, and vulture to identify dead code.\n 3. That python style guides beyond pep8 have clear benefits in terms of producing more consistent code that\u2019s easier to review and easier to maintain."], "date": ["Thursday 26 July"], "tags": ["Development", "Clean Code", "Programming", "Open-Source", "Code Analysis"]},
{"title": ["Building a Question Answering System using Deep Learning Techniques "], "author": ["Rricha Jalota"], "description": ["Question Answering is an active area of research where the goal is to provide brief and crisp answers to natural language questions. Given a question and a text passage, the task is to answer the question based on the information given in the passage. Traditionally, NLP techniques like noise removal, tokenization,  dependency parsing, named entity recognition etc. are used to extract an answer from the passage. With Deep Learning techniques gaining traction, the focus has now shifted to how neural network architectures can improve the accuracy of Question Answering Systems. \nThis talk will help the audience understand how QA systems work and enable them to build one on their own! \nTalk Outline :\n1. Introduction to Question Answering(Reading Comprehension, in particular)\n2. Discuss available datasets\n3. Baseline Approach to solving the problem using NLP techniques\n4. Walk through the pipeline of deploying Deep Learning models (i.e. preprocessing dataset, generating  word embeddings, building an encoder-decoder model using LSTMs, attention networks and evaluating it) ", "Pre-requisites: Python, Basics of Neural Networks and NLP, Keras   "], "date": ["Friday 27 July"], "tags": ["Scientific Libraries (Numpy/Pandas/SciKit/...)", "Data Science", "Deep Learning", "Jupyter/iPython", "Natural Language Processing"]},
{"title": ["CatBoost - the new generation of Gradient Boosting"], "author": ["Anna Veronika Dorogush"], "description": ["Gradient boosting is a powerful machine-learning technique that achieves state-of-the-art results\nin a variety of practical tasks. For a number of years, it has remained the primary method for\nlearning problems with heterogeneous features, noisy data, and complex dependencies: web search,\nrecommendation systems, weather forecasting, and many others.\nCatBoost (http://catboost.yandex) is a new open-source gradient boosting library, that outperforms existing publicly available implementations of gradient boosting in terms of quality. It has a set of addional advantages.", "CatBoost is able to incorporate categorical features in your data (like music genre, URL, search query, etc.) in predictive models with no additional preprocessing. For more details on our approach please refer to our NIPS 2017 ML Systems Workshop paper (http://learningsys.org/nips17/assets/papers/paper_11.pdf).", "CatBoost inference is 20-60 times faster then in other open-source gradient boosting libraries, which makes it possible to use CatBoost for latency-critical tasks.", "CatBoost has the fastest GPU and multi GPU training implementations of all the openly available gradient boosting libraries.", "CatBoost requires no hyperparameter tunning in order to get a model with good quality.", "CatBoost is highly scalable and can be efficiently trained using hundreds of machines", "The talk will cover a broad description of gradient boosting and its areas of usage and the differences between CatBoost and other gradient boosting libraries. We will also briefly explain the details of the proprietary algorithm that leads to a boost in quality."], "date": ["Thursday 26 July"], "tags": ["Data Science", "Machine-Learning", "Open-Source", "Big Data"]},
{"title": ["Change music in two epochs"], "author": ["Marcel Raas"], "description": ["This talk is about applying deep learning to music. We will look at the raw music data and discover the following:", "Instead of applying it to existing music we will generate our own music using some simple musical rules. The benefit of this is that we are in control of the complexity and we know exactly what is being played. We start out simple and then start adding more instruments, different timbres, etc. As we go up in complexity, we shall see how to adapt our models to be able to deal with it. This gives interesting insights in what structures in deep nets work well.", "I will show:", "For more info, see the github repository at https://github.com/marcelraas/music-generator"], "date": ["Friday 27 July"], "tags": ["Deep Learning", "Algorithms", "Machine-Learning", "Scientific Libraries (Numpy/Pandas/SciKit/...)"]},
{"title": ["Bridging the Gap: from Data Science to Production"], "author": ["Florian Wilhelm"], "description": ["A recent but quite common observation in industry is that although there is an overall high adoption of data science, many companies struggle to get it into production. Huge teams of well-payed data scientists often present one fancy model after the other to their managers but their proof of concepts never manifest into something business relevant. The frustration grows on both sides, managers and data scientists.", "In my talk I elaborate on the many reasons why data science to production is such a hard nut to crack. I start with a taxonomy of data use cases in order to easier assess technical requirements. Based thereon, my focus lies on overcoming the two-language-problem which is Python/R loved by data scientists vs. the enterprise-established Java/Scala. From my project experiences I present three different solutions, namely 1) migrating to a single language, 2) reimplementation and 3) usage of a framework. The advantages and disadvantages of each approach is presented and general advices based on the introduced taxonomy is given. ", "Additionally, my talk also addresses organisational as well as problems in quality assurance and deployment. Best practices and further references are presented on a high-level in order to cover all facets of data science to production.", "With my talk I hope to convey the message that breakdowns on the road from data science to production are rather the rule than the exception, so you are not alone. At the end of my talk, you will have a better understanding of why your team and you are struggling and what to do about it.    "], "date": ["Wednesday 25 July"], "tags": ["Best Practice", "Data Science", "Clean Code", "DevOps general", "Business"]},
{"title": ["Bytecodes and stacks: A look at CPython\u2019s compiler and its execution model"], "author": ["Petr Viktorin"], "description": ["So, you wrote some Python code. What needs to happen before it starts running? And once it\u2019s running, how does Python keep track of what it\u2019s doing?", "I\u2019ll talk about CPython\u2019s tokenization, parsing, bytecode and its serialization and cache, the stack-based virtual machine, line number tables, and code, frame and function objects.", "Don\u2019t worry if you\u2019ve never heard of these concepts. While even experts should learn something new, the talk is aimed at anyone who\u2019s worked on a Python project or two."], "date": ["Friday 27 July"], "tags": ["Compiler and Interpreters", "CPython"]},
{"title": ["Building a Naive Bayes Text Classifier with scikit-learn"], "author": ["Obiamaka Agbaneje"], "description": ["Machine learning algorithms used in the classification of text are Support Vector Machines, k Nearest Neighbors but the most popular algorithm to implement is Naive Bayes because of its simplicity based on Bayes Theorem.", "The Naive Bayes classifier is able to memorise the relationships between the training attributes and the outcome and predicts by multiplying the conditional probabilities of the attributes with the assumption that they are independent of the outcome.  It is popularly used in classifying data sets that have a large number of features that are sparse or nearly independent such as text documents.", "In this talk, I will describe how to build a model using the Naive Bayes algorithm with the scikit-learn library using the spam/ham youtube comment dataset from the UCI repository.  Preprocessing techniques such as Text normalisation and Feature extraction will be also be discussed."], "date": ["Thursday 26 July"], "tags": ["Scientific Libraries (Numpy/Pandas/SciKit/...)", "Data", "Natural Language Processing"]},
{"title": ["Building new NLP solutions with spaCy and Prodigy"], "author": ["Matthew Honnibal"], "description": ["Commercial machine learning projects are currently like start-ups: many projects fail, but some are extremely successful, justifying the total investment. While some people will tell you to \u201cembrace failure\u201d, I say failure sucks \u2014 so what can we do to fight it? In this talk, I will discuss how to address some of the most likely causes of failure for new Natural Language Processing (NLP) projects. My main recommendation is to take an iterative approach: don\u2019t assume you know what your pipeline should look like, let alone your annotation schemes or model architectures. I will also discuss a few tips for figuring out what\u2019s likely to work, along with a few common mistakes. To keep the advice well-grounded, I will refer specifically to our open-source library spaCy, and our commercial annotation tool Prodigy."], "date": ["Thursday 26 July"], "tags": ["Deep Learning", "Data Science", "Natural Language Processing"]},
{"title": ["Bad hotel again? Find your perfect match!"], "author": ["Elisabetta Bergamini"], "description": ["For most travellers, online reviews play a major role when it comes to choosing which hotel to stay in. But can we actually trust a hotel review? And if yes, how can we select which are the most meaningful and interesting for us among the billions available in platforms such as Booking.com, Tripadvisor, Facebook (just to mention a few)?\nFor 10 years now, at TrustYou we have built processes that analyze terabytes of hotel reviews at a global scale, and strive to understand what people complain about or like in the hotels worldwide.\nDealing with a huge amount of reviews written in tens of different languages - each having its own subtle shades of meanings - is the challenge we work on everyday. In this talk, we will show what goes on behind the scenes of the TrustYou Metareview and dive into the technologies and the algorithms that allow us to provide travellers with all the information they need to find the perfect hotel. "], "date": ["Wednesday 25 July"], "tags": ["Data Science", "Machine-Learning", "Natural Language Processing"]},
{"title": ["Autism in development"], "author": ["Ed Singleton"], "description": ["Autism is a condition that correlates with engineering.  Many people in the industry are diagnosed autistic, undiagnosed autistic, or near autistic.  There are many lessons that can be learned from how to deal with autistic people that are very useful in our industry.  These lessons are often also useful when dealing with non-autistic people.  There are many lessons on how to deal with your own autism that are useful to undiagnosed autistic people and near autistic people.", "We will cover the basics of autism, and related conditions.  We will cover simple tricks that can make discussions and changes easier in workplaces (\"10 Simple tricks to make your autistic colleagues shout less!\").  We will also cover techniques you can use for dealing with your own autistic tendencies (\"100 coping mechanisms to pretend that you are normal!\").", "I am a late diagnosis autistic person myself, and will discuss the difference between knowing and not knowing that you are autistic.  "], "date": ["Wednesday 25 July"], "tags": ["Community", "Diversity", "workforce", "The Answer to Life the Universe and Everything Else"]},
{"title": ["Automating testing and deployment with Github and Travis"], "author": ["Alex Gr\u00f6nholm"], "description": ["Maintaining an open source project can be a drag. Especially when you have dozens of them. Besides being tedious , making a new release can be a very error prone process. Maybe you forgot to run the full test suite, forgot to update the release version or tag the release on VCS or maybe you bungled up the upload to PyPI. Fortunately there are things you can do to eliminate entire categories of human errors in the release process \u2013 by automating them.", "This talk uses a trivial project as an example to present a release pipeline, from packaging and testing to deployment, that only requires you to push a git tag to your Github repository. Automation then takes care of the rest and you end up with a new release on PyPI (yay!).", "This talk is mostly useful for open source developers using Github to house their projects, as it heavily leans on Travis, its continuous integration provider . You also need to be at least somewhat familiar with Python packaging and testing in order to follow along. Familiarity with common tools like pytest and tox helps but is not strictly required."], "date": ["Friday 27 July"], "tags": ["Best Practice", "Packaging", "Deployment/Continuous Integration and Delivery", "Tooling"]},
{"title": ["All You Need is Pandas: Unexpected Success Stories"], "author": ["Dimiter Naydenov"], "description": ["Learning to use the awesome Pandas toolkit helped me immensely in lots of ways. Finding novel,\nefficient solutions to complex day-to-day problems with Pandas not only saves time, but can be fun\nand rewarding experience.", "In this talk I\u2019ll present use cases I had to solve, but the \u201ctraditional\u201d approach proved tough\nand/or otherwise frustrating implement nicely. Since I was just starting to learn Pandas, decided to\ntry an alternative solution with it. What I learned changed the way I think about data processing\nwith Python, and it only got better since!", "The use cases deals with extracting pen strokes from handwritten SVG samples, and recomposing them\ninto reusable letters and numbers. When you need to compare each stroke to all others, often more\nthan once, resulted in inefficient, slow, and hard to maintain code. Even a naive Pandas approach\nwith loops helped to reduce both the memory footprint, and improve the performance considerably!\nImproving the implementation further, vectorizing inner loops, and taking advantage of multi-index\noperations, I managed to get the same results, using less memory and a lot faster (by orders of\nmagnitude)."], "date": ["Wednesday 25 July"], "tags": []},
{"title": ["Asyncio in production"], "author": ["Hrafn Eiriksson"], "description": ["Much has been written about asynchronous programming in Python, especially after the introduction of asyncio into the standard library of the language. We\u2019ve all seen the benchmarks that tell us how asyncio-powered web servers massively outperform their non-asyncio counterparts for trivial routes and we\u2019ve seen the articles that tell us how to make the move from flask to aiohttp and why we should. ", "Despite all of this, the question remains: How is it to use asyncio in a production setting? What are the pain points of migrating a large application to use asyncio? How does the performance of this real-world application differ after the migration? Is it still just unicorns and fairy tales? The goal of this talk is to address these questions. ", "If you are curious about taking the step from asyncio-dabbling to creating actual mission critical software systems in asyncio; this is the talk for you!"], "date": ["Wednesday 25 July"], "tags": ["Python 3", "ASYNC / Concurreny"]},
{"title": ["asyncio in Practice: We Did It Wrong"], "author": ["Lynn Root"], "description": ["This talk is aimed at those that have at least intermediate experience in Python and have played around with asynchronous Python using asyncio or other libraries. I want the audience to learn from my mistakes! For instance, how easy it is to get into \u201ccallback hell\u201d (and how to avoid/get out of it), how to screw up thread safety and deadlock yourself, and making code async but not actually concurrent.", "I\u2019ll talk through some anti-patterns and best practices that I learned the hard way. This includes proper concurrency, calling coroutines from synchronous code, working with threads and threadsafety, properly shutting down an async programs, and hidden \u201cgotchas\u201d."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "ASYNC / Concurreny", "failures/mistakes", "Multi-Threading"]},
{"title": ["The pytest/tox/devpi help desk"], "author": ["Oliver Bestwalter"], "description": ["We\u2019ll try to help everyone with their questions around pytest, tox and devpi and how they work together to test and release your packages.", "If you have concrete questions or just want to learn more about these tools, come around and have a chat with us.", "Potential topics and questions are:"], "date": ["Wednesday 25 July"], "tags": ["Best Practice", "Packaging", "Testing"]},
{"title": ["Help desk: choosing (or not) the right NoSQL database"], "author": ["Alexys Jacob"], "description": ["During this ", "help desk", ", some Numberly\u2019s folks will make their ", "field expertise", " available to ", "help you decide on the right database", " for your project.", "The NoSQL databases ecosystem evolved a lot over the last decade and it may be hard to keep up with all their strengths and design patterns. So let\u2019s take this occasion to discuss about them!", "If you are ", "starting up a new project or facing problems and limitations with your current implementation", ", we will try our best to help you choose (or not) the right NoSQL database."], "date": ["Wednesday 25 July"], "tags": ["System Architecture", "Infrastructure", "NoSQL", "Distributed Systems", "Databases"]},
{"title": ["Extending Python with C/C++"], "author": ["Paul Ross"], "description": ["If you want your Python code to run really fast you can get dramatic performance improvements if you are willing to write some of your code in C/C++. There are several ways to do this from traditional Python C extensions to using environments such as Cython or Pybind11. This help desk is here so you can choose the best approach to achieve that magical 100x performance increase without pain."], "date": ["Friday 27 July"], "tags": ["Cython", "Open-Source", "CPython", "Performance"]},
{"title": ["OpenStack Help Desk"], "author": ["Daniel Abad"], "description": ["Come and chat with us about OpenStack! The free and open-source software platform for cloud computing. Get the advantages of infrastructure-as-a-service without the vendor lockin.", "We can answer questions about OpenStack, help you with specific problems or help you get started with contributing to an OpenStack project. Your helpers will be OpenStack developers with years of experience using and developing on a number ofdifferent OpenStack projects.", "We will  have a OpenStack deployment that we can use to demonstrate some of the possibilities."], "date": ["Friday 27 July"], "tags": ["OpenStack"]},
{"title": ["Asyncio in Python 3.7 and 3.8."], "author": ["Yury Selivanov"], "description": ["The talk is aimed to give attendees a clear picture of new asyncio features in Python 3.7 and give an idea of what to expect in Python 3.8.  As a CPython core developer and the lead asyncio maintainer I believe I have a unique perspective to share with EuroPython guests.", "Python 3.7 boasts a number of new amazing features: ", "The first part of the talk will be focusing on new APIs to explain them and give ideas how they can be used in production.", "The second part of the talk will be focused on what to expect to see in asyncio in Python 3.8:", "Some of these ideas are borrowed from Trio and Curio (two other popular async/await Python frameworks), many are borrowed from languages like Erlang and Scala. One thing I can say for certain is that 3.8 will be the biggest and most interesting asyncio release ever!"], "date": ["Wednesday 25 July"], "tags": ["Best Practice", "Distributed Systems", "ASYNC / Concurreny", "failures/mistakes", "Use Case"]},
{"title": ["Basic Data Science tools"], "author": ["Sarah Diot-Girard"], "description": ["The aim of this session is to help data scientists with little experience in Python : ", "Set their environment development: install Python, Jupyter, set Virtualenv , install scientific libraries: Pandas, Numpy, Scipy.. ", "Get started with Jupyter, Pandas  ", "Solve practical issues with Pandas and other scientific libraries  ", "Get started with Matplotlib and other dataviz tools "], "date": ["Thursday 26 July"], "tags": ["Visualization", "Data Science", "Jupyter/iPython Notebook", "Scientific Libraries (Numpy/Pandas/SciKit/...)"]},
{"title": ["Python Game Console"], "author": ["Radomir Dopieralski"], "description": ["Learning to make video games is a great way to learn about computers. They are not only very motivating and rewarding, but also teach a very difficult kind of programming \u2014 real-time, interactive applications. In the process you also learn about graphics, sound, graphs, artificial intelligence, data structures and algorithms, not because someone tries to teach you, but simply because you actually need all this to make your game. Knowledge gained this way has its own unique quality.\nUnfortunately, while Python is an excellent language for learning, it doesn\u2019t make it easy to make games. The number of hoops you have to jump through for installing and configuring everything on every single computer on which you want to run your game makes it really hard to start, and even harder to show your creations to your friends.\nTo make things easier, I have built a number of devices dedicated to game development, which remove as many of the obstacles as possible to let you simply start on making your game, without distractions."], "date": ["Thursday 26 July"], "tags": ["Gadgets", "Teaching", "Education", "Game-Development", "MicroPython"]},
{"title": ["What do a model boat and a giant laser have in common?"], "author": ["Thomas Kluyver"], "description": ["Last year, I was part of a team building a small autonomous sailing boat. This year, I started working at European XFEL, a research facility built around a 3km long X-ray laser. Both projects use Python in their control systems, and despite the vastly different size and budget, they have surprisingly similar architectures, with separate processes sending data to each other using sockets.", "We wrote the code for our sailing boat using an open source framework called the Robot Operating System, or ROS. ROS is built around the concept of communicating nodes: a node can publish messages on a named topic, and any other nodes subscribed to that topic will receive the message. Our boat runs about 15 nodes (the precise number depends on what task it\u2019s doing). This isn\u2019t the only way to drive a robot boat: the team from Aberystwyth, whose code is also open, use a very different architecture.", "European XFEL, in Hamburg, is a new \u20ac1.2 billion collaboration between 12 countries. The control and data analysis systems are built on a framework called Karabo, developed in-house. Karabo \u2018devices\u2019 - which can encapsulate hardware interfaces or software processing - communicate using both a central message broker and point-to-point channels.", "I\u2019ll describe each of these projects, and the similarities and differences between their software systems. Then I\u2019ll talk about what has been good and bad on each project, and what patterns and ideas we can take from them for designing other systems, including systems that don\u2019t control hardware."], "date": ["Friday 27 July"], "tags": ["Science", "Engineering", "Robotics", "Architecture", "Case Study"]},
{"title": ["Python and Raspberry Pi"], "author": ["Ben Nuttall"], "description": ["Explore physical computing and more using Python on Raspberry Pi", "The Raspberry Pi is a small affordable computer which runs a Debian-based operating system called Raspbian. It has been designed for the purpose of education, and it is also used by hobbyists and in industry across the globe.", "The Raspberry Pi Foundation is a charity that works to put the power of digital making into the hands of people all over the world by making computing accessible to all. More than 15 million Raspberry Pi computers have been sold since the first product launch in 2012, and all sales profits go towards the Foundation\u2019s educational programmes, courses, and resources.", "The poster covers:"], "date": ["Friday 27 July"], "tags": ["Internet of Things (IoT)", "Other Hardware", "Raspberry PI", "Education", "Open-Source"]},
{"title": ["Plone and modern frontend frameworks"], "author": ["Paul Roeland"], "description": ["Plone has a long track record in being the premier Python-based web CMS. Yet, recent years have seen an acceleration in frontend technologies. With a stable restful API, it is now possible to use your favorite frameworks like React or Angular to create modern and bespoke frontends and apps, while still using all of  the  stability, security and workflow that a mature product such as Plone provides.  ", "Cake. Have. Eat. ", "The poster will highlight the state-of-the-art, used-in-production methods, widget libraries and updated UI/UX."], "date": ["Thursday 26 July"], "tags": ["CMS", "JavaScript", "RESTful", "Plone", "Open-Source"]},
{"title": ["introduce Python community/conf, and cross region community in Asia."], "author": ["Noah Chen"], "description": ["PSF(Python Software Foundation)  help most people who want to learn Python, and we also join so many meetup/event/conference organized by PSF or related to PSF. in Europe, thanks EuroPython Society doing a lot of jobs in handle or manage so many different region. \nPython is also very popular in Asia. me , Noah who is from Taipei, learn Python and join Taipei.py and PyConTW since 2014. I received the passion from member of Python Community in Taipei, not only in Taiwan, we also have 9 python communities in different cities around Taiwan, included KaoHsung, TaiChung, Tainan, HwaLien, TaoYoung, and we also have 2 female community which called: PyLadies Taipei, and DjangoGirls Taipei. \nin Taipei, we already have so many open source event or conference , what different to Python Community or PyConTW? the reason I want to join and contribute Python is : I can connect the world through Python. PyConTW is found by yyc(Yung-Yu Chen) since 2012. at 2012, PyConTW always invite famous people in Python to present in PyConTW, and also, outstanding speakers always bring their outstanding python friends. PyConTW is the first and most foreigner audiences or speakers international Open Source Conference I joined. this is way I can connect the world, face to face. \nnot only PyConTW, I also try to connect PyCon around Asia, like PyCon Japan, and Korea, I am be a volunteer since 2016, and going on. being a volunteer of PyConMY APAC and PyConID in 2017. this is the contact and connect the world we want to share in Python, and want to contribute in Python in Asia.\nnow , I join FOSSASIA, being a volunteer of FOSSASIA, I can help to promote my experience of Python and FOSS to people in Taipei. and now, I want to share my Asia experience to python friends in Europe."], "date": ["Friday 27 July"], "tags": ["Python Software Foundation (PSF)", "Communication", "Conferences and Meet-Ups", "Diversity", "Community"]},
{"title": ["Making neural networks portable with ONNX"], "author": ["Micha\u0142 Karzy\u0144ski"], "description": ["The world of deep learning frameworks is complex. It seems that every major company has their own product in this space. Some have great features, others have great performance, so its very difficult to choose the right one. But what if you didn\u2019t have to limit your choice to just one? What if you could use the most developer-friendly framework for designing a neural network, the most efficient framework for training and finally the lightest one for inference on edge devices? That\u2019s the idea people at Facebook, Microsoft and Amazon were thinking about when they created the ONNX format.", "Open Neural Network Exchange (ONNX) is a binary file format, based on Protocol Buffers, designed to store representations of neural networks. Networks are stored as computational graphs and the format supports saving both the network architecture and trained weighs.", "ONNX is an open standard and it\u2019s gaining broad community support. Tools already exist for importing and exporting models from frameworks such as Caffe2, PyTorch, Microsoft Cognitive Toolkit (CNTK), Apache MXNet, Chainer, TensorFlow, SciKit-Learn. ONNX support will be built directly into Windows and Apple\u2019s CoreML. Runtimes exist for other environments such as servers and neural network accelerators (Intel\u2019s nGraph), GPUs (NVIDIA\u2019s TensorRT) and more. Other tools such as Netron and Visual DL allow you to visualize and inspect your ONNX models.", "My poster will describe the capabilities of ONNX and demonstrate them through code samples and screenshots. We\u2019ll also cover ONNX\u2019s current limitations and areas of future development."], "date": ["Friday 27 July"], "tags": ["Deep Learning", "Data Science", "Open-Source", "Machine-Learning"]},
{"title": ["Hardening Plaintext Secrets in Configuration Files"], "author": ["Mois\u00e9s Guimar\u00e3es"], "description": ["Many applications and services rely on configuration data in order to behave according to the customer needs. The standard library gives us ConfigParser, and many projects use it to achieve easy configuration with plaintext config files.", "OpenStack Common Libraries (Oslo) has an enhanced alternative called oslo.config with support to command line arguments, option deprecation, and much more. With the addition of the source drivers feature, it is possible to increase the security of config values storing them in a safer place.", "The source drivers feature allows extra sources of configuration data other than plaintext config files adding the possibility to have other layers of security around the configuration values and increasing the fail-safe options."], "date": ["Thursday 26 July"], "tags": ["Development", "Best Practice", "Security", "Open-Source", "Command-Line"]},
{"title": ["Human Mobility Patterns"], "author": ["Antonia Tugores"], "description": ["Research on mobility has traditionally relied on surveys and datasets generally composed of small samples with a low spatio-temporal resolution. However, the situation is now changing with digital data sources. We use geolocated data from different contexts to analyse human mobility at different levels and predict people fluxes between cities.", "Studies can be done at different levels ranging from intracity to intercontinental trips. Do tourists and residents behave in the same way when in the same city? Are we prone to visit some cities if we have visited another one? What about train and private transport networks, do people from different countries show different patterns? Can we predict people fluxes between cities?", "Being one of the main programming languages when talking about data analysis and data science,  Python and its data analysis ecosystem have been the barebones of this research."], "date": ["Thursday 26 July"], "tags": ["Science", "Physics", "Predictions", "Analytics", "Data"]},
{"title": ["Double the money you give PSF, etc., without paying more!"], "author": ["Steve Barnes"], "description": ["Many organisations, especially the larger ones, have \u201cmatching gifts\u201d programs.", "If you work for such an organisation you can potentially double or more the value of any gifts that you give to the EuroPython Society, (EPS), & Python Software Foundation, (PSF), and others.", "No coding experience is needed just a varying amount of persistence & patience."], "date": ["Wednesday 25 July"], "tags": ["Python Software Foundation (PSF)", "EPS", "The Answer to Life the Universe and Everything Else"]},
{"title": ["Discovering the nuclear reactor\u2019s stability with SLEPc and Python"], "author": ["Javier Jorge"], "description": ["Different engineering models such as physic simulations or information retrieval rely on modelling and solving large-scale sparse eigenvalue problems, such as fluid simulation or document retrieval. SLEPc (http://slepc.upv.es) is a software library for the solution of this kind of algebraic problems on distributed computers. We can use this with Python through slepc4py to provide solutions to these computationally expensive problems, using parallelization with different schemes.", "In this poster we introduce slepc4py (https://bitbucket.org/slepc/slepc4py), a python wrapper for SLEPc, along with the problem of determining the nuclear reactor\u2019s stability, a problem that is modeled as obtaining the eigenvalues of certain matrices that are large and sparse. We introduce the techniques that are implemented in SLEPc for solving a problem with these characteristics."], "date": ["Friday 27 July"], "tags": ["Scientific Libraries (Numpy/Pandas/SciKit/...)", "Case Study", "Data", "C-Languages", "Science"]},
{"title": ["Fifty Shades of Disaster - Human Error and Complex Systems"], "author": ["Paul Ross"], "description": ["This four part tutorial describes the failures that can happen when humans interact with complex systems. Complete with case studies, this gives valuable lessons for developers, project managers and DevOps engineers. Learn from the mistakes of others as you won\u2019t live long enough to make them all yourself and this talk gives you that opportunity!", "Part 1: Complexity, Coupling and Systems Failures\nA gentle introduction to \u201cmodern accident theory\u201d. We examine the essential characteristics of complex systems and the operators who control them. A life hack is here along with two case studies of software disasters.", "Part 2/4: A Concise History of Civil Aviation\nCivil aviation has moved from very risky to extraordinarily safe. How this was done has valuable lessons for other industries. We looks at the challenges faced by civil aviation, how they were overcome and what we could learn from this.", "Part 3/4: Blame and the Fallacy of Root Cause Analysis\nSo disaster has finally happened, now, how do you go about preventing futures disasters? The obvious ways are wrong. So how do you investigate failure and how do you apply those lessons?", "Part 4/4: Skill, Luck and Sheer Professionalism\nSometimes the human element, the operators, are not hapless perpetrators complicit in the disaster but actively prevent catastrophe. This talk is full of case studies where this happened. An analysis of these case studies will help you to improve your own resilience."], "date": ["Wednesday 25 July"], "tags": ["Operations", "Case Study", "Best Practice", "DevOps general", "failures/mistakes"]},
{"title": ["Best practices for elegant experimentation in data science projects (case study)"], "author": ["K K"], "description": ["In the course of the project, data scientists face multiple issues. Difficulties with reproducibility, lack of the ability to prepare experiments quickly and dirty data are just three examples. Data science projects involve a lot of experimentation and quick adoption of new ideas and technologies. Such environment makes it difficult to keep the code clean as well as keep track of small changes that makes new experiment successful.", "Here, we use an instance segmentation challenge - called Mapping Challenge - hosted on the crowdAI platform to show: 1) our best practices when working in data science projects, 2) competition results. Our best practices involve usage of the steppy library, which provides minimal interface for building machine learning pipelines. Besides this, we organized our work in a transparent and open way, publishing code, tasks and experiments results.", "On the poster, we share our results regarding pre- and post-processing routines, network architectures and training scheme. We also present technology stack that we use. It is a blend of well established Python packages (like numpy and sklearn) and our own open source initiatives, that is steppy and steppy-toolkit.", "Poster is for Pythonists looking for: 1) example solution to the instance segmentation task, 2) ideas how to organize data science project."], "date": ["Friday 27 July"], "tags": ["Best Practice", "Data Science", "Clean Code", "Open-Source", "Machine-Learning"]},
{"title": ["Create your own Artificial Intelligence to monitor your Linux System!"], "author": ["Maha Mdini"], "description": ["The object of this session is to explain how one may apply simple statistical calculations and Machine Learning techniques to monitor one\u2019s Linux system. Systems, running services and installed applications generate a large amount of logs. One may create also customized logs for a particular purpose. ", "These logs may be processed in real time or in demand by the means of smart Python scripts for varied purposes:", "1- Optimizing the performance of the system by monitoring the systems logs  (e.g. boot logs) and modeling metrics such as CPU/memory usage, monitoring the performance of services such as HTTP,  MySQL\u2026", "2- Securing the system from external threats by monitoring browsing, ports, login logs \u2026, as well as from internal crashes by monitoring kernel logs", "3- Modeling one\u2019s daily behavior by measuring the frequency/correlations of the usage of applications/services \u2026  "], "date": ["Thursday 26 July"], "tags": ["Scientific Libraries (Numpy/Pandas/SciKit/...)", "Data Science", "Open-Source", "Linux"]},
{"title": ["Cloud-Agnostic Deployment of Distributed TensorFlow"], "author": ["Javier Jorge"], "description": ["In this poster we will see how to deploy the required infrastructure to create a TensorFlow cluster, and then provision the software to train the model. For doing this, we will use the Infrastructure Manager (http://www.grycap.upv.es/im/index.php) that supports API\u2019s from different virtual platforms, making user applications Cloud-agnostic. In addition, it integrates a contextualization system, based on Ansible, to enable the installation and configuration of all the required applications providing a fully functional Deep Learning infrastructure on the Cloud provider that we need.", "Outline: "], "date": ["Thursday 26 July"], "tags": ["Science", "Deep Learning", "Scientific Libraries (Numpy/Pandas/SciKit/...)", "Machine-Learning", "Case Study"]},
{"title": ["Asynchronous operations at scale"], "author": ["Hubert Bry\u0142kowski"], "description": ["This talk will cover main purpose, differences, advantages and shortcoming of synchronous and asynchronous operations. Using real life  infrastructure as an example, Hubert will demonstrate how actions like adding a new content can be processed in a non-blocking way. Such approach is more taxing on development time but can be highly beneficial if your application has to sustain high access rate and respond swiftly.\nBy attending the talk you will learn how we build application that support >100M monthly users, what problem arise in such high pace environments and what trade off application developer has to make."], "date": ["Wednesday 25 July"], "tags": ["Performance", "Architecture", "ASYNC / Concurreny", "Multi-Processing", "Microservices"]},
{"title": ["Technologies to master Parallelism in Python"], "author": ["Shailen Sobhee"], "description": ["Parallelism in Python has been a mysterious pinnacle of language mastery for many years, and with a few advancements in the community it has become even easier to do so.  From easy imported threadpool controls, to advanced multiprocessing affinity and pinning techniques, the options to achieve parallelism are now quite within reach.  In this workshop, learn how to use these frameworks to augment one\u2019s Python code to enable granular control over parallelism workloads and combat oversubscription.", "Slides: https://www.scribd.com/document/384826546/EuroPython-2018-Shailen-Sobhee"], "date": ["Tuesday 24 July", "Tuesday 24 July"], "tags": ["Performance", "Multi-Processing", "Scientific Libraries (Numpy/Pandas/SciKit/...)", "Multi-Threading"]},
{"title": ["Writing and Running Tests in Docker"], "author": ["Alexandre Figura"], "description": ["\u201cHow to Launch your Tests with Docker Compose: Best Practices and Traps to Avoid\": that would make a great title for a book! Unfortunately, there is no such book available currently. In the meantime, we are all struggling on how to make our applications running in Docker\u2026 Because there is so many ways to do it, it\u2019s often hard to find out what is the best way to do it.", "But with some practice, and many trials/errors, some patterns take shape. That\u2019s what we will see during this training session. We will start by writing some tests for a web application with Pytest. Then, we will automate them with Tox. And to finish, we will run them in Docker Compose. Our development workflow will be managed with Invoke, and our goal will be to have tests independent of the running environment, so they can be run both locally or on a continuous integration server (e.g., GitLab with Kubernetes runners).", "Requirements:"], "date": ["Tuesday 24 July", "Tuesday 24 July"], "tags": ["Best Practice", "Docker", "Deployment/Continuous Integration and Delivery", "Test Libraries (pyTest/node/...)", "Tooling"]},
{"title": ["Ridiculously Advanced Python"], "author": ["Francesco Pierfederici"], "description": ["If you have been using Python for some time already and want to reach new heights in your language mastery, this training session is for you!", "Python has a number of features which are extremely powerful but, for some reason are not particularly well known in the community. This makes progressing in our Python knowledge quite hard after we reach an intermediate level. Fear not: this session has you covered!", "We will look at some advanced features of the Python language including properties,  class decorators, the descriptor protocol, annotations, data classes and meta-classes. If time allows we will even delve into the abstract syntax tree (AST) itself. ", "We will use Python 3.7 and strongly recommend that attendees install a reasonably recent version of Python 3 to make the most out of the training.", "Warning: some of the topics presented will almost certainly assure an early end to an otherwise successful career in software engineering :-)", "Source code available on GitHub: https://github.com/pythoninside/europython2018"], "date": ["Monday 23 July", "Monday 23 July", "Monday 23 July"], "tags": ["Software Design", "Type-Hinting", "Meta Classes", "Programming", "Python 3"]},
{"title": ["Real-time transcription and sentiment analysis of audio streams"], "author": ["Aaron Bassett"], "description": ["In this training session, we\u2019re going to learn how to create a virtual rapporteur. A digital assistant who can join any conference call; record it and provide participants with real-time insights into the overall tone of the call. Once the call is complete, we\u2019ll look at how we can use the call recording to provide participants with a text transcript as well as meta information about the call such as the most talked about concepts, keywords and entities.", "Attendees", ": you should be familiar with Python and the command line.  You will also need to sign-up for a free ", "Nexmo", " and ", "IBM Watson", " account to access their APIs.", "We\u2019ll be coding the application in Python and JavaScript, with the ", "Hug", ", ", "Tornado", " frameworks; so a knowledge of both languages would be beneficial but is not required. We will be making heavy use of several APIs, so experience with REST and WebSockets will help."], "date": ["Monday 23 July", "Monday 23 July"], "tags": ["Visualization", "JavaScript", "Natural Language Processing", "Machine-Learning", "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)"]},
{"title": ["Privacy for Data Scientists"], "author": ["Andreas Dewes"], "description": ["As data and information security become core components of managing user data, data scientists are keen to expand their knowledge and skills relating to data privacy and security basics. As of May 2018, the European General Data Protection Regulation affects how European residents can access and grant consent to use their data. As European data scientists, we now have an obligation as well as distinct motivation, to practice data science with attention to data privacy.", "In this workshop, we will introduce some of the basics in terms of defining privacy within the realm of data collection, modeling and machine learning. A focus on practical knowledge and code, we will cover how one can implement some of these algorithms with Python. Students will be presented with these theories along with recent research on privacy-preserving models, so they can leave with a better understanding of how to apply privacy principles to data science in their work and study."], "date": ["Tuesday 24 July", "Tuesday 24 July"], "tags": ["Security", "Data", "Jupyter/iPython", "Machine-Learning", "Privacy"]},
{"title": ["Introduction to Big Data Processing using Spark and Python"], "author": ["Raoul-Gabriel Urma"], "description": ["This workshop will provide a hands-on introduction to the Big Data ecosystem, Hadoop and Apache Spark in practice. Through practical activities in Python, you will learn how to apply Apache Spark on a range of datasets to process and analyse data at scale. ", "After taking this workshop you will be able to: ", "SETUP\nDownload / Clone the repository: http://gitlab.cambridgespark.com/pub/bigdata-spark", "Follow the instructions in the SETUP.md file: http://gitlab.cambridgespark.com/pub/bigdata-spark/blob/master/SETUP.md"], "date": ["Monday 23 July", "Monday 23 July"], "tags": ["Data Science", "Jupyter/iPython", "Big Data"]},
{"title": ["Introduction to Pandas, Testing and Test-Driven Data Analysis"], "author": ["Nick Radcliffe"], "description": ["This is replacement training for Sandrine\u2019s Intro to Pandas and SciKit Learn, which she sadly won\u2019t be able to present because she has recently broken her nose!", "This training will introduce Pandas (and Numpy) for people who either haven\u2019t used them at all or are just getting started with them. It will then go on to introduce testing in Python (in general), with unittest, and testing analytical code, in particular, with the test-driven data analysis package.", "Planned content:", "Pandas and Numpy:\n  - what they are\n  - why you should used them\n  - how to use them\n  - basic numpy concepts (arrays, dtypes, array operations, zeros, ones, creating new arrays, where, choose, sum, size etc.)\n  - pandas basics: DataFrames, creating DataFrames, loading data, indices\n  - creating new columns, appending DataFrames, merging DataFrames, groupby operations, plotting.\n  - loading and saving data (pickle; csv, feather)", "Testing\n  - the idea of testing and test-driven development\n  - the unittest library basics: unittest.TestCase, unittest.main, verbosity, self.assertEqual and friends.\n  - slightly advanced unittest basics: setUp, tearDown, setUpClass, tearDownClass\n  - unit tests vs. integration and system tests\n  - pytest as an alternative to unittest", "Test-Driven Data Analysis:\n  - making the case for testing analytical processes\n  - extending the ideas from software testing to reference tests for analytical processes with ReferenceTestCase from the TDDA library\n  - Using constraints to test data (input; output; intermediates).\n       - Automatically generating constraints from known good data\n       - Verifying data against generated (or hand-created) constraints \n       - Detecting bad data (and anomalies)", "PREPARATION:", "As a bare minumum, you will need a working Python (preferably 3.6 or 3.7, though 2.7 could be used) with numpy and pandas installed, preferably with JupyterLab. Anaconda is a great way to get all this.", "Ideally, you should also have installed the TDDA library, the feather library and the pmmif library in case the network is overloaded during training.", "All dependencies are available from Github:"], "date": ["Monday 23 July", "Monday 23 July"], "tags": ["Test Driven Development (TDD)", "Data Science", "Testing", "Scientific Libraries (Numpy/Pandas/SciKit/...)"]},
{"title": ["Data Wrangling & Visualisation with Pandas & Jupyter"], "author": ["Alexander Hendorf"], "description": ["One of the best tools around for data wrangling and analysis in Python is is Pandas. With Pandas dealing with data-analysis is easy and simple but there are some things you need to get your head around first as Data-Frames and Data-Series. ", "After this tutorial you will be able to work with Pandas and make simple data analytics incl. visualisations. \nPandas is not only useful in data science it\u2019s also a great tool for creating e.g. sales reports or any other data-driven report required in business.\n It\u2019s easy to make fancy analytics while integrating with fellow co-workers used working with Excel.", "Please do come prepared and follow these simple ", " installation instructions", "Pandas features directly accessible, powerful visualisations.", "The workshop will be provided as Jupyter notebook for the attendees to follow along."], "date": ["Tuesday 24 July", "Tuesday 24 July"], "tags": ["Scientific Libraries (Numpy/Pandas/SciKit/...)", "Data Science", "Business", "Analytics"]},
{"title": ["Fast native code with Cython"], "author": ["Stefan Behnel"], "description": ["Cython", " is not only an excellent and widely used tool to speed up computational Python code, it\u2019s also a very comfortable way to talk to native code and libraries. The Cython compiler translates Python code to C or C++ code, and supports static type annotations to allow direct use of C/C++ data types and functions. The tight integration of all three languages makes it possible to freely mix Python features like generators and comprehensions with C/C++ features like native data types, pointer arithmetic or manually tuned memory management in the same code.", "This tutorial by a core developer introduces the Cython compiler by interactive code examples, and shows how you can make it generate fast binary modules that talk to native libraries, as easily as Python itself.", "Attendees should make sure they have a C compiler installed and configured to build binary Packages for CPython. We will use CPython 3.6/7, although all examples can also be followed with CPython 2.7. If you\u2019re not on Linux, I recomment using a ", "conda", " environment with gcc.", "Update 2018-07-23", ": Please set up a virtualenv or conda-env with the following tools:"], "date": ["Tuesday 24 July", "Tuesday 24 July"], "tags": ["Cython", "Compiler and Interpreters", "C-Languages", "Performance"]},
{"title": ["Get your documentation right"], "author": ["Daniele Procida"], "description": ["This workshop introduces, and helps you implement, an approach that ", "will", " improve your project\u2019s documentation.", "This approach focuses on documentation ", "structure", ". Based on sound, well-established principles concerning a number of topics (including learning, understanding, praxis, pedagogy amongst others) it provides a documentation framework that is easy to understand, straightforward to put into practice, and above all, immediately and enduringly effective.", "In the workshop we\u2019ll use a hypothetical documentation set for examples, but attendees should have some actual documentation - whether already extant or in the planning phase - to apply it.", "The principles used in this workshop are outlined at https://www.divio.com/en/blog/documentation/. This work has been presented in numerous conference talks, such as https://www.youtube.com/watch?v=t4vKPhjcMZg.", "It has been applied successfully to many software projects, making the documentation better for users, and more manageable for its maintainers."], "date": ["Tuesday 24 July", "Tuesday 24 July"], "tags": ["Documentation"]},
{"title": ["Descriptors and Metaclasses - Understanding Python's More Advanced Features"], "author": ["Mike M\u00fcller"], "description": ["Descriptors and metaclasses are advanced Python features. While it is possible to write Python programs without active knowledge of them, knowing more about them facilitates a deeper understanding of the language. With examples, you will learn how they work and how to write your own descriptors and metaclasses. Furthermore, you will understand when to use and when better not to use them.", "This tutorial is a systematic introduction to descriptors and metaclasses. It covers all relevant information with a focus on practical applications for common tasks.", "In hand-on sessions you will learn how to write your own descriptors that adapt attribute access to your needs. You will experience how metaclasses can help you to get more insight into a code base.", "Use cases provide working code that can serve as a basis for your own solutions. You will gain a deeper understanding of more advanced concepts that can help to write better programs.", "The training is designed for Python 3 (3.6+ preferred). Most of the material will work with Python 2.7, sometimes requiring minor modifications. I will use  a ", "Jupyter Notebook", " in [Jupyterlab] ( https://github.com/jupyterlab/jupyterlab) in the training. I encourage you to try them out. Otherwise any editor, IDE, or interactive Python environment your prefer works. No other 3rd party libraries to install. Please download the ", "course material", ".\nI\u2019ve been delivering these topics over the last years as a part of numerous advanced corporate trainings and open courses as well as trainings at PyCon US, EuroPython, PyCon PL, PyCon DE, and PyCon IE. The material has been continuously refined based on the  feedback from participants."], "date": ["Tuesday 24 July", "Tuesday 24 July"], "tags": ["Best Practice", "Programming", "Python general", "Use Case"]},
{"title": ["Building your own sports trading bot"], "author": ["Tomasz Dziopa"], "description": ["In this workshop participants will get a glimpse into the world of automated sports trading. The workshop will start out with an introduction into the realm of betting exchanges, trading bots and the strategies that can be employed to successfully trade sports. After the introduction we will move into a more \u201chands on\u201d session where everyone will get API access to the Smarkets betting exchange and a skeleton of a trading bot which can then be extended with the ultimate goal of creating your first sports trading bot!", "The requirements for this workshop will be basic knowledge of Python and RESTful APIs. Basic knowledge of statistics would also be helpful but is not essential. Last but not least: Do bring your laptops!"], "date": ["Tuesday 24 July", "Tuesday 24 July"], "tags": ["python", "Trading", "APIs"]},
{"title": ["A Python-flavored Introduction to Containers And Kubernetes"], "author": ["Ruben Orduz"], "description": ["NOTE: This workshop is for very beginners. If you already have had experience with containers and/or Kubernetes, you likely not get much out of this training.", "While not required, if you want to follow along, please follow this link below to set your environment up:\n", "requirements", "Containers have more or less taken over the world of application, web APIs, mobile endpoints and other forms of deployment. They have become the currency, the \u201ctable stakes\u201d and de-facto application deployment unit. Their raise to the fore has brought about a whole host of use cases which weren\u2019t practical or accessible in the world of \u201cclassic\u201d paradigms of infrastructure and virtualization. Containers have also brought application deployment closer and more accessible to developers. ", "But as more use cases, deployment styles and exponential adoption of containers was ongoing, a new set of problems began to surface: how do you manage the ever growing number of containers in a deployment? How do you make sure containers have the right resources, deployed to the right machine, running with the correct parameters, how do you scale in and out without disruption? How do you make sure in a fleet of X containers that they\u2019re all running and in healthy state? Enter Kubernetes.", "The goal of this course is to give the attendees a solid foundation of the core concepts mentioned above both in theory and hand-on practice using docker, kubernetes and friends to deploy a sample multi-tier python web application. All attendees need is a laptop with minikube installed and an Internet connection.", "Full course outline and abstract (because character limit) ", "here", ". ", "This training is an up-to-date version of the training delivered at last year\u2019s EuroPython"], "date": ["Monday 23 July", "Monday 23 July"], "tags": ["Docker", "DevOps general"]},
{"title": ["Build, Deploy, Win with Serverless Applications"], "author": ["Kyle Knapp"], "description": ["Serverless applications make it easy for you to run your code without managing servers. Serverless applications can range anywhere from running web applications, to real-time data processing systems, to cron jobs in the cloud. Taking a hands-on approach, this tutorial will teach you how to write and deploy serverless applications in a matter of minutes! No prior experience with serverless applications needed.", "Using AWS Chalice, a Python serverless microframework for AWS, you will be developing serverless applications that run on AWS Lambda, a service run that lets you run code without provisioning or managing servers. In the process of developing these serverless applications, you will learn how to:", "\u2022   Quickly and effectively develop and deploy serverless applications", "\u2022   Utilize best practices in developing serverless applications", "\u2022   Build a wide range of serverless applications by leveraging other AWS services alongside AWS Lambda", "No prior experience in serverless application or AWS is needed, but please make sure your development environment meets the prerequisites of the workshop:", "\u2022   Python 2.7 or 3.6", "\u2022   Virtualenv", "\u2022   AWS credentials", "\u2022   git", "More information on environment setup can be found in the following link: \nhttps://chalice-workshop.readthedocs.io/en/latest/env-setup.html"], "date": ["Monday 23 July", "Monday 23 July"], "tags": ["Public Cloud (AWS/Google/...)", "Web", "Best Practice", "APIs", "Microservices"]},
{"title": ["Best Practices for a Blazing Fast Machine Learning Pipeline"], "author": ["David Liu"], "description": ["Getting through preprocessing to analytics to insights quickly has been the crux of many a Data Scientist.  In this workshop, learn about the best tools, techniques, and frameworks that allow for a fast machine learning pipeline\u2014topics covered will include preprocessing vectorization tricks, distributed dataframe handling, along with tips and tricks to help scale out one\u2019s machine learning code out to cloud or clusters. ", "Workshop Overview:", "-Introduction", "-Tools and Techniques", "-Data preprocessing", "-Break (15 min)", "-Data Visualization", "-Machine Learning", "-Options for scaling and pipelining", "-Break (15 min)", "-Hands-on: Advanced tools", "-Hands-on: Chaining it together", "-Prerequisites are from the two Github repos utilized for the training: (slides in repo)https://github.com/triskadecaepyon/ep_2018_workshop  and https://github.com/IntelPython/workshop"], "date": ["Monday 23 July", "Monday 23 July"], "tags": ["Scientific Libraries (Numpy/Pandas/SciKit/...)", "Data Science", "Machine-Learning"]},
{"title": ["Writing good error messages"], "author": ["Paul Keating"], "description": ["Anyone who has ever conducted an elementary programming course, or even answered a question on StackOverflow, will know that reading error messages is a skill that beginners have to learn. \nIt is less widely appreciated that writing good error messages is also a skill that must be learnt.\nThis talk is in two parts. \nThe first covers the commonest error message gaffes:\n\u2022   Insufficiently explicit messages.\n\u2022   Issuing the same message for two different conditions.\n\u2022   Suppressing the stack trace.\n\u2022   Polluting the stack trace.\nThe second part describes a way to ensure usable, actionable error messages, even when the writer of the message is not a professional coder. This was developed for an environment where superusers code up most of the dozens of data validation rules and the accompanying messages, and the application in which Python is embedded suppresses the stack trace."], "date": ["Friday 27 July"], "tags": ["Programming", "Python general"]},
{"title": ["Why develop a CLI (Command Line Interface) first?"], "author": ["Steve Barnes"], "description": ["One of the core concepts of Application Development, (not just in python), is the separation between the Business Logic and the User Interface. However there is a strong temptation to start with the user interface and add the business logic to it some methodologies emphasize this with the process of prototyping the (G)UI first. The danger is that your business logic code can get too entangled with the UI and a change of platform or framework becomes almost impossible.", "This presentation will show how to maintain a clear separation between the Business Logic and the User Interface by starting with a command line interface using argparse and growing a GUI on top.", "We will cover:\n - Why maintain the seperation\n - Using argparse\n - Adding a GUI layer with wxPython\n - Automating the GUI generation\n - Adding a web interface\n - Testing advantages of this approach\n - Scripting advantages\n - Some packaging models.", "Slides and Samples all uploaded to https://github.com/GadgetSteve/EP2018_Talk"], "date": ["Thursday 26 July"], "tags": ["Software Design", "Development", "Packaging", "Command-Line", "Cross-Platform-Development"]},
{"title": ["Winning card games with 1000+ CPUs"], "author": ["vincent warmerdam"], "description": ["Vincent was playing a card game against his girlfriend and he kept loosing. So he wanted to train a bot to play on his behalf. This is our story.", "We\u2019re using AWS Lambda to get better at a card game named SushiGO. We make a small genetic algorithm in Python that uses AWS Lambda as a backend. The talk consists of these parts:", "This talk will discuss an algorithm that we\u2019ve tried to improve in three ways:", "We will conclude by discussing whether or not AWS Lambda is suitable for a gridsearch/grid simulation (hint, it\u2019s not meant for this task, but it actually kind of works very well)."], "date": ["Friday 27 July"], "tags": ["Python 3", "Algorithms", "Predictions", "Command-Line", "ASYNC / Concurreny"]},
{"title": ["When to use Machine Learning: Tips, Tricks and Warnings"], "author": ["Pascal van Kooten"], "description": ["Artificial Intelligence, and machine learning in particular, is one of the hottest topics in tech/business.\nI will explain the core of machine learning, and the main goal of this talk will be to help you judge the success whenever someone yells \u201cI know! let\u2019s solve this using machine learning!\u201d. I will also provide tips and tricks on how to increase the success of such projects. The second part of the talk will be about 2 open-source python projects I\u2019ve created, as well as a project I\u2019m working on regarding the trading of cryptocurrency\u2026 and their relation to machine learning. Specifically, the challenges and findings in making these cases work will be explored."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "failures/mistakes", "Open-Source", "Machine-Learning", "Use Case"]},
{"title": ["What makes coding for MicroPython different?"], "author": ["Andrey Vlasovskikh"], "description": ["A microcontroller unit is a CPU, memory modules, and I/O devices on a single chip. There are tens of billions of microcontrollers in world: they are everywhere from watches to cars. Developers program them mostly in C, since their tiny hardware resources make it very hard to use higher-level langauges such as Python. In 2014 the MicroPython project was started with the goal of making it possible to program microcontrollers in Python.", "Was it hard to make Python work on a device with only 16 KB of RAM? Is MicroPython a Python dialect or is it a different language? I\u2019ll start with the most important optimizations and the key differences in the language implementation to give you an idea of what MicroPython really is.", "Most of us are not contributors to MicroPython though and it\u2019s much more important for us to understand how Python coding for microcontrollers is different from, say, web development or scripting. What do you need to learn in order to program your mictrocontroller-based IoT devices? I\u2019ll talk about several traits of Python coding for microcontrollers that make it different, but exciting to learn."], "date": ["Wednesday 25 July"], "tags": ["Internet of Things (IoT)", "MicroPython", "Programming", "Tooling", "Architecture"]},
{"title": ["Washing away code smells"], "author": ["Yenny Cheung"], "description": ["Does your code smell? Have a weird fragrance? It turns out code smells are a real thing and an amazing conceptualization of suboptimal design. This talk helps you identify code smells in Python. It also shows you how to wash them away by the technique of refactoring. You will learn the art of writing Pythonic, clean and maintainable code.", "Code smells refer to the symptoms of problematic code design. Identifying different types of code smells is the first step to successful refactoring. I will talk through some classic examples:", "Knowing what to refactor, I will share a few learnings that lead to good quality code:", "I will also share tips on using refactoring at your company, which includes convincing your product manager, looking out for code smells during code reviews, and employing automatic tools.", "The speaker has previously presented on Talk Python To Me Podcast: https://talkpython.fm/episodes/show/150/technical-lessons-learned-from-pythonic-refactoring, and at PyCon.DE: https://www.youtube.com/watch?v=Yq9-b2JKUyU."], "date": ["Wednesday 25 July"], "tags": ["Beginners", "Best Practice", "legacy-code", "Clean Code", "Software Design"]},
{"title": ["Walking the Random Forest and boosting the trees"], "author": ["Kevin Lemagnen"], "description": ["Deep Learning is all the rage, but ensemble models are still in the game. With libraries such as the recent and performant LightGBM, the Kaggle superstar XGboost or the classic Random Forest from scikit-learn, ensembles models are a must-have in a data scientist\u2019s toolbox. They\u2019ve been proven to provide good performance on a wide range of problems, and are usually simpler to tune and interpret. This talk focuses on two of the most popular tree-based ensemble models. You will learn about Random Forest and Gradient Boosting, relying respectively on bagging and boosting. This talk will attempt to  build a bridge between the theory of ensemble models and their implementation in Python.", "Notebook: ", "https://github.com/klemag/europython2018_walking_the_random_forest"], "date": ["Friday 27 July"], "tags": ["Case Study", "Data Science", "Machine-Learning", "Scientific Libraries (Numpy/Pandas/SciKit/...)"]},
{"title": ["What's new in Python 3.7"], "author": ["Stephane Wirtel"], "description": ["Scheduled for release in mid-June before the conference, Python 3.7 is shaping up to be a feature-packed release! \nThis talk will cover all the new features of Python 3.7, including the Data Classes and the Context Variables for the asynchronous programming with asyncio."], "date": ["Wednesday 25 July"], "tags": ["Python general", "ASYNC / Concurreny", "CPython"]},
{"title": ["Understanding and Implementing Recurrent Neural Networks using Python"], "author": ["Anmol Krishan Sachdeva"], "description": ["Recurrent Neural Networks (RNNs) have become famous over time due to their property of retaining internal memory. These neural nets are widely used in recognizing patterns in sequences of data, like numerical timer series data, images, handwritten text, spoken words, genome sequences, and much more. Since these nets possess memory, there is a certain analogy that we can make to the human brain in order to learn how RNNs work. RNNs can be thought of as a network of neurons with feedback connections, unlike feedforward connections which exist in other types of Artificial Neural Networks.", "The flow of talk will be as follows: - Self Introduction - Introduction to Deep Learning - Artificial Neural Networks (ANNs) - Diving DEEP into Recurrent Neural Networks (RNNs) - Comparing Feedforward Networks with Feedback Networks - Quick walkthrough: Implementing RNNs using Python (Keras) - Understanding Backpropagation Through Time (BPTT) and Vanishing Gradient Problem - Towards more sophisticated RNNs: Gated Recurrent Units (GRUs)/Long Short-Term Memory (LSTMs) - End of talk - Questions and Answers Session"], "date": ["Wednesday 25 July"], "tags": ["Visualization", "Data Science", "Developing with Python Track", "Machine-Learning", "Deep Learning"]},
{"title": ["Using Bonobo, Airflow and Grafana to visualize your business"], "author": ["Romain Dorgueil"], "description": ["Zero-to-one hands-on introduction to building a business dashboard using Bonobo ETL, Airflow, and a bit of Grafana (because graphs are cool).", "There is no need of prior knowledge about any of those tools.", "After a short introduction about the tools, we\u2019ll go through the following topics, using the real data of a small SaaS software:", "One can expect to be able to build a similar system at the end of the talk in a few days (of course, the implementation is only a small part of this process, data is what really matters).", "\u00abMetrics you watch tend to improve over time\u00bb"], "date": ["Wednesday 25 July"], "tags": ["Case Study", "Databases", "Open-Source", "Business", "Analytics"]},
{"title": ["Trust me, I'm a Data Scientist - ethics for builders of data-based applications"], "author": ["Sarah Diot-Girard"], "description": ["Data Science is gonna save the world, right? Or is it? \nMachine Learning epic fails are being largely commented. It\u2019s easy to convince ourselves that they are due to the inconsiderate misuse of Data Science. But is it really so? Is it possible that innocuous choices lead an honnest team to a disaster?", "During the course of this talk, we will build together an (imaginary) application: a disruptive AI-based smart virtual assistant, pledging to help high-schoolers with their university choice. We will see how unintended biaises may creep in at every step, even with the best of intentions. We will explore different topics, such as algorithmic fairness, model interpretability and the handling of minority classes.", "Through this practical example, this talk will present a review of major ethical pitfalls identified in the Machine Learning community along with suggestions on how to avoid them.", "This talk is intended for beginner to intermediate Data Scientists, and people working with Data Scientists, even without specific technical knowledge.", "Slides : https://sdgjlbl.github.io/Presentations/Data%20Science%20and%20Ethics/presentation.html#/"], "date": ["Friday 27 July"], "tags": ["Data Science", "Machine-Learning"]},
{"title": ["Trio: A pythonic way to do async programming"], "author": ["Emmanuel Leblond"], "description": ["Concurrent programs are super useful: think of web apps juggling lots\nof simultaneous downloads and websocket connections, chat bots\ntracking multiple concurrent conversations, or web spiders fetching\npages in parallel. But writing concurrent programs is complicated,\nintimidating to newcomers, and often challenging even for experts.", "Does it have to be? Python is famous for being simple and\nstraightforward; can Python make concurrent programming simple and\nstraightforward too?\nTrio is an attempt to address this question by the positive !", "By taking advantage of new Python 3 features (async/await keywords,\nasync loops and context managers etc.) while dropping legacy concepts that\nolder asynchronous frameworks has to maintain, Trio defines a new set of\nprimitives that make it dramatically easier to write correct concurrent programs.", "In this talk, we will describe those primitives, and demonstrate how to\nuse them to implement a basic algorithm for speeding up TCP connections.\nCompared to the best previous Python implementation, our version turns out to\nbe easier to understand, more correct, and dramatically shorter."], "date": ["Wednesday 25 July"], "tags": ["Open-Source", "Programming", "ASYNC / Concurreny", "Architecture"]},
{"title": ["Understanding and Applying CQRS"], "author": ["Vinicius Pacheco"], "description": ["Creating scalable applications has a number of complex variables and one of them is to work with scalability and performance in the database layer. Command Query Responsibility Segregation (CQRS) is a design pattern that helps produce more performance and resilience in applications where data access is intense.\nIn this talk, we will understand when to use and the problems that CQRS solves. We will also apply CQRS in a Python application using the Nameko framework.\u00a0", "The outline talk is:\n        \u25cb (4 minutes) - Present a real problem of a web application, when creating new instances is not a solution, because the database receives an overwrite of writing and unfeasible to read the data, collapsing the application. \n        \u25cb (6 minutes) - Present the CQRS pattern conceptually and how this design pattern solves this type of problem using the structure of Command Stack and Query Stack \n        \u25cb (3 minutes) - Show Nameko as an interesting tool to apply the CQRS. It will demonstrate the use of HTTP, RPC and the possibility of applying pub/sub. \n        \u25cb (6 minutes) - Create (live code) the Command Stack layer using Nameko on a Postgresql database.\n        \u25cb (5 minutes) - Create (live code) the Query Stack layer using Nameko over a MongoDB database. \n        \u25cb (3 minutes) - Explain common myths and mistakes about CQRS \n(3 minutes) - Q & A Session\u00a0"], "date": ["Thursday 26 July"], "tags": ["Software Design", "python", "Architecture"]},
{"title": ["The Web is Terrifying! Using the PyData stack to spy on the spies."], "author": ["Sarah Bird"], "description": ["We all know the internet can be a scary place. In this talk I\u2019ll focus on two ways I\u2019ve found it positively terrifying. First, digging into tracking technologies, I have learned about the breadth and depth of ways our online activity is monitored, stored, and repackaged. Second, when starting out to learn a new skill, the tidal wave of information available online can be overwhelming.", "Using the PyData stack to explore and visualize different data sources, including a new dataset from Mozilla, we\u2019ll examine some of the many types of online tracking. My goal is to leave the audience with:", "1) A sense of the breadth of tools in the PyData toolbox that can be applied to a real-world analysis\n  2) An understanding of a few methods of online tracking so they can be more informed internet citizens", "In particular, now that the EU\u2019s General Data Protection Regulation (GDPR) has come into force, we can explore the data in light of EU citizens\u2019 new rights, and the new responsibilities of companies worldwide.", "Along the way, I\u2019ll also talk about becoming a software engineer, then a builder of data science tools, and my new journey into data science. Being self-taught can be, lonely, scary, and full of embarrassing pitfalls. I\u2019ll share some stories about my learning journey, and the people and resources that have supported me."], "date": ["Thursday 26 July"], "tags": ["Visualization", "Data Science", "Data", "Web Crawling", "Privacy"]},
{"title": ["Using Pandas and Dask to work with large columnar datasets  in Apache Parquet"], "author": ["Peter Hoffmann"], "description": ["Apache Parquet is a binary, efficient columnar data format. It uses various\ntechniques to store data in a CPU and I/O efficient way like row groups,\ncompression for pages in column chunks or dictionary encoding for columns.\nIndex hints and statistics to quickly skip over chunks of irrelevant data\nenable efficient queries on large amount of data.", "Apache Parquet files can be read into Pandas DataFrames with the two libraries\nfastparquet and Apache Arrow. While Pandas is mostly used to work with data\nthat fits into memory, Apache Dask allows us to work with data larger then memory\nand even larger than local disk space. Data can be split up into partitions\nand stored in cloud object storage systems like Amazon S3 or Azure Storage.", "Using Metadata from the partiton filenames, parquet column statistics and\ndictonary filtering allows faster performance for selective queries without\nreading all data. This talk will show how use partitioning, row group skipping \nand general data layout to speed up queries on large amount of data."], "date": ["Wednesday 25 July"], "tags": ["python", "Scientific Libraries (Numpy/Pandas/SciKit/...)", "Big Data", "NoSQL", "Databases"]},
{"title": ["Type annotations with larger codebases"], "author": ["Stephan Jaensch"], "description": ["You\u2019ve heard about type annotations, you know they help reduce bugs and improve documentation especially for large codebases, and you\u2019ve attended an introductory talk or read a tutorial about using them. But how do you get started using them with your big, existing codebase? How do you make sure your colleagues will be annotating new code they write - or existing code they\u2019re changing? And how do you get around some of the issues you might run into when using the still-beta type checker mypy on your codebase?", "This talk will start where the typical introductory Python type annotation talks end and discuss the real-world challenges when starting to annotate types with an existing codebase of tens or hundreds of thousands of lines of code. I\u2019ll walk you through best practices learned from doing just that at Yelp, telling you about some of the roadblocks we hit (and how we got past them).", "We\u2019ll also take a look at:\n- how you can get the most out of type annotations even with non-annotated third-party libraries\n- how to deal with code patterns that currently don\u2019t always work well with annotations\n- when the only way to get proper type checking is through refactoring your code."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Type-Hinting", "Python 3"]},
{"title": ["The Challenges of Maintaining a Popular Open-Source Project"], "author": ["Raphael Pierzina"], "description": ["In this talk, I will give an insight into what it means to maintain a popular project for me personally, what it involves and what we as a community can do to help out and finally why I think it\u2019s an important discussion to have.", "Cookiecutter is a command-line utility that creates projects from templates. It is free and open-source software distributed under the terms of a permissive BSD-3 license. With around 180 individual contributors, more than 1000 public templates on GitHub alone, and multiple talks at conferences, it is fair to say that there is a small community around it.", "But who are the people behind the project and what is it that they are doing?", "It\u2019s been three years since I was granted the commit bit by the core team. I have learned a lot about FOSS communities and also about myself. At times I struggle with balancing my day job as a full-time Software Engineer and maintaining Cookiecutter and other FOSS projects in my spare time. By now I\u2019m OK with not responding to issues immediately and closing pull requests. However it took me quite a while to get to this point.", "Maintaining FOSS projects can be incredibly rewarding and fun, but it can also be quite frustrating. It involves so much more than writing code or merging PRs, and yet sometimes it feels like that\u2019s what most people think. The goal of this talk is to start a conversation around this topic and hear what other EuroPython attendees think about it and their challenges as contributors or maintainers."], "date": ["Friday 27 July"], "tags": ["Open-Source", "Community"]},
{"title": ["The na\u00efve programmer"], "author": ["Daniele Procida"], "description": ["Since Picasso encountered Henri Rousseau over a century ago, modern art has been acutely aware of the value of the contributions that the na\u00efve artist can make. Art negotiates the relationship between sophistication and na\u00efvety with care and intelligence.", "What does our programming culture make of the na\u00efve programmer?  What can programming gain or learn from this encounter? ", "The na\u00efve programmer is simply an unsophisticated programmer. Nobody is born sophisticated. Even the most sophisticated programmers were once na\u00efve programmers. What\u2019s more, the adoption of programming simply as a tool to solve immediate problems, by ever more people without any formal training, means that the number of na\u00efve programmers will become greater, not less. Are we ready for this?", "This talk will explore the relationship, illuminating it with examples from the world of painting, art and music, and will offer some lessons that our own industry and culture should be ready to learn from.", "(This talk will already have been presented as a keynote at DjangoCon Europe 2018)"], "date": ["Wednesday 25 July"], "tags": ["Beginners", "Best Practice", "Education", "Learning"]},
{"title": [" Standardize Testing in Python"], "author": ["Bernat Gabor"], "description": ["In this talk, Bernat will introduce tox, an open source tool with the bold vision of standardizing testing. From a CIs point of view, testing contains much more than just unit and/or integration tests; other things like code style checks, packaging, testing under various versions of Python, and checking that documentation still generates, are just as important. Things quickly start to spiral out of control once you add into the mix that there are many tools and ways to accomplish each of these tasks. In this talk, we will learn how tox tries to abstract away all this complexity, how to easily run CI tests on your local machine, and how one can use this tool inside your CI frameworks to ensure high quality and easily maintainable packages."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Agile", "Testing", "Python general", "Open-Source"]},
{"title": ["SSLError, now what?"], "author": ["Christian Heimes"], "description": ["TLS/SSL is the most important and widely-used protocol for secure and encrypted communication, e.g. HTTPS. It offers more than just encryption. TLS also ensures data integrity and strong authentication with X.509 certificates. But it provides merely a false sense of security, if you use it wrong.", "Have you ever encountered ssl.SSLError: [SSL: CERTIFICATE", "VERIFY", "FAILED], while connecting to a server, but you didn\u2019t understand what is going on? Are you running production code without TLS/SSL protection or with certificate validation disabled, because you couldn\u2019t figure out how to make it work correctly?", "I\u2019ll give you the rundown of the basic cryptographic building blocks, protocol handshake, inner structure of certificates, and PKI. You\u2019ll learn about the best practices, debugging tools and tips how to diagnose TLS/SSL and how to deal with certificates."], "date": ["Wednesday 25 July"], "tags": ["Security", "Infrastructure", "HTTP", "failures/mistakes", "Internet"]},
{"title": ["System testing with Pytest, Docker, and Flask"], "author": ["Neil Gall"], "description": ["The composability of fixtures in pytest is an improvement over traditional\nxUnit setup/teardown, reducing the incentive to commit testing crimes such as\nmulti-stage and stepwise tests. This is great out of the box for unit tests,\nbut I\u2019m going to show how to combine the power of pytest fixtures with Docker\nto build high-level integration tests for microservices or other complex\nsystems with multiple components. I\u2019ll then build on that to show how to embed\nmock web services written with Flask right into the test code.", "With a sample Java application that makes use of some external resources to\noffer a data processing service I\u2019ll first quick an overview of Pytest, Docker,\nand Flask. Then I\u2019ll mix some pre-built code with live test coding to\ndemonstrate how to build high-level system tests which spin up the application\nand its dependencies in Docker. I\u2019ll then mock one of the external dependencies\nusing Flask, allowing the test to control and verify interaction between the\nsystem components. Finally I\u2019ll show how to wrap the Flask application in a\nWSGI middleware that lets the test inspect interaction with the mocked service.", "From a learning and development point of view, building your own is better than\nre-using someone else\u2019s code so I\u2019ll show how the support code for these\nfeatures is relatively simple and how the audience can build it themselves to\nexactly meet their own needs. And I\u2019ll do it all with a sense of fun, a joke\nor two and maybe a little storytelling."], "date": ["Friday 27 July"], "tags": ["python", "Docker", "Test Libraries (pyTest/node/...)", "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)"]},
{"title": ["The Boring Python Office Talk - Automate Powerpoint, Excel, and PDF with Python"], "author": ["Stefan Baerisch"], "description": ["We will have a quick tour of the many ways Python gives us to handle DOCX, XLSX, PPTX, and PDF and automate some boring office tasks.", "Many things are more interesting than office file formats like DOCX, XLSX, PPTX, and PDF. Still, while working with office formats does not seem to be the most fun, it is useful. But we can do better than just useful. With the Python and some great libraries, it is possible to have Python do much of the work you would have to do otherwise:", "In this talk, we will have a look at a usual working day for Bob and Ann, two fictional office works. Both Bob and Ann work office jobs, but while Bob does all of his work by hand, but Ann knows Python. We will look at different tasks that Bob wants to do, such as preparing an Excel report, building a Powerpoint presentation, or rearranging a PDF. Then, we will look how Ann use Python and some exciting libraries to automate these task.", "During the talk, we will use Bob and Ann to consider different task related to office file formats. We will then look at the Python libraries that are available. Then, using this library, we will see how an otherwise boring task can be automated. \nThe goal of the task is to showcase the libraries to Python offers to work with standard office formats and provide you with a starting point for your own office automation.", "After this talk, you will know how to automate at least some of your daily office tasks. You may also be bored because Python is doing so much of your work for you.  If you know basic Python programming, you will be right at home. There will be some use of Pandas,  but it is not required."], "date": ["Friday 27 July"], "tags": ["Python general", "Python 3"]},
{"title": ["The rise of Python in the data communities"], "author": ["Alexys Jacob"], "description": ["A retrospective and prospective of Python\u2019s adoption in the ", "data-driven industries", " and how it has and should influence its ecosystem and communities.", "Thanks to its versatility, Python\u2019s usage and adoption has changed a lot over the last decade to go beyond the very act of software programming.", "From Developers to SysOps, closely followed by Scientists and Data analysts, Python has spread to become a common tongue for a wide range of people.", "We will start by looking at how this increased adoption impacted Python ecosystem and is still shaping it today. While ", "this talk is not walk through all the Python technologies around data", ", some of them will be outlined so you will hear words like Numpy, Pandas or Jupyter.", "Then we will try to project ourselves in the future and by ", "highlighting the pitfalls Python has to overcome", " to keep up with its pace and mature in its ability to ", "scale", "!", "Draft of the agenda"], "date": ["Thursday 26 July"], "tags": ["Big Data", "Engineering", "Data Science", "Community", "DevOps general"]},
{"title": ["Succinct data structures for python"], "author": ["Konstantin Ignatov"], "description": ["This is a presentation of and call for participation in development and testing of Python bindings to Succinct Data Structure Library.", "From Wikipedia: Succinct data structures can represent an object (such as a bitvector or a tree) in space close to the information-theoretic lower bound of the object while supporting operations of the original object efficiently. The theoretical time complexity of an operation performed on the classical data structure and the equivalent succinct data structure are (most of the time) identical.", "Currently bindings are provided for:", "Original library:  https://github.com/simongog/sdsl-lite\nMost of examples from SDSL cheat sheet and SDSL tutorial are implemented."], "date": ["Thursday 26 July"], "tags": ["Structures", "Data", "Science Track", "Algorithms", "C-Languages"]},
{"title": ["Reliability in distributed systems"], "author": ["Jiri Benes"], "description": ["Is your system stable? Do you know what happens if any of your system\u2019s dependency will start failing? Do you even know what exactly each part of your system does or did any time in the past? Or how fast you will identify root of the problem in case your system goes down at 2am?", "The talk focuses on distributed systems (microservices, APIs that communicate with databases, memory, third party services, etc.), monitoring, their failures and recovery in order to help you answer yourself questions above.", "First part aims on importance of monitoring such systems on several levels - monitoring of hardware, application monitoring, monitoring from outside of the systems, detecting malfunctions based on anomalies within system\u2019s data flows.", "Second part presents several standard techniques for preventing system failure in case of outage of dependency and technique how to recover from inconsistent state after outage.", "Content of presentation is helpful and interesting for beginners and intermediates. Senior developers and developers working on reliable distributed systems should bear in mind content of this presentation and master shown techniques."], "date": ["Wednesday 25 July"], "tags": ["Best Practice", "Microservices", "Engineering", "Architecture", "failures/mistakes"]},
{"title": ["reno: A New Way to Manage Release Notes"], "author": ["Doug Hellmann"], "description": ["reno is a tool for managing release notes in projects that support multiple branches of development, and releases, simultaneously. It solves the problem of managing release notes within patches that fix bugs, and makes it easier to cherry-pick changes between branches (allowing backports or forward ports). This talk will cover the requirements, and constraints, that led us to design and build reno. I will also show how to use it to create notes and publish them in your packages and via Sphinx-based documentation. Then I will talk about the impact reno, and the release notes publishing automation, had on our project and release processes."], "date": ["Wednesday 25 July"], "tags": ["Tooling", "Open-Source"]},
{"title": ["Rust and Python - Oxidize Your Snake"], "author": ["Sven-Hendrik Haase"], "description": ["Rust is a safe and modern systems programming language that is easily able to call and be called from Python. As such, it is a prime candidate for replacing C for writing Python modules that have to be fast or that have to interact with other native code. Rust is extremely fast and makes it very hard to get concurrency wrong.", "Many ways of making Python call into lower level have appeared over the years such as CFFI, ctypes, boost.python, cython, SWIG. All of them are cumbersome in their own ways. PyO3 is a Rust library that makes it easy and simple to write native Python modules with minimal glue code and no crazy tooling required. It even works cross-platform without problems.", "The talk shows some sample code of PyO3-based modules and compares it with the code of the alternatives as well as the alternative\u2019s cross-platform support and tooling.", "The goal is for the audience to be informed about a new safe and modern way of writing native Python modules.", "The audience doesn\u2019t need any prerequisites except for a healthy interest in native code and Python modules. C knowledge is optional."], "date": ["Friday 27 July"], "tags": ["Performance", "Python general", "C-Languages", "All Other Programming Languages", "Compiler and Interpreters"]},
{"title": ["Rehabilitating Pickle"], "author": ["Alex Willmer"], "description": ["Pickle is a compact serialisation protocol for Python objects.  It could be a convenient way for Python programs and distributed systems to communicate. Unfortunately pickle is widely considered to be unsafe, and it has lead to several vulnerabilities over the years. As the Python manual warns", "The pickle module is not secure against erroneous or maliciously \n  constructed data. Never unpickle data received from an untrusted\n  or unauthenticated source.", "Does this have to be the case? Can we use Pickle safely?", "This talk will be a deep dive into what an attacker can do with a maliciously constructed pickles. I\u2019ll show what defences you can implement against the common attacks, especially those that gain arbitrary code execution. I will present new research into other attacks, and mitigations. Finally I will review a few less known alternatives to pickle.", "This talk will expand on a ", "PyLondinium 2018 lightning talk"], "date": ["Friday 27 July"], "tags": ["Configuration Management (Ansible/Fabric/Chef/...)", "Security", "Python general", "Messaging and Job Queues (RabbitMQ/Redis/...)", "Distributed Systems"]},
{"title": ["Recipe for text analysis in social media:"], "author": ["Eulalia Veny"], "description": ["The analysis of text data in social media is gaining more and more importance every day. The need for companies to know what people think and want is key to invest money in providing customers what they want. The first approach to text analysis was mainly statistical, but adding linguistic information has been proven to work well for improving the results.", "One of the problems that you need to address when analyzing social media is time. People are constantly exchanging information, users write comments every day about what they think of a product, what they do or the places they visit. It is difficult to keep track of everything that happens. Moreover, information is sometimes expressed in short sentences, keywords, or isolated ideas, such as in Tweets. Language is usually unstructured because it is composed of isolated ideas, or without context.", "I will talk about the problem of text analysis in social media. I will also explain briefly Na\u00efve Bayes classifiers, and how you can easily take advantage of them to analyse sentiment in social media, and I will use an example to show how linguistic information can help improve the results. I will also evaluate the pros and cons of supervised vs unsupervised learning.", "Finally, I will introduce opinion lexicons, both dictionary based and corpus-based, and how lexicons can be used in semi-supervised learning and supervised learning. If I have time left, I will explain about other use cases of text analysis."], "date": ["Wednesday 25 July"], "tags": ["Case Study", "Notebook", "Natural Language Processing"]},
{"title": ["Quart a asyncio alternative to Flask"], "author": ["Philip Jones"], "description": ["Flask is a great web mirco-framework, that is best utilised with\nevent-loop concurrency. Sadly with Flask the event-loop framework\ncan\u2019t be asyncio, although some extensions (Flask-Aiohttp) have\ntried. Quart is the solution as it shares the Flask API and is\nbased on asyncio. In addition Quart goes beyond Flask adding\nHTTP/2 and websockets.", "This talk will outline why event-loop concurrency is a good\nchoice for web servers, why asyncio is a good choice and then\ngive an overview of Quart, demonstrating features that go beyond\nthe Flask framework."], "date": ["Friday 27 July"], "tags": ["HTTP"]},
{"title": ["Quantum Computing: a Very Gentle Glimpse into a Possible Future"], "author": ["Nick Radcliffe"], "description": ["This talk will aim to demystify quantum computing and will assume no prior knowledge. The speaker, while having studied Quantum Field Theory many years ago, has only relatively recently started learning properly about  Quantum Computing, and is going to try to take advantage of the fact that the ideas are relatively new to him to explain the key concepts simply, to an audience (probably) consisting mostly of non-experts in quantum computing.", "Key questions I will try to cover are likely to include\n  * What is quantum mechanics anyway?\n  * What are quantum computers? Are they real? And are they really faster/more powerful than classical computers?\n  * What is a qubit (the quantum computing analogue of a bit)\n  * What problems are likely to be solved well by quantum computers?\n  * How do you program a quantum computer?\n  * How do you get results out of a quantum computer? What kind of results are they anyway? Do you have to visit other universes to get them?\n  * Can you get access to quantum computers online and use Python to program them (kind-of!)\n  * Will quantum computers break all encryption?\n  * What are Shor\u2019s and Grover\u2019s algorithms and (just possibly) how do they work?\n  * What are the challenges with building practical quantum computers?\n  * What is the Python story with Quantum Computing?"], "date": ["Wednesday 25 July"], "tags": ["Other Hardware", "Universe", "Mind Bending", "Physics", "Cryptography"]},
{"title": ["Recursion, Fractals, and the Python Turtle Module"], "author": ["Hayley Denbraver"], "description": ["To understand recursion you must first understand recursion. Alternatively, you could come to a talk that will demonstrate the basics of recursion, using fractals drawn by the python turtle module! ", "What are fractals? Fractals are psychedelic designs that appear basically the same regardless of scale. They also appear all over nature\u2013consider how a tree trunk and branches is similar in structure to branches and twigs or how a wave is made of mini waves. Best of all, fractals can be constructed using recursive functions. ", "What is the turtle module? It is part of the standard python library that can be used to draw amazing things and is commonly used as a tool for learning to code. ", "Come for the recursion, stay for the amazing fractals, and leave knowing that no turtles were harmed in the making of this talk.", "This talk is suitable for all python enthusiasts. Those who love mathematics will love this talk. Advanced developers will learn more about a tool that can be used to teach people to code. There is something for everyone. "], "date": ["Wednesday 25 July"], "tags": ["Beginners", "Fun and Humor", "Education", "Python general"]},
{"title": ["Pythonic code vs. performance"], "author": ["\u0141ukasz K\u0105kol"], "description": ["Idiomatic Python is beautiful. If you\u2019re new to Python, this talk is for you because I\u2019m going to reveal the charm of python in front of you. I\u2019ll present how boilerplate code can be replaced with idiomatic python. If you\u2019re experienced python developer, this talk is also for you because I\u2019ll compare the performance of the idiomatic code, both from CPU and memory point of view. Some of these results may surprise you."], "date": ["Wednesday 25 July"], "tags": ["python", "Performance", "Best Practice", "Programming", "failures/mistakes"]},
{"title": ["Python Decorators: Gift or Poison?"], "author": ["Anastasiia Tymoshchuk"], "description": ["Why would you ever need to use decorators in Python? ", "\nHave you ever had the task when you need to use one function in few places and you really wanted to avoid of code duplicating? For example to add some logging into functions or timers, etc. Decorators in Python are super powerful with these tasks, but at the same time they are super complicated, sometimes even magical. When I started learning Python, Decorators were really like a magic: how to use them, how are they working, lots of questions. The goal is to make the things easier and clear to answer a question: to use or not to use Decorators in your project. ", "\nWhat\u2019s in the Talk: ", "\n- Functions nature in Python ", "\n- Magic of a Decorator ", "\n- Basics ", "\n- When to use Decorators ", "\n- Examples ", "\n- Even more Python magic", "My slides are here: https://atymo.me/projects/presentations/GiftOrPoison/ ", "\nCode examples: https://github.com/atymoshchuk/python_tutorials"], "date": ["Wednesday 25 July"], "tags": ["Best Practice", "Python general", "Clean Code", "failures/mistakes", "Use Case"]},
{"title": ["Python, Docker, Kubernetes, and beyond ?"], "author": ["Peter Babics"], "description": ["Have you ever tried to manage deployment of multiple python applications through various\nlinux distributions ? If so, you must have heard of Docker and maybe also Kubernetes.\nDistributing python applications using docker is simple and allows to create static packages\ncontaining everything required for them to run. Also it allows to freeze everything, packages, available\nlibraries, files on filesystem.\nIn my speech I would like to tell you about our brief journey, of moving our trading platform\nfrom standalone application directly on host system, through deploying it in docker and latter\nmoving it to kubernetes. I will explain our struggles with implementing stable and fast CI using Gitlab CI and Docker,\nimage (package) storage and cleanup of old images and finally I will tell you how we are deploying\nour platform to kubernetes, with nothing more than yaml-s and templating."], "date": ["Wednesday 25 July"], "tags": ["Docker", "Infrastructure", "Deployment/Continuous Integration and Delivery"]},
{"title": ["Python in scientific computing: what works and what doesn't"], "author": ["Michele Simionato"], "description": ["There is no want of technologies for doing scientific calculations in Python. In this talk I will share some hard-learned knowledge about what works and what doesn\u2019t with the libraries we are using at GEM (the Global Earthquake Model foundation).\nI will show how the following libraries fare with respect to our main concerns of performance, simplicity, reliability and portability", "and I will talk about several library bugs we found and had to work around. I will also talk about some libraries that we do not use (such as cython, numba, dask, pytables, \u2026) and the reason why we do not use them.\nHopefully this will be useful to people using or planning to use a similar software stack.", "My slides are here: https://gitpitch.com/micheles/papers/europython2018"], "date": ["Wednesday 25 July"], "tags": ["Science", "Case Study", "Scientific Libraries (Numpy/Pandas/SciKit/...)"]},
{"title": ["Python on Windows is Okay, Actually"], "author": ["Steve Dower"], "description": ["Packages that won\u2019t install, encodings that don\u2019t work, installers that ask too many questions, and having to own a PC are all great reasons to just ignore Windows. Or they would be, if they were true.\nDespite community perception, more than half of Python usage still happens on Windows, including web development, system administration, and data science, just like on Linux and Mac. And for the most part, Python works the same regardless of what operating system you happen to be using. Still, many library developers will unnecessarily exclude half of their potential audience by not even attempting to be compatible.\nThis session will walk through the things to be aware of when creating cross-platform libraries. From simple things like using pathlib rather than bytestrings, through to all the ways you can get builds and tests running on Windows for free, by the end of this session you will have a checklist of easy tasks for your project that will really enable the whole Python world to benefit from your work."], "date": ["Wednesday 25 July"], "tags": ["Windows", "Best Practice", "Cross-Platform-Development", "CPython"]},
{"title": ["Python and Web Sockets"], "author": ["Anton Caceres"], "description": ["Modern web-apps require bi-directional communication, reacting not only to user actions but also to server events. This can be achieved elegantly using Web Sockets, a protocol standardized by W3C to be a default tool for full-duplex connections on the Web.", "Although most web-frameworks do not support Web Socket integration out of the box, Python has multiple options available making it a piece of cake. This talk showcases integrating Web Sockets in Python web-apps, focusing on situations that can make good use of it and presenting implementations with most popular frameworks: Tornado and Django. We will explore a similar style but different underlying technologies of both, and finish with a live demo."], "date": ["Thursday 26 July"], "tags": ["Web", "Web Track", "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)", "ASYNC / Concurreny", "Django"]},
{"title": ["Python and GraphQL"], "author": ["Alec MacQueen"], "description": ["GraphQL query language is gaining popularity and seeing more adoption.\nThis is mainly due to the efficiency with which consumers can get their data, the ease with which you can document and explore your API and the powerful tooling that has been built around the query language.", "This talk is for novices and experts of GraphQL alike and aims to cover the basics of the query language, how to implement it using Flask and SQLAlchemy and to take a deeper dive into how Python\u2019s type-hinting can be used to generate your GraphQL schema. ", "I\u2019ll also be talking about some of the tooling that can be used to provide consumers and developers working on your API with a great development experience. Next I\u2019ll cover some ways you can use these tools to empower your development process and get you developing \u2018API First\u2019. ", "To get the most out of this talk you should have a general understanding of APIs, Python frameworks and Python ORMs. However, my aim is to make it as accessible as possible for developers of all experience levels."], "date": ["Friday 27 July"], "tags": ["Web", "Python 3", "APIs"]},
{"title": ["Python 3: ten years later"], "author": ["Victor Stinner"], "description": ["Draft of the talk:", "Growing populary of the Python programming language", "Port Python 2 code to Python 3", "Port Python 2 code to Python 3", "No: \u201cAdd support for Python 3\u201d, don\u2019t loose Python 2 support", "Port Python 3 code to Python 2", "Python changes to make the transition smoother:", "PEP 414: u\"syntax\u201d reintroduced in Python 3.3", "Analysis of the transition", "Bugs that won\u2019t be fixed in Python 2 anymore", "Performance", "Evolutions of the Python language", "Python 3.5", "PEP 492: async/await \u201ckeywords\u201d for asyncio.\n(Really keywords in Python 3.7.)", "PEP 448: Generalized unpacking:\n", "head, *tail = list", "\n", "mylist = [1, 2, **other_list]", "\n", "mydict = {\"key\": \"value\", **other_dict}", "Python 3.6", "PEP 515: ", "million = 1_000_000", "Bury Python 2?"], "date": ["Friday 27 July"], "tags": ["Python 2", "Python 3", "CPython"]},
{"title": ["PyPI: Past, Present and Future"], "author": ["Nicole Harris"], "description": ["The Python Package Index (PyPI) is the principal repository of software packages for the Python programming language.", "In May 2018, PyPI served 12.3 billion HTTP requests, with 1.4 million people visiting pypi.org via their web browser.", "The Python community depends on PyPI for the ongoing functioning of the entire Python ecosystem."], "date": ["Thursday 26 July"], "tags": ["PyPi"]},
{"title": ["Programming paradigms for physical computing and IoT"], "author": ["Ben Nuttall"], "description": ["A look at the GPIO Zero library for Raspberry Pi yields the blueprint for a Pythonic API for programming the behaviour of interconnected devices.", "GPIO Zero provides a multi-paradigm programming interface to GPIO devices:\n- procedural (polling)\n- procedural (blocking)\n- event-driven (callbacks)\n- declarative", "Start with simple scripts to control LEDs and buttons on a breadboard, learn to prototype ideas and move on to declaring interaction between more advanced devices in the home and beyond.", "These options for device programming, along with the extensibility of the library, provide the means to program complex behaviour using simple Pythonic code. "], "date": ["Friday 27 July"], "tags": ["Gadgets", "Internet of Things (IoT)", "Sensors", "Raspberry PI", "Hardware/IoT Track"]},
{"title": ["Python 2 is dead! Drag your old code into the modern age."], "author": ["Becky Smith"], "description": ["The clock is ticking on Python 2.7, with support to be dropped in January 2020.  With major dependencies such as Django, NumPy and pandas moving to Python 3 only, the time has come for even big established codebases to consider upgrading.  Many organisations are still postponing for various reasons; we will attempt to demonstrate that with a bit of planning and perseverance, and the assistance of some handy tools, we can embrace the future!", "This session will provide a first-hand perspective on how we upgraded a large (~65,000 lines of python code) 8-year-old Django project with multiple external dependencies from Python 2.7 to Python 3.6.  ", "We will briefly discuss the benefits of upgrading to Python 3, and architectural considerations.  The session will primarily focus on the practicalities of upgrading the code itself.  We will not try to provide a single \u201cbest\u201d solution for upgrading to Python 3, but rather will introduce some of the available tools, provide an insight into how we used them, and their advantages and disadvantages from our experience.  We will discuss preparatory steps and approaches, strategies for dealing with external dependencies, and \u201cgotchas\u201d that we encountered during the process.", "The aim of this session is to provide an example of how a Python 3 upgrade on an established commercial product can be successfully completed, and to furnish audience members with a set of tools and strategies to help them with their own projects.  ", "Prerequisites: basic knowledge of Python. "], "date": ["Wednesday 25 July"], "tags": ["Case Study", "GEO and GIS", "Python 3", "Django"]},
{"title": ["Proper Django Testing"], "author": ["Martin Angelov"], "description": ["I\u2019m currently working in a Django project, We have a lot of tests (~ 2000) and a fair amount of code coverage currently. The system and the requirements of the client grows everyday (like in every other project these days). I\u2019ve convinced that the effort we put in making each of these tests pays off daily.", "Speaking with other Django and Python developers I\u2019ve noticed that people often \u201coverengineer\u201d their unit tests and they usually tend to break their principles.", "In this presentation I will talk mainly about unit tests. - what packages we use and how and when to use them (properly). We will take a look on how we structure our projects and how this structure actually helps us write proper unit tests. I will start with the very basic tests and continue with the mocking technique. In the end I\u2019m going to refer to other testing methods (integration, E2E, validation testing,  visual regression, etc.).", "The goal of this talk is to make people better in testing and to show them how these skills will fasten the development process and  help them maintain their project and it\u2019s quality."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "APIs", "clients", "Testing", "Django"]},
{"title": ["Productionizing your ML code seamlessly"], "author": ["Lauris Jullien"], "description": ["Data science and Machine Learning are hot topics right now for Software Engineers and beyond. And there are a lot of python tools that allow you to hack together a notebook to quickly get insight on your data, or train a model to predict, or classify. Or you might have inherited some data wrangling and modeling {Jupyter/Zeppelin} notebook code from someone else, like the resident data scientist. ", "The code works on test data, when you run the cells in the right order (skipping cell 22), and you believe that the insight gained from this work would be a valuable game changer. But now how do you take this experimental code into production, and keep it up-to-date with a regular retraining schedule? And what do you need to do after that, to ensure that it remains reliable and brings value in the long term?", "These will be the questions this talk will answer, focusing on 2 main themes:\n     1. What does running an ML model in production involve?\n     2. How to improve your development workflow to make the path to production easier?", "This talk will draw examples from real projects at Yelp, like migrating a pandas/sklearn classification project into production with pyspark, while aiming to give advice that is not dependent on specific frameworks, or tools, and is useful for listeners from all backgrounds."], "date": ["Friday 27 July"], "tags": ["Best Practice", "Scientific Libraries (Numpy/Pandas/SciKit/...)", "Data Science", "Notebook", "Machine-Learning"]},
{"title": ["Processing Geodata using Python and Open Source Modules"], "author": ["Martin Christen"], "description": ["The need for processing small-scale to large-scale spatial data is huge. In this talk, it is shown how to analyze, manipulate and visualize geospatial data by using Python and various open source modules.", "The following modules will be covered:", "Github repo: https://github.com/martinchristen/EP2018_Geo"], "date": ["Friday 27 July"], "tags": ["Visualization", "Data", "Jupyter/iPython", "Big Data", "Science"]},
{"title": ["Postgres at any scale"], "author": ["Craig Kerstiens"], "description": ["We\u2019ll start with the basics you need to know as an app developer about interacting with your database, then dig into how you can start to analyze performance. We\u2019ll look at things you need to know for a small application, then the things you should be cautious of as you start to layer in other items you need to be aware of for performance including:"], "date": ["Wednesday 25 July"], "tags": ["PostgreSQL", "Databases"]},
{"title": ["My Story with Python and Open Source"], "author": ["Nicola Iarocci"], "description": ["This is the story of how I (and with me, my company) went from lonely, introvert, C# developer to open-source Python author and maintainer, speaker, trainer, consultant, and all-around community junkie. With some luck, in the process, you will also hear a few hints on how to become a good open source contributor and have a chance to ponder on the pros and cons (yes there are cons too) of going full monty with open source. We will also look at what changed in my company as we slowly switched from closed, in-house eco-systems to the open source field."], "date": ["Wednesday 25 July"], "tags": ["python", "Open-Source"]},
{"title": ["More Than You Ever Wanted To Know About Python Functions"], "author": ["Mark Smith"], "description": ["What exactly ", "are", " functions? Let\u2019s talk about functions, methods, callables and closures - what they are, what you can give them, what they can give you, what you can do with them \u2026 and what\u2019s inside.", "You probably think you already know everything about functions, but you probably don\u2019t!", "Input & Output", ": How do you get things in and out of functions? I\u2019ll cover parameters and the myriad of ways they can be specified, provided and accessed - including helpful hints to avoid common mistakes! I\u2019ll cover return values, briefly, along with variable scopes and exceptions.", "Closures", ": What are they, how do they work and how they can affect memory usage.", "Methods", ": How does a method differ from a function, when are they made, how do they work (where does ", "self", " come from?) and how to access the function inside every method.", "__magic__", ":Make your own callables from any object!", "Introspection", ": Using modern Python techniques, what can you find out about a function, and what can you do with that information?", "Bytecode", ": What happens if you open up a function and look at its insides? Can you change it and put it back together again? (Spoiler: Yes, you can.)", "By the end of this talk, I guarantee* you\u2019ll know more about callables than when you walked in, along with techniques both practical and so extreme your colleagues will never let you merge them to master.", "(*This guarantee is legally non-binding and cannot be redeemed in any way.)"], "date": ["Thursday 26 July"], "tags": ["Type-Hinting", "Mind Bending", "Programming", "Functional Programming"]},
{"title": ["Mocks, fakes, dummies, stubs and spies: Successfully isolating the snake"], "author": ["Mario Corchero"], "description": ["Ever wonder what mocks, fakes, dummies stubs or spies are? Or what the differences are between them and when one should be used instead of another? We will take a deep look into these concepts, what they mean and examples on how to use/create them in Python.", "In this talk, we will quickly explore the reasons for using mock and how it works, quickly jumping into the different concepts of testing doubles and how they can be used in Python. The talk will include as part of the examples from some features in mock coming in Python 3.7 that might change how usual mocking is performed. The talk builds on the writings of Gerard Meszaros and Martin Fowler about testing doubles, focusing on how to apply them to Python.", "This session, which will review test isolation concepts and the unittest.mock module, is structured in a way that both beginners and intermediate developers will learn from it. A basic knowledge of testing is recommended. Intermediate developers will leave the room with a clear understanding of the tools - further than just using simple mocks - to successfully fake dependencies. Multiple \u201cnot so well known\u201d features of unittest.mock will be presented so we can shape those objects to behave functionally different.\nUnittest.mock is an extremely useful library which is commonly underused, this talk aims to bring clarity into stubbing in general and into medium/advanced mock features to ease and remove pain when users work with it.", "Outline: ", "\u2022 Intro (1\u2019)\n\u2022 Why doubles are important (1\u2019)\n\u2022 Main qualities of a double (2\u2019)\n\u2022 Overview of unittest.mock (5\u2019)\n\u2022 Testing doubles (15\u2019)\n    o   Doubles (1\u2019)\n    o   Stubs (2\u2019)\n    o   Spies (3\u2019)\n    o   Mocks (5\u2019)\n    o   Fakes (2\u2019)\n\u2022 Wrap up, conclusion and pointers (2\u2019)\n\u2022 Q&A (Expected 5\u2019)"], "date": ["Thursday 26 July"], "tags": ["python", "Testing", "Python general"]},
{"title": ["PEP 557* versus the world"], "author": ["Guillaume Gelin"], "description": ["Python 3.7 will ship with a new module called ", "dataclasses", ", which has been defined in PEP 557.", "This talk will deeply cover ", "dataclasses", ", but also ", "attrs", ", ", "box", ", ", "thingy", ", and others.", "Post-conference notes:\n- Slides: https://slides.com/ramnes/pep-557\n- Implementations and micro-benchmark: https://github.com/ramnes/pep-557-vs-the-world"], "date": ["Thursday 26 July"], "tags": ["Software Design", "Data Structures", "Clean Code", "Python 3", "Developing with Python Track"]},
{"title": ["Marge: A bot for better Git'ing"], "author": ["Mika Bostr\u00f6m"], "description": ["Over the past decade, development workflows across industries have converged towards Continuous Integration (CI) with pull requests (PR). Automated testing and artifact generation is useful, but the logic is often flawed: test are run against the source branch, and side effects from successful merges are not accounted for. Marge-bot improves this workflow by allowing to test the PR against the target branch while providing a host of other conveniences."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Development", "Deployment/Continuous Integration and Delivery", "Git", "Tooling"]},
{"title": ["Microservices and Serverless in Python projects"], "author": ["Jose Manuel Ortega"], "description": ["Monoliths, microservices and now Serverless. Function as a Service (FaaS) platforms give us new ways to attack old problems. The possibility of executing functions as a service allows designing scalable and highly parallel applications, but on the other hand, this kind of applications require a particular programming style. For example, bundling dependencies and managing state is not trivial.", "However, there are plenty of tools and frameworks to help you code serverless applications with Python, and once you get started it is not complicated.", "In this talk we will mention the advantages of Serverless and we will focus on the situations in which we can introduce it into our Python projects. We will use AWS Lambda for the examples.", "These could be the main talking points:", "Introducing Serverless and Function as a Service (FaaS) in Python projects\nAdvantages of Microservices and Serverless \nAWS Lambda functions with chalice\nTesting AWS lambda with docker"], "date": ["Thursday 26 July"], "tags": ["Public Cloud (AWS/Google/...)", "Microservices", "Docker", "Architecture", "DevOps general"]},
{"title": ["May the Fuzz be with you"], "author": ["Heidi Thorpe"], "description": ["This talk will explore how Long short-term memory (LSTM) recurrent neural networks combined with Python can use Artificial Intelligence to provide invalid, unexpected, or random data as inputs for testing software and finding network security vulnerabilities. The technique of machine generated test inputs is an established testing approach and is sometimes referred to as fuzzing. I will take this idea further by presenting how various types of machine learning can provide novel outlier test cases to harden software and networks in a way that is superior to using only randomness. Instead, I will discuss how to train neural networks to produce better fuzzing data.This is a natural progression from my work with machine learning and image processing using support vector machines (SVM) and Generative Adversarial Networks (GAN) which I have applied to this new domain of software testing.\nThis a beginner level talk aimed at all software developers and testers with a goal to giving attendees a basic understanding of fuzz testing.", "Timing of presentation\n1 Introduction 0-5 minutes \n2 What is a neural fuzzing 5-10 minutes \n3 How does fuzzing work 10-15 minutes \n4 Steps to train a deep neural network 15-20 minutes \n5 Implementing a basic LSTM neural network for security testing 20-25 minutes \n6 Conclusion and Questions 25-30 minutes"], "date": ["Thursday 26 July"], "tags": ["python", "Security", "Testing", "Programming", "Data Science"]},
{"title": ["Lies, damned lies, and statistics"], "author": ["Marco Bonzanini"], "description": ["Statistics show that eating ice cream causes death by drowning.", "If this sounds baffling, this talk will help you to understand correlation, bias, statistical significance and other statistical techniques that are commonly (mis)used to support an argument that leads, by accident or on purpose, to drawing the wrong conclusions.", "The casual observer is exposed to the use of statistics and probability in everyday life, but it is extremely easy to fall victim of a statistical fallacy, even for professional users.", "The purpose of this talk is to help the audience understand how to recognise and avoid these fallacies, by combining an introduction to statistics with examples of lies and damned lies, in a way that is approachable for beginners. ", "Agenda:"], "date": ["Friday 27 July"], "tags": ["Beginners", "Education"]},
{"title": ["Let\u2019s embrace WebAssembly!"], "author": ["Almar Klein"], "description": ["WebAssembly (WASM) is an open, low level binary format designed to be compact and run at native speed, while being memory-safe. WASM is primarily intended to run code in browsers, but its by no means limited to this. This makes it an interesting intermediate language (IR); code that compiles to WASM will (in the future) run basically anywhere. In short: WASM is coming and its great!", "Unsurprisingly, WASM is being embraced by many communities, such as C++, Rust, Lua, and .NET. Sadly, there does not seem to be a lot of enthusiasm from the Python community yet\u2026", "Perhaps this is because Python is interpreted and can therefore not (easily) use WASM as a compilation target. It should be possible to compile a Python interpreter (like CPython or Pypy) to WASM and thereby run Python code in a browser. But the result would be pretty heavy-weight, so it would arguably not be a very practical.", "Within the PPCI project (a pure Python compiler infrastructure) tooling has been developed to load, inspect, compile and even run WASM modules. This allows combining WASM and Python in new ways. In this talk we discuss two approaches by which the Python community might embrace WASM. ", "Firstly, various projects already exist that compile Python functions to other languages (e.g. Numba, PScript), and we have type annotations. If Python functions would be compiled to WASM, the resulting code would run in any WASM runtime (e.g. the browser). This will be demonstrated with an example, for which the resulting code can be run either in a browser or inside Python itself. In either case, it\u2019s pretty darn fast.", "Secondly, rather than ", "using", " WASM, it might be interesting for Python to function as a platform to ", "run", " and ", "bind", " WASM modules. Two of Python\u2019s greater strengths are its rich ecosystem and its ability to glue things together. Let\u2019s build on that! Imagine creating an application that consists of multiple WASM modules, perhaps compiled from different languages, and binding these together into a single Python app.", "This will be demonstrated with a game, which is written in Rust, compiled to WASM, and running inside a Python process. The WASM module consumes a drawing API, which is in this case provided by Python, and Python feeds the WASM module with user input.", "I hope that this talk inspires other Pythonistas to think about the advantages that WASM can bring to our ecosystem, and also about the role that Python can play in the growing WASM ecosystem."], "date": ["Wednesday 25 July"], "tags": ["Web", "All Other Programming Languages", "Community"]},
{"title": ["Let\u2019s Build a Python Profiler in 25 LOC"], "author": ["Noam Elfanbaum"], "description": ["A profile is a set of statistics that describes how often and for how long various parts of the program executed. Most profilers run inside your Python process.  If you\u2019re inside a Python program you generally have pretty easy access to its stack, hence we can gather information about time spent in each level.", "In this talk we\u2019ll build a Python profiler from scratch and so learn about the dynamic nature of Python and how do well-known profilers such as cProfile. ", "We\u2019ll also learn the difference between a tracing and a sampling profiler and which one to use in what circumstance."], "date": ["Wednesday 25 July"], "tags": ["Performance", "CPython"]},
{"title": ["Leadership of Technical Teams"], "author": ["Owen Campbell"], "description": ["Over the years, I\u2019ve led, and been a member of, numerous technical teams on a wide variety of projects. Based on that experience, this talk will describe my personal observations on the role of the leader in that sort of team.", "The talk will be in 5 sections:", "There is no prior knowledge or experience required whatsoever. The talk is aimed equally at anyone  considering a leadership role for the first time or who has been doing so for many years."], "date": ["Wednesday 25 July"], "tags": ["Best Practice", "Business"]},
{"title": ["Is your code tainted? Finding security vulnerabilities using taint-tracking."], "author": ["Mark Shannon"], "description": ["\u201cTaint tracking\u201d is a technique used in code analysis to find security vulnerabilities and other problems.", "Any data that comes from an untrusted source, for example a HTTP request, is treated as \u201ctainted\u201d.\nIf that \u201ctainted\u201d data is able to reach a vulnerable part of your code, then you have a problem.\nSophisticated code analysis tools can track this data, and reveal potential security problems.\nExamples of the sort of problem that can be found include  cross-site scripting (XSS), code injection, SQL injection and others.", "In this talk I will show how taint tracking analysis works in practice, introducing the concepts of source, sink and sanitizer.\nI will then demonstrate using taint tracking to find a XSS vulnerability in a django app.\n(We will chose a project that is designed to teach django security, where the vulnerability is deliberate.)", "I will also explain how thinking in terms of \u201ctaint\u201d can help you write safer code,\neven without access to code analysis.", "During this talk I will use the code analysis tools on lgtm.com to demonstrate the analysis.\nlgtm.com is free to use for open-source projects. A paid version is available."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Security", "Code Analysis"]},
{"title": ["Introduction to sentiment analysis with spaCy"], "author": ["Thomas Aglassinger"], "description": ["Sentiment analysis aims at extracting opinions from texts written in natural language, typically reviews or comments on social sites and forums. SpaCy already provides mechanisms for dealing with natural languages in general but does not offer means for sentiment analysis.", "This talk gives a short introduction to sentiment analysis in general and shows how to extract topics and ratings by utilizing spaCy\u2019s basic tools and extending them with a lexicon based approach and simple Python code to consolidate sentiments spread over multiple words.", "Topic covered are:", "Code examples are introduced and explained using a Jupyter notebook that can be used as basis for your own analysis.", "As additional twist the analyzed texts are not in English but German to show that this approach can be used for multiple languages. No knowledge of German is required though because translations of the short examples sentences are provided."], "date": ["Thursday 26 July"], "tags": ["Beginners", "Notebook", "Programming", "Natural Language Processing"]},
{"title": ["JavaScript for Python Developers"], "author": ["\u017dan Anderle"], "description": ["Having a hard time keeping track of where the modern JavaScript is going? Are you familiar only with jQuery and you want to know more? Or maybe you\u2019re not familiar with JavaScript at all and want to learn it but you don\u2019t know where to start? Then this talk is for you!", "You\u2019ll learn about modern JavaScript from a perspective of a Python developer. By the end of the talk you\u2019ll know everything you need to know about the language, its ecosystem, and different tools and frameworks. You\u2019ll be able to start using JavaScript more confidently and be familiar with different tools that are at your disposal.", "We\u2019ll go over all the things I wish I\u2019d known when I first got started with JavaScript.:"], "date": ["Thursday 26 July"], "tags": ["Web", "JavaScript", "Web General", "JavaScript Web Frameworks (AngularJS/ReactJS/...)"]},
{"title": ["Iteration Inside Out - Python's Iteration Protocol"], "author": ["Naomi Ceder"], "description": ["Using for loops and list comprehensions in Python is basic and quite common, right? But how does iteration in Python actually work \u201cunder the hood\u201d? The words \u201citerator\u201d and \u201citerable\u201d each occur over 500 times in the Python documentation, but what does an iterator actually ", "do", ", as opposed to an iterable? And how do they do it? Learn the details as we turn the iteration protocol inside out, with live coded demonstrations along the way.", "This talk will start from the way Python iterates of over a sequence, in comparison with iterating by index, like C. The key point of iterating over a sequence is that something needs to track which item in the sequence is next, which is something that Python\u2019s  iteration protocol manages.", "The iterable section will demonstrate creating a simple object that returns items by index (e.g., a fibonacci series), showing that ", "getitem", " is really all you need for an iterable, since an iterator is created for such objects when iterated upon. BUT, this doesn\u2019t answer the question of how Python keeps track of which item is next.", "The iterator section answers that question by converting the iterable just created to an iterator - adding ", "iter", " and ", "next", " methods and showing how the iterator saves state and essentially drives the iteration protocol. ", "Having an accurate understanding of iteration protocol will help developing Pythonistas reason better about both iterating over existing objects and creating their own iterables and iterators."], "date": ["Thursday 26 July"], "tags": ["Python general", "Programming", "Python 2", "Python 3"]},
{"title": ["Interoperability Rules for an European API Ecosystem: do we still need SOAP?"], "author": ["Roberto Polli"], "description": ["Italy is introducing a new API Ecosystem because the complexity of the old SOAP-based protocol was now a barrier for the creation of newer services.", "This talk presents the Digital Transformation Team  ongoing work on an interoperability framework based on (REST) API, including:"], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Scaling", "APIs", "RESTful", "Privacy"]},
{"title": ["Integration Tests with Super Powers"], "author": ["Alexandre Figura"], "description": ["You are maybe like me: I never learned at school how to write tests. My teachers gave me at first a broad overview of computer history. Then, they explained me some basic design patterns. And to finish, I often had to write more or less basic programs, to validate and demonstrate my skills. Not the kind of code I would be really proud of today: the procrastinator monkey living in my head at this time was more thinking about planning my summer holidays, rather than writing Ninja code!", "And to make things worse, my studies focused on network and system engineering. Not software architecture. Funny story, because I decided to become programmer a couple of years later\u2026", "What I realize now is that I don\u2019t have as much time as before to learn. And in a world driven by business, where time is money, and where tradeoffs are the rule, there is rarely enough money to write both shiny new features and a complete test suite.", "People who practice Test-Driven Development know how complicated it can be to write proper tests. TDD is often discouraging at first: the learning curve is steep. But this problem also exists in the testing world in general. Because writing good tests is hard, many beginners get headaches trying to reach this goal. How to convince project managers to have more time for writing tests in these conditions\u2026", "But \u201cle jeu en vaut la chandelle\u201d as we say in French (\"the juice is worth the squeeze\"). Well tested applications are not only easier to maintain and extend. They also have in general a better API. That\u2019s what we will see in this talk, by focusing on how to write integration tests. Our journey will begin with a presentation of different testing strategies. We will then jump to the practical part, using Pytest, interface testing , dependency injections and stubs, amongst many others. And because we want to add nice buzzwords on our resume after EuroPython, we will finish this talk by automating the whole with Docker Compose."], "date": ["Friday 27 July"], "tags": ["Docker", "Testing", "Tooling", "Test Libraries (pyTest/node/...)"]},
{"title": ["Industrial Machine Learning Pipelines with Python & Airflow"], "author": ["Alejandro Saucedo"], "description": ["This talk will provide key insights on the learnings I have obtained throughout my career building & deploying machine learning systems in critical environments across several sectors. I will provide a deep dive on how to build scalable and distributed machine learning data pipelines using Airflow with a Celery backend. I will also compare Airflow with other technologies available out there and how it differentiates, such as Luigi, Chronos, Pinball, etc. If you attend the talk, you will obtain an understanding on the solid fundamentals of Airflow, together with its caveats and walk-arounds for more complex use-cases. As we proceed with the examples, I will cover the challenges that you will run into when scaling Machine Learning systems, and how Airflow can be used to address these using a manager-worker-queue architecture for distributed processing with Celery.  By the end of this talk you will have the knowledge required to build your own industry-ready machine learning pipelines to process data at scale, and I will provide further reading resources so people are able to implement the knowledge obtained almost right away."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Deep Learning", "Distributed Systems", "Big Data", "Machine-Learning"]},
{"title": ["How to write Rust instead of C, and get away with it (yes, it's a Python talk)"], "author": ["Antonio Verardi"], "description": ["Have you ever tried optimizing a super-slow Python application and thought: \u201cOh! I wish I could just write this bit it in Rust\u201d? Well, turns out you can!\nWe will show you how Rust is a better alternative than C to make your programs lightning fast, and how to get away with it; without your users even noticing.", "As Infrastructure Engineers at Yelp, the challenge we face everyday is: scale. Yelp is mostly a Python shop and while this is great for development velocity, our work often revolves around making Python applications run faster. Until now, we have been using different techniques: faster interpreters, or, more often, C code.", "Given its safety guarantees, performance and promise of better tooling than C, we decided we had to give Rust a try. The initial results helped reinforce that there was a lot of opportunity for Rust to play an important role in our production code.", "Yelp heavily relies on the Apache Avro (https://avro.apache.org/) serialization format for its internal infrastructure. During the talk, we will show how we implemented an Avro serialization/deserialization library in Rust, how we were able to call it from Python (and in theory from any other language) with very little code, using tools such as cbindgen (https://github.com/eqrion/cbindgen/), CFFI (https://cffi.readthedocs.io/en/latest/) and Milksnake (https://github.com/getsentry/milksnake/).", "This talk would outline how easy it is to write performant code in a language like Rust and call it from Python applications without users even realizing it, making this a great solution for production services."], "date": ["Wednesday 25 July"], "tags": ["Performance", "C-Languages", "CPython"]},
{"title": ["How to Write Deployment-friendly Applications"], "author": ["Hynek Schlawack"], "description": ["The DevOps movement gave us many ways to put Python applications into production. But should your application care? Should it need to know whether it\u2019s running on your notebook, on a server, in a Docker container, or in some cloud platform as a service?", "It should not, because environment-agnostic applications are easier to test, easier to deploy, easier to handle, and easier to scale.", "But how can you practically structure and configure your applications to make them indifferent to the environment they run in? How do secrets fit into the picture? And where do you put that log file?", "By the end of this talk you\u2019ll know the tools and techniques that enable you to write such Python applications and you\u2019ll be ready for the next big change. "], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Scaling", "Deployment/Continuous Integration and Delivery", "Architecture", "DevOps general"]},
{"title": ["How to make money using Python - Unused potential in the Enterprise World"], "author": ["Marc-Andre Lemburg"], "description": ["Python has gained quite some traction in the web development world and more recently as the goto language for anything that has to do with data science. However, it\u2019s use in the enterprise world of applications is rather limited.", "Based on the author\u2019s many years experience in working in enterprise environments, the talk will demonstrate areas in the business application space where Python has significant advantages over other languages, but which are currently dominated by applications written in Java, C++ or C#.", "There are huge opportunities out there for companies to excel at and use the Python advantage to their benefit. If you are looking for a lead idea to kick start your Python business (and you have the resources to invest into marketing), this talk is for you."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Python general", "Business", "Use Case"]},
{"title": ["How to develop your project from an idea to architecture design in 50 minutes"], "author": ["Anastasiia Tymoshchuk"], "description": ["Have you ever asked yourself: ", "\n- how and where to start developing a new project from the scratch, ", "\n- how to choose main components of a new software or how to develop a new feature, ", "\n- how to decide whether your project needs refactoring, ", "\n- how to avoid repeating the same issues? ", "\nThis talk will answer all these questions.  ", "You will learn:\n- how to develop the idea from scratch, ", "\n- how to use principles of Object Oriented Analysis and Design, ", "\n- how to show amazing architecture design.  ", "You will get better understanding where and how to start, analyze and decouple the system, create a clean, clear and extendable architecture.", "My slides are here: https://atymo.me/projects/presentations/FromIdeaToDesign/"], "date": ["Wednesday 25 July"], "tags": ["Software Design", "Data Structures", "Architecture", "Code Analysis", "Use Case"]},
{"title": ["How is python used in biomolecular sciences?"], "author": ["Antonia Mey"], "description": ["In the last ten years scientists working on computational problems involving proteins and other small molecules have largely moved to using python when developing simulation and data analysis tools allowing for a fast prototyping and development of new ideas. One big challenge is dealing with the compatibility of different tools and using these to create very complex adaptive, yet robust workflows in order to be able to guide cutting edge experiments e.g. predicting how well a small drug like molecule can bind to a protein that could serve as a target for a new drug. The talk will give a gentle introduction to what kind of python related tools are available in the field  of computational molecular biology, how they are used, and what kind of complex workflows scientist have to solve.\nI will then introduce BioSimSpace an open source python library and flagship project of the CCPBioSim consortium in the UK, which provides a common API to avoid having to learn many individual tools facing compatibility and dependency challenges allowing scientists to focus on the scientific question at hand and not solving programming challenges. BioSimSpace allows fast and interoperable building of workflow components (nodes) for bimolecular problems, which can easily be used on a variety of different computational resources. In particular I will introduce the cloud facilities available for fast prototyping using a Jupyter notebook interface. "], "date": ["Wednesday 25 July"], "tags": ["Physics", "Visualization", "Data", "Jupyter/iPython", "Scientific Libraries (Numpy/Pandas/SciKit/...)"]},
{"title": ["How can you use Open Source materials to learn Python & data science?"], "author": ["Kamila Stepniowska"], "description": ["Python is very often recommended as the language of choice in a programming education. I can see at least two cases when it\u2019s a thing:\n- introduction to programming - regardless an age and any previous educational experience,\n- data science - it\u2019s just a standard\u2026\nand actually both - you can teach a future data scientists starting by teaching Python. ", "During this talk, I would like to briefly present you what Open Source Python educational materials do we have there and how those are and can be used to teach Python and data science. PyLadies, Django Girls, Django Carrots, Python Software Foundation creates many very available materials. From the data science side, you have Open Source materials created by kaggle, Minerva, Github repos, and many other organizations and individuals. ", "During this talk you will learn:\n- where to find an Open Source Python and data science tutorials and educational materials\n- how does the Python community can support your learning process\n- why learning data science with Python is a good idea.", "I\u2019m also interested in learning your educational experience with an Open Source materials and Python community supporting your learning experience. If you would like to share a link or your educational story,  please feel free to send me an email on kamila@stepniowski.com. If I will find it interesting for the audience and if you will give me your permission to share it, I might use it in the talk."], "date": ["Thursday 26 July"], "tags": ["Education", "Diversity", "Open-Source", "Community", "Learning"]},
{"title": ["How async and await ended up in Python"], "author": ["Pavlin Gergov"], "description": ["We\u2019re going to talk about regular functions,  iterables, iterators, function execution and yield - generator functions. We will send values and play with generators a bit. A quick look at asyncio will be followed by async and await, what a coroutine is and how to write async code with Python.", "Code snippets can be found here: ", "https://github.com/pgergov/europython-2018"], "date": ["Friday 27 July"], "tags": ["Beginners", "Education", "Python 3", "ASYNC / Concurreny"]},
{"title": ["How do I get the job I want? "], "author": ["Franziska Schropp"], "description": ["Engineers are rare, jobs are plenty, so far so good. But what if I don\u2019t just want any job that pays the bills, but the job that will push my career and that I actually enjoy doing every day? If your answer to why you\u2019d like to join company XY is: \u201cWork from home and make good money\u201d, you should not be surprised to not be taken into the next round. But what would be a good answer to that question? What should I say when asked where I see myself in 5 years? There are a lot of subtle aspects to succeeding and failing in the application process, from your initial cover letter to the on site visit meeting the team.  As a tech recruiter, I\u2019d like to share with you the best and (sometimes quite entertaining) worst practices in the application process in order to help you get the job you want! "], "date": ["Wednesday 25 July"], "tags": ["The Answer to Life the Universe and Everything Else", "workforce", "Community"]},
{"title": ["Hello to the World in 8 Web Frameworks (micro, batteries included & async)"], "author": ["Aaron Bassett"], "description": ["Join us for a Phileas Fogg inspired whirlwind tour of eight Python web frameworks.", "\u201cHad he programmed? It was likely, for no one seemed to know web frameworks more familiarly; there was no framework so obscure that he did not appear to have an intimate acquaintance with it. He must have developed in everything, at least in the spirit.\u201d", "We\u2019ll start with the current crop of microframeworks, showing how to achieve the same task in each, before progressing to \u201cBatteries included\u201d and the more specialised async frameworks.", "For developers who perhaps have only used a single framework, this talk gives them an opportunity to get out and explore the world (of web frameworks) and broaden their horizons, with plenty of Jules Verne inspired fun along the way."], "date": ["Thursday 26 July"], "tags": ["Fun and Humor", "Pyramid", "ASYNC / Concurreny", "Internet", "Django"]},
{"title": ["Hacking Reinforcement Learning"], "author": ["Guillem Duran"], "description": ["Repository", "Slides with notes", "Creating huge datasets of top performing examples for Reinforcement Learning (RL) has always been tricky, but if we allow\nourselves to cheat a bit it can be done very easily. During this talk, I will present a new family of algorithms that allow to efficiently generate very high quality samples for any known RL environment.", "This new generation of planning algorithms achieves a performance which is several orders of magnitude higher\nthan any other existing alternative, while offering linear time complexity and good scalability.", "This talk will be a practical example\nof how we can use new tools for hacking any reinforcement learning environment, and make it generate superhuman level games.", "Hacking RL, as any other hacking process will be divided in four phases:", "During information gathering, I will briefly explain what are the main ideas behind Reinforcement Learning.\nI will also talk about how our theory (FractalAI) came to be, and what are the fundamental concepts behind it.", "We will find an attack vector against the environment API, and explain how it can be exploited. I will explain\nthe fundamental concepts needed to build a new generation of exploits, that will allow us to have complete control over the data the environment produces.", "This is the time to test the new exploits and to show a proof of concept. We will exploit the attack vector to gain access\nto the environment. Using only a laptop I will show how it is possible to sample data which surpasses human performance way faster than real time.", "Once we have gained control of the environment, we will measure how well the exploits work, and how well the techniques presented\ncan generalize to other types of environments.", "I want the talk to be as simple and fast as possible, with a lot of graphical examples, videos, and a Jupyter notebook.\nThe Q&A session is the time to apply some social engineering to get me to talk about the details that you find more interesting.\nI have prepared additional material covering the most common questions and concerns, but feel free to ask whatever you want, I love challenging questions ;)", "Some of the topics covered in the additional material are:", "Google spreadsheet with all bencharks on Atari", "Code used to run the examples", ". (Not merged to the FractalAI repo yet)"], "date": ["Wednesday 25 July"], "tags": ["Science", "Case Study", "Algorithms", "The Answer to Life the Universe and Everything Else", "Deep Learning"]},
{"title": ["Good features beat algorithms"], "author": ["Pietro Mascolo"], "description": ["In Machine Learning and Data Science in general, understanding the data is paramount. This understanding can come from many different sources and techniques: domain expertise, exploratory analysis, SMEs, some specific Machine Learning techniques, and feature engineering.\nAs a matter of fact, most Machine Learning and Statistical analysis strongly depends on how the data is prepared, thus making feature engineering very important for any serious Machine Learning enterprise.", "\u201cFeature engineering is the process of transforming raw data into features that better represent the underlying problem to the predictive models, resulting in improved model accuracy on unseen data.\u201d", "In this talk we will discuss what feature engineering  and feature selection are; how to select important features in a real-world dataset and how to develop a simple, but powerful ensemble to measure feature importance and perform feature selection.", "Familiarity with intermediate concepts of the Python programming language is required to follow the implementation steps. General knowledge of the basic concepts of Machine Learning and data cleaning will be useful, but not strictly necessary, to follow the discussion on feature selection and feature engineering."], "date": ["Friday 27 July"], "tags": ["Data", "Data Science", "Algorithms", "Python 3", "Machine-Learning"]},
{"title": ["Getting Started with Mypy and Type Checking"], "author": ["Jukka Lehtosalo"], "description": ["Ever wondered if you should try type checking in your Python project, or what it takes to get started with mypy? I will show how to introduce type checking the easy way, one step at a time.", "Dropbox was an early adopter of type checking and mypy, and we\u2019ve been gradually adding type annotations to our large production codebases since 2016. Engineers love how type annotations improve the clarity of code, and how mypy can surface hard-to-find bugs. We\u2019ve learned a lot in the process of annotating millions of lines of code, and in this talk you\u2019ll learn battle-tested approaches for adding type checking to an existing codebase.", "I expect no previous experience with mypy. You\u2019ll benefit the most if you\u2019ve worked on a project with multiple developers."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Type-Hinting", "Tooling", "Code Analysis"]},
{"title": ["From Zero to Azure with Python, Docker containers, and Visual Studio Code"], "author": ["Dan Taylor"], "description": ["In this session we will walk through creating a Python web app\nwith Docker and deploying it to Microsoft Azure using the free,\ncross-platform, and open-source Visual Studio Code. We will also show\nusing hosted Jupyter notebooks in Azure Notebooks to analyze data, and\nstoring data in CosmosDB using the Azure SDK for Python. If you\u2019re\nexcited about Python and want to learn more about the capabilities of\nAzure, then this session is for you. We will cover all of the basics, no\nexperience with Azure, containers, cloud computing, or Visual Studio\nCode necessary!", "Code Repository: https://github.com/qubitron/zerotoazure-flaskcosmos"], "date": ["Wednesday 25 July"], "tags": ["Windows", "Web", "Docker", "Cross-Platform-Development"]},
{"title": ["Faster Python startup"], "author": ["Jeethu Rao"], "description": ["The cPython\u2019s startup speed generally quite fast compared to other similar dynamic language interpreters. Despite this, the interpreter\u2019s startup time increases linearly with the number and size of imported python modules. Although interpreter startup speed isn\u2019t a significant concern in long running servers, it does matter for the command line and other frequently launched applications.", "One of the oldest tricks in the book, when it comes to performance optimizations is to perform frequent and expensive operations fewer times and reuse results from previous invocations. We noticed that the overhead of reading and un-marshalling .pyc files at startup can be eliminated if we could directly embed code objects and their associated object graph from .pyc files into the data segment of the cPython binary. This technique is quite similar to the approach taken by image based languages like Smalltalk in the past. Implementing this for cPython is made simpler because marshaled code objects in .pyc files contain a subset of the types of objects that marshal format supports. With this approach, loading a module included in the python binary is as cheap as dereferencing a pointer, albeit at the cost of increased binary size.", "This talk will discuss the approach taken to implement the aforementioned idea for Python 3.6 and the challenges faced in implementing it. It will also talk about benchmark results from the improvements and possible future directions for this work. Although this talk delves into cPython internals, no prior experience with cPython internals is required to follow along."], "date": ["Friday 27 July"], "tags": ["Performance", "Compiler and Interpreters", "CPython"]},
{"title": ["Fuzzy Matching - Smart Way of Finding Similar Names Using Fuzzywuzzy"], "author": ["Cheuk Ting Ho"], "description": ["Matching strings should be one of the first natural language processing problem that human encounter since we start use computer to handle data. Unlike numerical value which has an exact logic to compare them, it is very hard to say how alike two strings are for a computer. One may compare them character by character and have an idea of how many characters in the pair of stings are the same. Unfortunately in most application we need computer to perceive strings like we do and therefore we have to use fuzzy matching. Fuzzy matching on names is never straight forward though, the definition of how \u201cdifference\u201d of two names are really depends case by case. For example with restaurant names, matching of words like \u201ccafe\u201d \u201cbar\u201d and \u201crestaurant\u201d are consider less valuable then matching of some other less common words. Also, do we consider company names that matches partly (like \u201cHappy Unicorn company\u201d and Happy Unicorn co.\u201d) are the same?", "In the first half of the talk Levenshtein Distance, a measure of the similarity between two strings, will be explained. Different functions in Fuzzywuzzy like \u201cpartial", "ratio\u201d and \u201ctoken", "sort_ratio\u201d will also be explored and compared for difference. It is very important to understand our tool and choose the right one for our task. Then in the second half, we will start tackling the example problem: matching company names, we will show that besides using Fuzzywuzzy, we have to also handle problem like finding and avoid matching of common words and speeding up the matching process by grouping the names. By combining all tricks and techniques that we demonstrate, we will also evaluate how efficient this method is and the advantage of using this method.", "This talk is for people in all level of Python experience who would like to learn a trick or two and would like to be able to solve similar problems in the future. Theory of how the library works will be explained and It is easy to be pick up even for beginners."], "date": ["Wednesday 25 July"], "tags": ["Beginners", "Case Study", "Data", "Open-Source", "Natural Language Processing"]},
{"title": ["Exploring the Python AST Ecosystem"], "author": ["Chase Stevens"], "description": ["Materials are available at https://github.com/hchasestevens/europython-2018", "This session will introduce attendees to Python\u2019s rich ecosystem of abstract syntax tree tooling and libraries, with an emphasis on practical applications in static analysis and metaprogramming. Attendees should be fully comfortable with Python syntax and semantics, but familiarity with the ast module itself will not be necessary. ", "The talk will begin with a conceptual overview of ASTs, including a brief look at Python\u2019s built-in introspection capabilities. It will introduce tools for AST visualization (astor, showast, python-ast-explorer), creation (asttools, meta), and transformation to source code (codegen). ", "How the AST can be used for static analysis will be covered; this will include discussion of Python\u2019s built-in facilities (NodeVisitor) as well as of the 3rd party tools astsearch, astpath, and bellybutton. The talk will demonstrate the advantages and limits of these tools in comparison to other static analysis tooling (pylint, mypy); particular attention will be paid to how these tools can be incorporated into attendees\u2019 workflows and  existing codebases and projects. ", "Tooling for Python AST manipulation and metaprogramming will be the final topic covered, focusing on the use of the NodeTransformer built-in. The talk will cover practical applications and examples of metaprogramming, such as metaprogramming for DSLS (pony, xpyth), runtime code manipulation (patterns, yield-from), and others (e.g. assertion rewriting in pytest).", "While the talk will touch only briefly on each of the applications discussed, by the end of the session attendees should have a firm grasp of the kinds of problems the AST can be used to solve, what existing AST tooling can accomplish, and what resources are available for the development of their own AST tools."], "date": ["Friday 27 July"], "tags": ["Static Analysis", "Python general", "Tooling", "Code Analysis", "Use Case"]},
{"title": ["From linear algebra to machine learning"], "author": ["Omar Guti\u00e9rrez"], "description": ["Math is a crucial skill for people who are interested in Data Science and Machine Learning. Until now, most of the people who are doing Data Science have a strong background in math, usually, people with master or Ph.D. degrees. ", "However, this fact seems to change in the next years, after the hype of Machine Learning we are facing a process of ", "democratization", ". Now the door of Data Science is open for everyone.", "To ", "truly madly deeply", " understand how the machine learning algorithms work we need to understand some mathematical concepts. In this tutorial, I would like to share my experience in the process of learning some of those concepts. ", "What I want to do is build a bridge between those concepts and Python, more specifically, ", "SciPy", " and ", "NumPy", " and ", "TensorFlow", ".  Basically is ", "just another tutorial about vectorization", ", in this case, oriented to understand and implement machine learning algorithms and the mathematical foundation that supports it.", "The material of the talk can be found ", "here"], "date": ["Friday 27 July"], "tags": ["Scientific Libraries (Numpy/Pandas/SciKit/...)", "Data Science", "Data", "Jupyter/iPython", "Machine-Learning"]},
{"title": ["Get Productive with Python in Visual Studio Code"], "author": ["Dan Taylor"], "description": ["In this demo driven session, we\u2019ll show you how to use the cross-platform, free, and open source Visual Studio Code for all your Python development needs. From editing, to linting, to debugging and more, you will learn how to get started, as well as tips and tricks to save you time in your everyday development lifecycle.", "If you\u2019re an experienced Python developer, you will learn how to take advantage of all of Visual Studio Code\u2019s capabilities to maximize your productivity. If you\u2019re a new Python developer, you will learn more about Python and how to use Visual Studio Code to get up and running quickly.", "We will start by showing how to create a new application, configure linting, manage virtual environments, and run code. Then we\u2019ll show how to use more powerful features like debugging, unit testing, the Docker extension, and Visual Studio Live Share for collaborative editing and debugging with your co-workers. ", "Code available at: http://github.com/qubitron/pydemo"], "date": ["Friday 27 July"], "tags": ["Development", "Debugging", "Programming", "Tooling", "Python general"]},
{"title": ["ETL pipeline to achieve reliability at scale"], "author": ["Isabel Lopez"], "description": ["In an online betting exchange, thousands of money related transactions are generated per minute. This data flow transforms a common and, in general, tedious task such as accounting into an interesting big data engineering problem. At Smarkets, accounting reports serve two main purposes: housekeeping of our financial operations and documentation for the relevant regulation authorities. In both cases, reliability and accuracy are crucial in the final result. The fact that these reports are generated daily, the need to cope with failure when retrieving data from previous days, and the fast growing transaction volume obsoleted the original accounting system and required a new pipeline that could scale.", "This talk presents the ETL pipeline designed to meet the constraints highlighted above, and explains the motivations behind the tech stack chosen for the job, which includes Python3, Luigi and Spark among others. These topics will be covered by describing the main technical problems solved with our design:\n- Fault tolerance and reliability, i.e ability to identify faulty steps and only rerun those instead of the whole pipeline.\n- Fast input/output.\n- Fast computations."], "date": ["Wednesday 25 July"], "tags": ["Case Study", "Python 3", "Big Data", "Scientific Libraries (Numpy/Pandas/SciKit/...)"]},
{"title": ["Easy interactive data applications with Dash"], "author": ["Matteo Guzzo"], "description": ["Plotly Dash is a Python  framework for building interactive dashboards and web data applications, based on Flask, React.js, and Plotly. It allows a python-only approach to something that previously required knowledge of Javascript, heavily reducing the overhead required to create a web application. I\u2019ll show how easy it is to set up a small interactive web app using data from the Twitch API and to expand it at will, using only Python. "], "date": ["Friday 27 July"], "tags": ["Web", "Visualization", "Data Science", "Scientific Libraries (Numpy/Pandas/SciKit/...)", "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)"]},
{"title": ["Domain-Driven Design Patterns in Python"], "author": ["Robert Smallshire"], "description": ["Domain-Driven Design (DDD) is an approach to software development that emphasises high-fidelity modelling of the problem domain, and which uses a software implementation of the domain model as a foundation for system design. This approach helps organize and minimize the essential complexity of your software.  DDD has been used with success within the traditional enterprise programming ecosystems of Java and .NET, but has seen only limited adoption in the Python community.", "In this talk we introduce Python programmers to the core tactical patterns of DDD and show how they can be realised in idiomatic Python, freeing the most valuable parts of your system \u2013 the domain model \u2013 from onerous dependencies on particular databases or application frameworks.", "In this talk we share what we\u2019ve learned from applying DDD in Python to large projects."], "date": ["Friday 27 July"], "tags": ["Software Design", "Abstractions", "Programming", "Architecture", "Databases"]},
{"title": ["Django structure for scale and longevity"], "author": ["Radoslav Georgiev"], "description": ["Django is great.", "But as we add new features, as our dev team grows & the software needs to be stable on production, things can get quite messy.", "We are going to look at some common patterns, derived from experience, on how to structure your Django project for scale and longevity.", "Main topics are:", "We are going to talk about when to rely on existing abstraction so it\u2019s actually helpful & when to avoid existing abstraction, and code things ourselves.", "The examples showed in this talk are derived from working with Django in the last 5 years on projects with:", "Key takeaways from the talk:", "The talk is great for all levels of Django knowledge - from beginners to advanced users & teams.", "The main way of getting the point across is going to be by showing regular code, talking how it can get messy & then following up with examples of improving that code. Hopefully this talk will start a lot of discussion afterwards.", "Breakdown of the talk:"], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Clean Code", "Python 3", "failures/mistakes", "Django"]},
{"title": ["Django queries optimization"], "author": ["Ivaylo Donchev"], "description": ["Collecting data from multiple Models is a common flow in Django development. In most of the cases ", "prefetch_related", " and ", "select_related", " do all of the job for optimizing the queries.", "When the models structure become complicated enough and we\u2019ve put our logic for collecting these items in models\u2019 properties we suddenly cannot use ", "prefetch_related", " or ", "select_related", " anymore. Our View \u2018s queries count depends on selected items count with high complexity. The problem is in the selection logic: we\u2019ve implemented an algorithm which calculates something and we cannot prefetch or select all of the objects. ", "So this talk\u2019s purpose is: To show how to use Django ORM to move the selection logic, the calculations, the aggregations over group of objects from our python code to our database and moving all of the logic for this in one place - the queryset and test it easily."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Django", "Databases", "PostgreSQL", "APIs"]},
{"title": ["EduBlocks - Making the transition to Python easier!"], "author": ["Joshua Lowe"], "description": ["Looking for ways to make the transition from block based programming to Python easier, then look no further!  In this talk 14 year old Josh will introduce you to his project called EduBlocks, which is a drag and drop version of Python 3 that he has created to help teachers introduce programming languages, like Python, to children at an earlier age.\nThe goal of the project is to make the transition from block based programs like Scratch to Python easier for students and teachers, as presently there is no drop-in solution that bridges this gap. Josh will share his journey so far with you, from how he came up with the idea when he was only 11 years old, the developments along the way, the exciting plans for the future and how schools today in over 72 different countries  around the world are making use of EduBlocks on the Raspberry Pi and micro:bit. "], "date": ["Friday 27 July"], "tags": ["MicroPython", "Education", "Python 3", "Community", "Open-Source"]},
{"title": ["Debugging Your Code with Data Visualization"], "author": ["James Saryerwinnie"], "description": ["Let\u2019s face it.  Sometimes our code just isn\u2019t working how we expect it to work.\nWhen this happens, we fall back to our trusty tools to help us\ndebug: pdb, the logging module, or even simple print statements.  But sometimes\nthat just isn\u2019t enough, we still can\u2019t figure out why our code is broken.\nWe need something more.", "There are a number of fantastic libraries in python for\ncreating data visualizations.  These libraries are commonly used for\nanalyzing and visualizing large sets of data, but don\u2019t see as much\nusage when it comes to helping us write and debug our code.", "What if we could combine the two?  What if we could leverage data\nvisualization tools to understand what our program is doing?  Sometimes, by\nseeing a visual representation of what our code is doing, it becomes much\neasier to understand why our code is not working.  We don\u2019t need to create\npublication quality graphs and charts, we just need to generate quick, one-off\nvisualizations to understand what our code is doing.  What we want is the \u201cdata\nvisualization\u201d equivalent to print() statements.", "To help illustrate this point, I will walk through some of the hardest\nbugs I\u2019ve had to track down while working on projects such as the AWS CLI and\nboto3, the AWS SDK for Python.  For each bug, I\u2019ll show you how I was able to\nleverage data visualization techniques to troubleshoot and fix these bugs.\nCome learn how to debug more efficiently by leveraging data visualization."], "date": ["Thursday 26 July"], "tags": ["Public Cloud (AWS/Google/...)", "Visualization", "Case Study", "Debugging"]},
{"title": ["Deep Learning with PyTorch for Fun and Profit"], "author": ["Alexander Hendorf"], "description": ["There are all these great blog posts about Deep Learning describing all that awesome stuff.  - Is it all that easy? Let\u2019s check!", "We\u2019ll look into: style transfer (making a picture look like painting), speech generation (like Siri or Alexa) and text generation (writing a story).\nIn this talk I\u2019ll describe the whole journey: A fun ride from the idea to the very end including all the struggles, failures and successes.", "Steps, we\u2019ll cover:", "The data challenge: get the data ready", "Have it run on your Mac with PyTorch and an eGPU", "Creating a character-level language models with an Recurrent Neural Network", "Creating a text generator", "Creating artwork"], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Case Study", "Deep Learning", "failures/mistakes", "Natural Language Processing"]},
{"title": ["Data is not flat"], "author": ["Alisa Dammer"], "description": ["Feature engineering and model training often comes hand in hand. Some tasks have an overwhelming amount of high dimensional data, some tasks have little data or very low-dimension data. \nThis talk targets the latter problem: what can be done with the data itself to significantly improve the model performance and when manual feature engineering does make sense. ", "\nA sample case of Classification problem with NN will be presented\nThe goal of the talk is to remind about something every person working with the data thinks and probably uses.\n Slides, Jupyter notebook with the example, test and train sets, NN configuration file are available on:\nhttps://github.com/Alisa-lisa/conferences"], "date": ["Thursday 26 July"], "tags": ["Algorithms", "Data Science", "Data", "Machine-Learning"]},
{"title": ["Developing in a black hole: vim, tmux, httpie and jq"], "author": ["Francisco Javier Aceituno Lapido"], "description": ["\u201cProductivity depends on the knowledge you have of the tools used.\u201d", "Do you feel that the development tools you use are heavy? \nDo you think that they make you less productive?\nDo you want to have maximum productivity without lifting your hands from the keyboard? ", "If so, this talk is for you.", "In this talk, I will show what are the tools I use every day in software development at OnTruck and how you can integrate", "the text editor, vim\nthe terminal multiplexer, tmux\nthe HTTP client, httpie\nand the json processor, jq", "to get a very productive development environment, all running on a simple terminal."], "date": ["Thursday 26 July"], "tags": ["Development", "Agile", "Unix", "Tooling", "Command-Line"]},
{"title": ["Creating Solid APIs"], "author": ["Rivo Laks"], "description": ["Increasingly, our apps are used not by humans but by other apps - via their APIs. Thus it is increasingly important that your APIs are well-designed and easy to consume for other developers.", "Adding a few API endpoints to your application for internal consumption is easy. Creating APIs that other developers will love to use is a much harder problem.\nYou\u2019ll need to think about solving variety of topics such as versioning, authentication, response structure, documentation and more. There are existing good practices for each of them, but often developers who haven\u2019t done a lot of API work aren\u2019t familiar with them.", "My talk will show how to find reasonable solutions for those problems.\nI will talk about importance and intricacies of good documentation and why auto-generating it from your code is useful. I\u2019ll show how to make use of familiarity by using standards such as JSON API and show benefits brought by its standardized response structure that makes lives of 3rd-party developers easier.", "Authentication will be discussed, including introduction to OAuth2. I\u2019ll talk about when OAuth2 is a good choice and when not, as well as dig into some trickier parts of it.\nWe\u2019ll then move on to versioning and how you can change your API without breaking all existing apps.\nFinally we\u2019ll wrap it all up by looking at some major APIs that are using the same principles."], "date": ["Friday 27 July"], "tags": ["Best Practice", "RESTful", "Web General", "APIs"]},
{"title": ["Creating a Culture of Software Craftsmanship\u202f"], "author": ["Keith Harrison"], "description": ["This time it\u2019ll be different. It\u2019s a green field project and you\u2019ve learned from your mistakes. You\u2019re not going to make the same ones again.", "Fast forward several months and you\u2019re in a mess. A change in one place causes bugs in a completely different place. Adding a simple feature means making changes all over your application. Progress is getting slower and slower. You\u2019re lost in complexity.", "Why does this keep happening and what can we do about it? ", "This talk will try to answer those questions.", "I\u2019ll show how complex software really is, define the different types of complexity found in software, explain the issues complexity causes and discuss different techniques we can use to manage it.", "This talk is suitable for anyone who has worked or will work on a software development project. No development experience is required."], "date": ["Friday 27 July"], "tags": ["Best Practice", "Agile", "Clean Code"]},
{"title": ["Cython to speed up your Python code"], "author": ["Stefan Behnel"], "description": ["Cython", " is not only a very fast and comfortable way to talk to native code and libraries, it is also a widely used tool for speeding up Python code. The Cython compiler translates Python code to C or C++ code, and applies many static optimisations that make Python code run visibly faster than in the interpreter. But even better, it supports static type annotations that allow direct use of C/C++ data types and functions, which the compiler uses to convert and optimise the code into fast, native C. The tight integration of all three languages, Python, C and C++, makes it possible to freely mix Python features like generators and comprehensions with C/C++ features like native data types, pointer arithmetic or manually tuned memory management in the same code.", "This talk by a core developer introduces the Cython compiler by interactive code examples, and shows how you can use it to speed up your Python code. You will learn how you can profile a Python module and use Cython to compile and optimise it into a fast binary extension module. All of that, without losing the ability to run it through common development tools like static analysers or coverage test tools."], "date": ["Thursday 26 July"], "tags": ["Cython", "Compiler and Interpreters", "C-Languages", "Performance"]},
{"title": ["Air Quality & Python: Developing Online Analysis Tools"], "author": ["Douglas Finch"], "description": ["Poor surface air quality has a range of implications for human health and the economy. Without concerted mitigation efforts, trends in urbanisation and aspirations for progressive economic growth will result in poorer levels of air quality. Analysing and interpreting the incoming data streams from heterogeneous air quality measurement stations is critical for tackling the problem and for developing early warning systems. I am using Python to develop a set of online analysis tools (ukatmos.org) to enable the public to quickly and easily plot air quality data in many ways, effectively freeing up information that is already publicly available but in awkward formats and often involves development of code. We anticipate these tools will also support data science classes at school, and can speed up scientific research by minimizing effort in repeating analyses. ", "This talk will cover how the tools integrate numerous Python libraries (e.g. Pandas and NumPy), the Django web framework, the Plot.ly tools for creating interactive graphs, and SQL to address the large data volumes. Developing these Python tools in an adaptive and scalable way allows it to grow as more data become available, e.g. satellite observations. Adaptability also includes evolving user requirements. This project will also be developed into a Python library allowing the user to easily use the online analysis tools from an offline Python environment. "], "date": ["Friday 27 July"], "tags": ["Case Study", "Data Science", "Django", "Web", "Science"]},
{"title": ["Adventures in compatibility: emulating CPython's C API in PyPy"], "author": ["Ronan Lamy"], "description": ["PyPy is a fast and compliant implementation of Python. In other words, it\u2019s an interpreter for the Python language that can act as a full replacement for the reference interpreter, CPython. It\u2019s optimised to enable efficient just-in-time compilation of Python code to machine code, and has releases matching versions 2.7, 3.5 and soon(ish) 3.6. The PyPy project also developed cffi as a clean and efficient way of interfacing with C code.", "However, many libraries in the Python ecosystem are implemented as C extensions, which target CPython\u2019s C API. Many others use Cython, which builds C extensions under the hood. Therefore, PyPy needs an emulation layer for the C API. ", "This emulation needs to bridge the differences between the implementation languages and the object models of CPython and PyPy. The solution is called cpyext. It\u2019s implemented in a mixture of RPython and C, with most of the API functions and macros implemented in RPython. cpyext exposes PyObjects to the extension code that appear similar to CPython objects (as long as extension writers stay within the fuzzily defined boundaries of the public API) but are merely \u2018shadows\u2019 of the real PyPy objects.", "After a brief presentation of PyPy, its goals, and its current statuts and roadmap, this talk will dive into the vexed topic of its handling of C extensions.  By the end of it, the audience should understand the operating principles of cpyext and have a clearer understanding of what happens when you install and run numpy, for instance, on top of PyPy. Some basic familiarity with CPython internals and how C extensions are made will be assumed."], "date": ["Wednesday 25 July"], "tags": ["PyPy", "Compiler and Interpreters", "C-Languages", "Scientific Libraries (Numpy/Pandas/SciKit/...)"]},
{"title": ["A Taxonomy of Decorators: A-E"], "author": ["Andy Fundinger"], "description": ["This talk will briefly go over the various decorator syntaxes before breaking up the common usages of decorators into 5 categories. Effectively, these are design patterns for decorators. The usages to be considered are:"], "date": ["Friday 27 July"], "tags": ["Software Design", "Development", "Programming", "Python general"]},
{"title": ["A tale of refactoring"], "author": ["Emmanuelle Delescolle"], "description": ["A couple years ago I was approached by a client to help them improve the performance and maintainability of their code.", "That code was filled with very long functions, some of them with very similar code and the project was really hard to understand as a whole.", "My first reflex was to refactor this code code to make it more understandable. In my opinion, it did fit part of my assignment as understandable code is easier to maintain but it was also very helpful later in letting me make small changes with full knowledge of what was going to be affected by those changes.", "Large methods and functions is something that creeps into our code whether we plan for it or not. This talk is about one way to deal with it.", "This talk will be based on code provided by the GildedRose Refcatoring Kata: https://github.com/emilybache/GildedRose-Refactoring-Kata", "Prerequisites:\n- Basic knowledge of Python\n- Basic knowledge of OOP", "Goals:\n- Demonstrate one approach for refactoring code\n- Show how to leverage Python\u2019s dynamic nature to make code simpler"], "date": ["Friday 27 July"], "tags": ["Case Study", "Programming", "Code Analysis", "failures/mistakes", "Clean Code"]},
{"title": ["Addressing multithreading and multiprocessing in transparent and Pythonic ways"], "author": ["David Liu"], "description": ["With the increase in computing power, harnessing and controlling one\u2019s code out of the single-threaded realm becomes an ever-increasing problem, coupled with the desire to stay in the Python layer. With the recent tools and frameworks that have been published, escaping the GIL cleanly is much easier than before, allow one\u2019s Python code to effectively utilize multi-core and many core architectures in the most Pythonic ways possible. In this talk, learn about how to utilize static multiprocessing for process pinning, and effectively balancing thread pools with a monkey-patched import of threading modules.", "Overview:", "Introduction to multithreading and multiprocessing in Python", "History of multithreading+multiprocessing in Python, classic frameworks ", "Problems that can occur (oversubscription, nested parallelism issues, process hopping, pool resource on shared machines) ", "Python accessing bigger hardware over the last few years (28+ cores, etc) ", "When to stay in the GIL, and when to escape it ", "The advantages and safety of the GIL", "Python-level exiting of the GIL; analysis of when to return to single-threaded, and when threading is a deceivingly bad idea", "Accountability of frameworks that natively exit the GIL", "The new multithreading and multiprocessing libraries and techniques", "static multiprocessing module (smp) (and monkey patching of multiprocessing)", "thread pool control with command line calls of Python ( python -m tbb -p 8)", "Putting it all together", "Examples of using static multiprocessing on a large machine to stop oversubscription", "Example of pseudo-daemon process on 4-core machine by processor pinning", "Thread pool control on a simple NumPy example", "Summary - Best practices for using above methods to control multithreading+multiprocessing", "What needs to be done in the space (frameworks and things that need to be exposed)", "Problems that still exist in the area", "Q&A"], "date": ["Friday 27 July"], "tags": ["Best Practice", "Multi-Processing", "Multi-Threading", "CPython", "Scientific Libraries (Numpy/Pandas/SciKit/...)"]},
{"title": ["A Python implementation in Rust?"], "author": ["Windel Bouwman"], "description": ["Rust is a fairly new programming language aimed as a competitor of C.\nThere are already attempts to write extension modules in rust and load\nthem into CPython. A whole new approach would be to re-implement the Python\nlanguage in rust.", "This is what the rspython project is about: implementing\na python interpreter in rust. Rust already has many features such as vectors,\nhashmaps and strings as unicode. There also exist already modules for\nregular expressions and dealing with files, so a lot can be re-used in\nthis area.", "During this talk we will dive into rust and python and the design of\nthe rspython. We will present some challenges and opportunities. Also\nwe will show the current state of this project in a demo."], "date": ["Thursday 26 July"], "tags": ["Compiler and Interpreters", "Python 3"]},
{"title": ["A Jupyter Enhancement Proposal Story"], "author": ["Raniere Silva"], "description": ["Python users should be familiar with the concept of Python Enhancement Proposals (PEPs), the way that the Python language evolves over time. In a similar fashion, the Jupyter project has Jupyter Enhancement Proposals (JEPs). This talk with cover the proposer first-hand experience when submiting JEP 23 - Add Template as Metatada enhancement proposal from it\u2019s beginning, during EuroPython 2017, up to its current status. We will, in addition, present efforts made as part of the OpenDreamKit project to perform Jupyter notebooks conversions using custom metadata, templates, and exporters, in a programmatic way. ", "Outline", "0:00 - 0:05 Who are we? We are impostors!\n0:05 - 0:10 Our previous experience with Jupyter Notebook. We will talk about the time that Software Carpentry used Jupyter Notebook for their lesson creation and OpenDreamKit Jupyter notebook programmatic notebooks conversion.\n0:10 - 0:15 You are not alone. We will talk how the idea for the Jupyter Enhancement Proposals (JEPs) borned at EuroPython 2017 Help Desk\n0:15 - 0:20 Writing our first Jupyter Enhancement Proposals. We will cover our steps to create the pull request required by the Jupyter Project.\n0:20 - 0:25 What is the current status of the Jupyter Enhancement Proposals? We will cover any progress from the time of this talk proposal submission and the date of it presentation.\n0:25 - 0:30 Time for questions "], "date": ["Wednesday 25 July"], "tags": ["Case Study", "Jupyter/iPython", "Community"]},
{"title": ["10 years of EuroPython and the Python community"], "author": ["Dougal Matthews"], "description": ["This talk will take you on a journey from Birmingham to Edinburgh via Florence, Berlin, Bilbao and Rimini. The last 10 years of EuroPython.", "This will be a trip down memory lane where we look at how the language, community and conference have evolved with some personal anecdotes along the way.", "This will be in part a retrospective, where we will look at what we have done well and where we can do better. Finally, we will look at some aspirations and ideas for the coming years."], "date": ["Thursday 26 July"], "tags": ["EuroPython", "Community"]},
{"title": ["White Mars: living far away from any form of life"], "author": ["Marco Buttu"], "description": ["Concordia Station is a French/Italian facility located inside Antarctica, in a plateau called Dome-C, in the middle of nowhere. A dark and cold place: no Sun from May to August, temperatures around -80 Celsius degress, no life. Here I am living and performing scientific research with other 12 collegues from Italy, France and Austria. We are the most isolated people on Earth, more than the austronauts in the International Space Station. There is no way to move from Concordia until November, and no one can come. It is like to live in another planet, and that is why the European Space Agency is interested in making bio-medical research on us, in order to better understand how the human body behaves in a such extraterrestrial environment. We will introduce our studies, describe this place and our life here, and of course also speak about Python."], "date": ["Wednesday 25 July"], "tags": ["Science", "Case Study"]},
{"title": ["How to Ignore Most Startup Advice and Build a Decent Software Business"], "author": ["Ines Montani"], "description": ["It\u2019s a great time to be a software developer. Platforms are steadily becoming more mature, useful tools are released almost daily and things that seemed hopelessly futuristic only a few years ago are suddenly commercially viable. Despite this, the software world is awash with bullshit. The success of the largest technology companies has led to a very skewed set of lessons. This narrow focus is amplified by the venture capital industry and the fact that nobody really knows what\u2019s going to happen next.", "The good news is, none of this actually matters. The basics of creating something useful and selling it for money remain the same. In this talk, I\u2019m not going to give you \u201cone weird trick\u201d or tell you to ~* just follow your dreams *~. But I\u2019ll share some of the things we\u2019ve learned from building a successful software company around commercial developer tools and our open-source library spaCy."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Natural Language Processing", "Business", "failures/mistakes", "Use Case"]},
{"title": ["Die Threads"], "author": ["David Beazley"], "description": ["In the brave new world of async, threads are now a thing of the past. Or are they not?"], "date": ["Wednesday 25 July"], "tags": ["Python general", "ASYNC / Concurreny", "Multi-Threading"]}
][
{"title": ["Citizen Science with Python"], "author": ["Ian Ozsvald"], "description": ["You could make a difference in the world with a little science and Python. We\u2019ll look at several data-driven humanitarian and healthcare projects developed using Python and, all going well, run some audience experiments. By the end of the talk I hope you\u2019ll be looking to run your own experiments with the scientific Python stack."], "date": ["Friday 27 July"], "tags": ["Science", "Data"]},
{"title": ["How do I get the job I want? "], "author": ["Franziska Schropp"], "description": ["Engineers are rare, jobs are plenty, so far so good. But what if I don\u2019t just want any job that pays the bills, but the job that will push my career and that I actually enjoy doing every day? If your answer to why you\u2019d like to join company XY is: \u201cWork from home and make good money\u201d, you should not be surprised to not be taken into the next round. But what would be a good answer to that question? What should I say when asked where I see myself in 5 years? There are a lot of subtle aspects to succeeding and failing in the application process, from your initial cover letter to the on site visit meeting the team.  As a tech recruiter, I\u2019d like to share with you the best and (sometimes quite entertaining) worst practices in the application process in order to help you get the job you want! "], "date": ["Wednesday 25 July"], "tags": ["The Answer to Life the Universe and Everything Else", "workforce", "Community"]},
{"title": ["How is python used in biomolecular sciences?"], "author": ["Antonia Mey"], "description": ["In the last ten years scientists working on computational problems involving proteins and other small molecules have largely moved to using python when developing simulation and data analysis tools allowing for a fast prototyping and development of new ideas. One big challenge is dealing with the compatibility of different tools and using these to create very complex adaptive, yet robust workflows in order to be able to guide cutting edge experiments e.g. predicting how well a small drug like molecule can bind to a protein that could serve as a target for a new drug. The talk will give a gentle introduction to what kind of python related tools are available in the field  of computational molecular biology, how they are used, and what kind of complex workflows scientist have to solve.\nI will then introduce BioSimSpace an open source python library and flagship project of the CCPBioSim consortium in the UK, which provides a common API to avoid having to learn many individual tools facing compatibility and dependency challenges allowing scientists to focus on the scientific question at hand and not solving programming challenges. BioSimSpace allows fast and interoperable building of workflow components (nodes) for bimolecular problems, which can easily be used on a variety of different computational resources. In particular I will introduce the cloud facilities available for fast prototyping using a Jupyter notebook interface. "], "date": ["Wednesday 25 July"], "tags": ["Physics", "Visualization", "Data", "Jupyter/iPython", "Scientific Libraries (Numpy/Pandas/SciKit/...)"]},
{"title": ["Hello to the World in 8 Web Frameworks (micro, batteries included & async)"], "author": ["Aaron Bassett"], "description": ["Join us for a Phileas Fogg inspired whirlwind tour of eight Python web frameworks.", "\u201cHad he programmed? It was likely, for no one seemed to know web frameworks more familiarly; there was no framework so obscure that he did not appear to have an intimate acquaintance with it. He must have developed in everything, at least in the spirit.\u201d", "We\u2019ll start with the current crop of microframeworks, showing how to achieve the same task in each, before progressing to \u201cBatteries included\u201d and the more specialised async frameworks.", "For developers who perhaps have only used a single framework, this talk gives them an opportunity to get out and explore the world (of web frameworks) and broaden their horizons, with plenty of Jules Verne inspired fun along the way."], "date": ["Thursday 26 July"], "tags": ["Fun and Humor", "Pyramid", "ASYNC / Concurreny", "Internet", "Django"]},
{"title": ["How async and await ended up in Python"], "author": ["Pavlin Gergov"], "description": ["We\u2019re going to talk about regular functions,  iterables, iterators, function execution and yield - generator functions. We will send values and play with generators a bit. A quick look at asyncio will be followed by async and await, what a coroutine is and how to write async code with Python.", "Code snippets can be found here: ", "https://github.com/pgergov/europython-2018"], "date": ["Friday 27 July"], "tags": ["Beginners", "Education", "Python 3", "ASYNC / Concurreny"]},
{"title": ["How can you use Open Source materials to learn Python & data science?"], "author": ["Kamila Stepniowska"], "description": ["Python is very often recommended as the language of choice in a programming education. I can see at least two cases when it\u2019s a thing:\n- introduction to programming - regardless an age and any previous educational experience,\n- data science - it\u2019s just a standard\u2026\nand actually both - you can teach a future data scientists starting by teaching Python. ", "During this talk, I would like to briefly present you what Open Source Python educational materials do we have there and how those are and can be used to teach Python and data science. PyLadies, Django Girls, Django Carrots, Python Software Foundation creates many very available materials. From the data science side, you have Open Source materials created by kaggle, Minerva, Github repos, and many other organizations and individuals. ", "During this talk you will learn:\n- where to find an Open Source Python and data science tutorials and educational materials\n- how does the Python community can support your learning process\n- why learning data science with Python is a good idea.", "I\u2019m also interested in learning your educational experience with an Open Source materials and Python community supporting your learning experience. If you would like to share a link or your educational story,  please feel free to send me an email on kamila@stepniowski.com. If I will find it interesting for the audience and if you will give me your permission to share it, I might use it in the talk."], "date": ["Thursday 26 July"], "tags": ["Education", "Diversity", "Open-Source", "Community", "Learning"]},
{"title": ["Hacking Reinforcement Learning"], "author": ["Guillem Duran"], "description": ["Repository", "Slides with notes", "Creating huge datasets of top performing examples for Reinforcement Learning (RL) has always been tricky, but if we allow\nourselves to cheat a bit it can be done very easily. During this talk, I will present a new family of algorithms that allow to efficiently generate very high quality samples for any known RL environment.", "This new generation of planning algorithms achieves a performance which is several orders of magnitude higher\nthan any other existing alternative, while offering linear time complexity and good scalability.", "This talk will be a practical example\nof how we can use new tools for hacking any reinforcement learning environment, and make it generate superhuman level games.", "Hacking RL, as any other hacking process will be divided in four phases:", "During information gathering, I will briefly explain what are the main ideas behind Reinforcement Learning.\nI will also talk about how our theory (FractalAI) came to be, and what are the fundamental concepts behind it.", "We will find an attack vector against the environment API, and explain how it can be exploited. I will explain\nthe fundamental concepts needed to build a new generation of exploits, that will allow us to have complete control over the data the environment produces.", "This is the time to test the new exploits and to show a proof of concept. We will exploit the attack vector to gain access\nto the environment. Using only a laptop I will show how it is possible to sample data which surpasses human performance way faster than real time.", "Once we have gained control of the environment, we will measure how well the exploits work, and how well the techniques presented\ncan generalize to other types of environments.", "I want the talk to be as simple and fast as possible, with a lot of graphical examples, videos, and a Jupyter notebook.\nThe Q&A session is the time to apply some social engineering to get me to talk about the details that you find more interesting.\nI have prepared additional material covering the most common questions and concerns, but feel free to ask whatever you want, I love challenging questions ;)", "Some of the topics covered in the additional material are:", "Google spreadsheet with all bencharks on Atari", "Code used to run the examples", ". (Not merged to the FractalAI repo yet)"], "date": ["Wednesday 25 July"], "tags": ["Science", "Case Study", "Algorithms", "The Answer to Life the Universe and Everything Else", "Deep Learning"]},
{"title": ["Good features beat algorithms"], "author": ["Pietro Mascolo"], "description": ["In Machine Learning and Data Science in general, understanding the data is paramount. This understanding can come from many different sources and techniques: domain expertise, exploratory analysis, SMEs, some specific Machine Learning techniques, and feature engineering.\nAs a matter of fact, most Machine Learning and Statistical analysis strongly depends on how the data is prepared, thus making feature engineering very important for any serious Machine Learning enterprise.", "\u201cFeature engineering is the process of transforming raw data into features that better represent the underlying problem to the predictive models, resulting in improved model accuracy on unseen data.\u201d", "In this talk we will discuss what feature engineering  and feature selection are; how to select important features in a real-world dataset and how to develop a simple, but powerful ensemble to measure feature importance and perform feature selection.", "Familiarity with intermediate concepts of the Python programming language is required to follow the implementation steps. General knowledge of the basic concepts of Machine Learning and data cleaning will be useful, but not strictly necessary, to follow the discussion on feature selection and feature engineering."], "date": ["Friday 27 July"], "tags": ["Algorithms", "Data Science", "Data", "Python 3", "Machine-Learning"]},
{"title": ["Getting Started with Mypy and Type Checking"], "author": ["Jukka Lehtosalo"], "description": ["Ever wondered if you should try type checking in your Python project, or what it takes to get started with mypy? I will show how to introduce type checking the easy way, one step at a time.", "Dropbox was an early adopter of type checking and mypy, and we\u2019ve been gradually adding type annotations to our large production codebases since 2016. Engineers love how type annotations improve the clarity of code, and how mypy can surface hard-to-find bugs. We\u2019ve learned a lot in the process of annotating millions of lines of code, and in this talk you\u2019ll learn battle-tested approaches for adding type checking to an existing codebase.", "I expect no previous experience with mypy. You\u2019ll benefit the most if you\u2019ve worked on a project with multiple developers."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Type-Hinting", "Tooling", "Code Analysis"]},
{"title": ["Get Productive with Python in Visual Studio Code"], "author": ["Dan Taylor"], "description": ["In this demo driven session, we\u2019ll show you how to use the cross-platform, free, and open source Visual Studio Code for all your Python development needs. From editing, to linting, to debugging and more, you will learn how to get started, as well as tips and tricks to save you time in your everyday development lifecycle.", "If you\u2019re an experienced Python developer, you will learn how to take advantage of all of Visual Studio Code\u2019s capabilities to maximize your productivity. If you\u2019re a new Python developer, you will learn more about Python and how to use Visual Studio Code to get up and running quickly.", "We will start by showing how to create a new application, configure linting, manage virtual environments, and run code. Then we\u2019ll show how to use more powerful features like debugging, unit testing, the Docker extension, and Visual Studio Live Share for collaborative editing and debugging with your co-workers. ", "Code available at: http://github.com/qubitron/pydemo"], "date": ["Friday 27 July"], "tags": ["Development", "Debugging", "Programming", "Tooling", "Python general"]},
{"title": ["Fuzzy Matching - Smart Way of Finding Similar Names Using Fuzzywuzzy"], "author": ["Cheuk Ting Ho"], "description": ["Matching strings should be one of the first natural language processing problem that human encounter since we start use computer to handle data. Unlike numerical value which has an exact logic to compare them, it is very hard to say how alike two strings are for a computer. One may compare them character by character and have an idea of how many characters in the pair of stings are the same. Unfortunately in most application we need computer to perceive strings like we do and therefore we have to use fuzzy matching. Fuzzy matching on names is never straight forward though, the definition of how \u201cdifference\u201d of two names are really depends case by case. For example with restaurant names, matching of words like \u201ccafe\u201d \u201cbar\u201d and \u201crestaurant\u201d are consider less valuable then matching of some other less common words. Also, do we consider company names that matches partly (like \u201cHappy Unicorn company\u201d and Happy Unicorn co.\u201d) are the same?", "In the first half of the talk Levenshtein Distance, a measure of the similarity between two strings, will be explained. Different functions in Fuzzywuzzy like \u201cpartial", "ratio\u201d and \u201ctoken", "sort_ratio\u201d will also be explored and compared for difference. It is very important to understand our tool and choose the right one for our task. Then in the second half, we will start tackling the example problem: matching company names, we will show that besides using Fuzzywuzzy, we have to also handle problem like finding and avoid matching of common words and speeding up the matching process by grouping the names. By combining all tricks and techniques that we demonstrate, we will also evaluate how efficient this method is and the advantage of using this method.", "This talk is for people in all level of Python experience who would like to learn a trick or two and would like to be able to solve similar problems in the future. Theory of how the library works will be explained and It is easy to be pick up even for beginners."], "date": ["Wednesday 25 July"], "tags": ["Beginners", "Case Study", "Data", "Open-Source", "Natural Language Processing"]},
{"title": ["From Zero to Azure with Python, Docker containers, and Visual Studio Code"], "author": ["Dan Taylor"], "description": ["In this session we will walk through creating a Python web app\nwith Docker and deploying it to Microsoft Azure using the free,\ncross-platform, and open-source Visual Studio Code. We will also show\nusing hosted Jupyter notebooks in Azure Notebooks to analyze data, and\nstoring data in CosmosDB using the Azure SDK for Python. If you\u2019re\nexcited about Python and want to learn more about the capabilities of\nAzure, then this session is for you. We will cover all of the basics, no\nexperience with Azure, containers, cloud computing, or Visual Studio\nCode necessary!", "Code Repository: https://github.com/qubitron/zerotoazure-flaskcosmos"], "date": ["Wednesday 25 July"], "tags": ["Windows", "Web", "Docker", "Cross-Platform-Development"]},
{"title": ["From linear algebra to machine learning"], "author": ["Omar Guti\u00e9rrez"], "description": ["Math is a crucial skill for people who are interested in Data Science and Machine Learning. Until now, most of the people who are doing Data Science have a strong background in math, usually, people with master or Ph.D. degrees. ", "However, this fact seems to change in the next years, after the hype of Machine Learning we are facing a process of ", "democratization", ". Now the door of Data Science is open for everyone.", "To ", "truly madly deeply", " understand how the machine learning algorithms work we need to understand some mathematical concepts. In this tutorial, I would like to share my experience in the process of learning some of those concepts. ", "What I want to do is build a bridge between those concepts and Python, more specifically, ", "SciPy", " and ", "NumPy", " and ", "TensorFlow", ".  Basically is ", "just another tutorial about vectorization", ", in this case, oriented to understand and implement machine learning algorithms and the mathematical foundation that supports it.", "The material of the talk can be found ", "here"], "date": ["Friday 27 July"], "tags": ["Scientific Libraries (Numpy/Pandas/SciKit/...)", "Data Science", "Data", "Jupyter/iPython", "Machine-Learning"]},
{"title": ["Faster Python startup"], "author": ["Jeethu Rao"], "description": ["The cPython\u2019s startup speed generally quite fast compared to other similar dynamic language interpreters. Despite this, the interpreter\u2019s startup time increases linearly with the number and size of imported python modules. Although interpreter startup speed isn\u2019t a significant concern in long running servers, it does matter for the command line and other frequently launched applications.", "One of the oldest tricks in the book, when it comes to performance optimizations is to perform frequent and expensive operations fewer times and reuse results from previous invocations. We noticed that the overhead of reading and un-marshalling .pyc files at startup can be eliminated if we could directly embed code objects and their associated object graph from .pyc files into the data segment of the cPython binary. This technique is quite similar to the approach taken by image based languages like Smalltalk in the past. Implementing this for cPython is made simpler because marshaled code objects in .pyc files contain a subset of the types of objects that marshal format supports. With this approach, loading a module included in the python binary is as cheap as dereferencing a pointer, albeit at the cost of increased binary size.", "This talk will discuss the approach taken to implement the aforementioned idea for Python 3.6 and the challenges faced in implementing it. It will also talk about benchmark results from the improvements and possible future directions for this work. Although this talk delves into cPython internals, no prior experience with cPython internals is required to follow along."], "date": ["Friday 27 July"], "tags": ["Performance", "Compiler and Interpreters", "CPython"]},
{"title": ["ETL pipeline to achieve reliability at scale"], "author": ["Isabel Lopez"], "description": ["In an online betting exchange, thousands of money related transactions are generated per minute. This data flow transforms a common and, in general, tedious task such as accounting into an interesting big data engineering problem. At Smarkets, accounting reports serve two main purposes: housekeeping of our financial operations and documentation for the relevant regulation authorities. In both cases, reliability and accuracy are crucial in the final result. The fact that these reports are generated daily, the need to cope with failure when retrieving data from previous days, and the fast growing transaction volume obsoleted the original accounting system and required a new pipeline that could scale.", "This talk presents the ETL pipeline designed to meet the constraints highlighted above, and explains the motivations behind the tech stack chosen for the job, which includes Python3, Luigi and Spark among others. These topics will be covered by describing the main technical problems solved with our design:\n- Fault tolerance and reliability, i.e ability to identify faulty steps and only rerun those instead of the whole pipeline.\n- Fast input/output.\n- Fast computations."], "date": ["Wednesday 25 July"], "tags": ["Case Study", "Python 3", "Big Data", "Scientific Libraries (Numpy/Pandas/SciKit/...)"]},
{"title": ["The pytest/tox/devpi help desk"], "author": ["Oliver Bestwalter"], "description": ["We\u2019ll try to help everyone with their questions around pytest, tox and devpi and how they work together to test and release your packages.", "If you have concrete questions or just want to learn more about these tools, come around and have a chat with us.", "Potential topics and questions are:"], "date": ["Wednesday 25 July"], "tags": ["Best Practice", "Packaging", "Testing"]},
{"title": ["Exploring the Python AST Ecosystem"], "author": ["Chase Stevens"], "description": ["Materials are available at https://github.com/hchasestevens/europython-2018", "This session will introduce attendees to Python\u2019s rich ecosystem of abstract syntax tree tooling and libraries, with an emphasis on practical applications in static analysis and metaprogramming. Attendees should be fully comfortable with Python syntax and semantics, but familiarity with the ast module itself will not be necessary. ", "The talk will begin with a conceptual overview of ASTs, including a brief look at Python\u2019s built-in introspection capabilities. It will introduce tools for AST visualization (astor, showast, python-ast-explorer), creation (asttools, meta), and transformation to source code (codegen). ", "How the AST can be used for static analysis will be covered; this will include discussion of Python\u2019s built-in facilities (NodeVisitor) as well as of the 3rd party tools astsearch, astpath, and bellybutton. The talk will demonstrate the advantages and limits of these tools in comparison to other static analysis tooling (pylint, mypy); particular attention will be paid to how these tools can be incorporated into attendees\u2019 workflows and  existing codebases and projects. ", "Tooling for Python AST manipulation and metaprogramming will be the final topic covered, focusing on the use of the NodeTransformer built-in. The talk will cover practical applications and examples of metaprogramming, such as metaprogramming for DSLS (pony, xpyth), runtime code manipulation (patterns, yield-from), and others (e.g. assertion rewriting in pytest).", "While the talk will touch only briefly on each of the applications discussed, by the end of the session attendees should have a firm grasp of the kinds of problems the AST can be used to solve, what existing AST tooling can accomplish, and what resources are available for the development of their own AST tools."], "date": ["Friday 27 July"], "tags": ["Use Case", "Python general", "Tooling", "Code Analysis", "Static Analysis"]},
{"title": ["OpenStack Help Desk"], "author": ["Daniel Abad"], "description": ["Come and chat with us about OpenStack! The free and open-source software platform for cloud computing. Get the advantages of infrastructure-as-a-service without the vendor lockin.", "We can answer questions about OpenStack, help you with specific problems or help you get started with contributing to an OpenStack project. Your helpers will be OpenStack developers with years of experience using and developing on a number ofdifferent OpenStack projects.", "We will  have a OpenStack deployment that we can use to demonstrate some of the possibilities."], "date": ["Friday 27 July"], "tags": ["OpenStack"]},
{"title": ["Help desk: choosing (or not) the right NoSQL database"], "author": ["Alexys Jacob"], "description": ["During this ", "help desk", ", some Numberly\u2019s folks will make their ", "field expertise", " available to ", "help you decide on the right database", " for your project.", "The NoSQL databases ecosystem evolved a lot over the last decade and it may be hard to keep up with all their strengths and design patterns. So let\u2019s take this occasion to discuss about them!", "If you are ", "starting up a new project or facing problems and limitations with your current implementation", ", we will try our best to help you choose (or not) the right NoSQL database."], "date": ["Wednesday 25 July"], "tags": ["Infrastructure", "System Architecture", "Distributed Systems", "NoSQL", "Databases"]},
{"title": ["Extending Python with C/C++"], "author": ["Paul Ross"], "description": ["If you want your Python code to run really fast you can get dramatic performance improvements if you are willing to write some of your code in C/C++. There are several ways to do this from traditional Python C extensions to using environments such as Cython or Pybind11. This help desk is here so you can choose the best approach to achieve that magical 100x performance increase without pain."], "date": ["Friday 27 July"], "tags": ["Cython", "Open-Source", "CPython", "Performance"]},
{"title": ["Basic Data Science tools"], "author": ["Sarah Diot-Girard"], "description": ["The aim of this session is to help data scientists with little experience in Python : ", "Set their environment development: install Python, Jupyter, set Virtualenv , install scientific libraries: Pandas, Numpy, Scipy.. ", "Get started with Jupyter, Pandas  ", "Solve practical issues with Pandas and other scientific libraries  ", "Get started with Matplotlib and other dataviz tools "], "date": ["Thursday 26 July"], "tags": ["Visualization", "Data Science", "Jupyter/iPython Notebook", "Scientific Libraries (Numpy/Pandas/SciKit/...)"]},
{"title": ["Python and Raspberry Pi"], "author": ["Ben Nuttall"], "description": ["Explore physical computing and more using Python on Raspberry Pi", "The Raspberry Pi is a small affordable computer which runs a Debian-based operating system called Raspbian. It has been designed for the purpose of education, and it is also used by hobbyists and in industry across the globe.", "The Raspberry Pi Foundation is a charity that works to put the power of digital making into the hands of people all over the world by making computing accessible to all. More than 15 million Raspberry Pi computers have been sold since the first product launch in 2012, and all sales profits go towards the Foundation\u2019s educational programmes, courses, and resources.", "The poster covers:"], "date": ["Friday 27 July"], "tags": ["Internet of Things (IoT)", "Other Hardware", "Raspberry PI", "Education", "Open-Source"]},
{"title": ["Python Game Console"], "author": ["Radomir Dopieralski"], "description": ["Learning to make video games is a great way to learn about computers. They are not only very motivating and rewarding, but also teach a very difficult kind of programming \u2014 real-time, interactive applications. In the process you also learn about graphics, sound, graphs, artificial intelligence, data structures and algorithms, not because someone tries to teach you, but simply because you actually need all this to make your game. Knowledge gained this way has its own unique quality.\nUnfortunately, while Python is an excellent language for learning, it doesn\u2019t make it easy to make games. The number of hoops you have to jump through for installing and configuring everything on every single computer on which you want to run your game makes it really hard to start, and even harder to show your creations to your friends.\nTo make things easier, I have built a number of devices dedicated to game development, which remove as many of the obstacles as possible to let you simply start on making your game, without distractions."], "date": ["Thursday 26 July"], "tags": ["Gadgets", "Teaching", "Education", "Game-Development", "MicroPython"]},
{"title": ["Plone and modern frontend frameworks"], "author": ["Paul Roeland"], "description": ["Plone has a long track record in being the premier Python-based web CMS. Yet, recent years have seen an acceleration in frontend technologies. With a stable restful API, it is now possible to use your favorite frameworks like React or Angular to create modern and bespoke frontends and apps, while still using all of  the  stability, security and workflow that a mature product such as Plone provides.  ", "Cake. Have. Eat. ", "The poster will highlight the state-of-the-art, used-in-production methods, widget libraries and updated UI/UX."], "date": ["Thursday 26 July"], "tags": ["CMS", "JavaScript", "RESTful", "Plone", "Open-Source"]},
{"title": ["What do a model boat and a giant laser have in common?"], "author": ["Thomas Kluyver"], "description": ["Last year, I was part of a team building a small autonomous sailing boat. This year, I started working at European XFEL, a research facility built around a 3km long X-ray laser. Both projects use Python in their control systems, and despite the vastly different size and budget, they have surprisingly similar architectures, with separate processes sending data to each other using sockets.", "We wrote the code for our sailing boat using an open source framework called the Robot Operating System, or ROS. ROS is built around the concept of communicating nodes: a node can publish messages on a named topic, and any other nodes subscribed to that topic will receive the message. Our boat runs about 15 nodes (the precise number depends on what task it\u2019s doing). This isn\u2019t the only way to drive a robot boat: the team from Aberystwyth, whose code is also open, use a very different architecture.", "European XFEL, in Hamburg, is a new \u20ac1.2 billion collaboration between 12 countries. The control and data analysis systems are built on a framework called Karabo, developed in-house. Karabo \u2018devices\u2019 - which can encapsulate hardware interfaces or software processing - communicate using both a central message broker and point-to-point channels.", "I\u2019ll describe each of these projects, and the similarities and differences between their software systems. Then I\u2019ll talk about what has been good and bad on each project, and what patterns and ideas we can take from them for designing other systems, including systems that don\u2019t control hardware."], "date": ["Friday 27 July"], "tags": ["Science", "Engineering", "Robotics", "Architecture", "Case Study"]},
{"title": ["introduce Python community/conf, and cross region community in Asia."], "author": ["Noah Chen"], "description": ["PSF(Python Software Foundation)  help most people who want to learn Python, and we also join so many meetup/event/conference organized by PSF or related to PSF. in Europe, thanks EuroPython Society doing a lot of jobs in handle or manage so many different region. \nPython is also very popular in Asia. me , Noah who is from Taipei, learn Python and join Taipei.py and PyConTW since 2014. I received the passion from member of Python Community in Taipei, not only in Taiwan, we also have 9 python communities in different cities around Taiwan, included KaoHsung, TaiChung, Tainan, HwaLien, TaoYoung, and we also have 2 female community which called: PyLadies Taipei, and DjangoGirls Taipei. \nin Taipei, we already have so many open source event or conference , what different to Python Community or PyConTW? the reason I want to join and contribute Python is : I can connect the world through Python. PyConTW is found by yyc(Yung-Yu Chen) since 2012. at 2012, PyConTW always invite famous people in Python to present in PyConTW, and also, outstanding speakers always bring their outstanding python friends. PyConTW is the first and most foreigner audiences or speakers international Open Source Conference I joined. this is way I can connect the world, face to face. \nnot only PyConTW, I also try to connect PyCon around Asia, like PyCon Japan, and Korea, I am be a volunteer since 2016, and going on. being a volunteer of PyConMY APAC and PyConID in 2017. this is the contact and connect the world we want to share in Python, and want to contribute in Python in Asia.\nnow , I join FOSSASIA, being a volunteer of FOSSASIA, I can help to promote my experience of Python and FOSS to people in Taipei. and now, I want to share my Asia experience to python friends in Europe."], "date": ["Friday 27 July"], "tags": ["Python Software Foundation (PSF)", "Communication", "Conferences and Meet-Ups", "Diversity", "Community"]},
{"title": ["Making neural networks portable with ONNX"], "author": ["Micha\u0142 Karzy\u0144ski"], "description": ["The world of deep learning frameworks is complex. It seems that every major company has their own product in this space. Some have great features, others have great performance, so its very difficult to choose the right one. But what if you didn\u2019t have to limit your choice to just one? What if you could use the most developer-friendly framework for designing a neural network, the most efficient framework for training and finally the lightest one for inference on edge devices? That\u2019s the idea people at Facebook, Microsoft and Amazon were thinking about when they created the ONNX format.", "Open Neural Network Exchange (ONNX) is a binary file format, based on Protocol Buffers, designed to store representations of neural networks. Networks are stored as computational graphs and the format supports saving both the network architecture and trained weighs.", "ONNX is an open standard and it\u2019s gaining broad community support. Tools already exist for importing and exporting models from frameworks such as Caffe2, PyTorch, Microsoft Cognitive Toolkit (CNTK), Apache MXNet, Chainer, TensorFlow, SciKit-Learn. ONNX support will be built directly into Windows and Apple\u2019s CoreML. Runtimes exist for other environments such as servers and neural network accelerators (Intel\u2019s nGraph), GPUs (NVIDIA\u2019s TensorRT) and more. Other tools such as Netron and Visual DL allow you to visualize and inspect your ONNX models.", "My poster will describe the capabilities of ONNX and demonstrate them through code samples and screenshots. We\u2019ll also cover ONNX\u2019s current limitations and areas of future development."], "date": ["Friday 27 July"], "tags": ["Deep Learning", "Data Science", "Open-Source", "Machine-Learning"]},
{"title": ["Hardening Plaintext Secrets in Configuration Files"], "author": ["Mois\u00e9s Guimar\u00e3es"], "description": ["Many applications and services rely on configuration data in order to behave according to the customer needs. The standard library gives us ConfigParser, and many projects use it to achieve easy configuration with plaintext config files.", "OpenStack Common Libraries (Oslo) has an enhanced alternative called oslo.config with support to command line arguments, option deprecation, and much more. With the addition of the source drivers feature, it is possible to increase the security of config values storing them in a safer place.", "The source drivers feature allows extra sources of configuration data other than plaintext config files adding the possibility to have other layers of security around the configuration values and increasing the fail-safe options."], "date": ["Thursday 26 July"], "tags": ["Development", "Best Practice", "Security", "Open-Source", "Command-Line"]},
{"title": ["Human Mobility Patterns"], "author": ["Antonia Tugores"], "description": ["Research on mobility has traditionally relied on surveys and datasets generally composed of small samples with a low spatio-temporal resolution. However, the situation is now changing with digital data sources. We use geolocated data from different contexts to analyse human mobility at different levels and predict people fluxes between cities.", "Studies can be done at different levels ranging from intracity to intercontinental trips. Do tourists and residents behave in the same way when in the same city? Are we prone to visit some cities if we have visited another one? What about train and private transport networks, do people from different countries show different patterns? Can we predict people fluxes between cities?", "Being one of the main programming languages when talking about data analysis and data science,  Python and its data analysis ecosystem have been the barebones of this research."], "date": ["Thursday 26 July"], "tags": ["Science", "Physics", "Predictions", "Data", "Analytics"]},
{"title": ["Double the money you give PSF, etc., without paying more!"], "author": ["Steve Barnes"], "description": ["Many organisations, especially the larger ones, have \u201cmatching gifts\u201d programs.", "If you work for such an organisation you can potentially double or more the value of any gifts that you give to the EuroPython Society, (EPS), & Python Software Foundation, (PSF), and others.", "No coding experience is needed just a varying amount of persistence & patience."], "date": ["Wednesday 25 July"], "tags": ["Python Software Foundation (PSF)", "EPS", "The Answer to Life the Universe and Everything Else"]},
{"title": ["Discovering the nuclear reactor\u2019s stability with SLEPc and Python"], "author": ["Javier Jorge"], "description": ["Different engineering models such as physic simulations or information retrieval rely on modelling and solving large-scale sparse eigenvalue problems, such as fluid simulation or document retrieval. SLEPc (http://slepc.upv.es) is a software library for the solution of this kind of algebraic problems on distributed computers. We can use this with Python through slepc4py to provide solutions to these computationally expensive problems, using parallelization with different schemes.", "In this poster we introduce slepc4py (https://bitbucket.org/slepc/slepc4py), a python wrapper for SLEPc, along with the problem of determining the nuclear reactor\u2019s stability, a problem that is modeled as obtaining the eigenvalues of certain matrices that are large and sparse. We introduce the techniques that are implemented in SLEPc for solving a problem with these characteristics."], "date": ["Friday 27 July"], "tags": ["Scientific Libraries (Numpy/Pandas/SciKit/...)", "Case Study", "Data", "C-Languages", "Science"]},
{"title": ["Create your own Artificial Intelligence to monitor your Linux System!"], "author": ["Maha Mdini"], "description": ["The object of this session is to explain how one may apply simple statistical calculations and Machine Learning techniques to monitor one\u2019s Linux system. Systems, running services and installed applications generate a large amount of logs. One may create also customized logs for a particular purpose. ", "These logs may be processed in real time or in demand by the means of smart Python scripts for varied purposes:", "1- Optimizing the performance of the system by monitoring the systems logs  (e.g. boot logs) and modeling metrics such as CPU/memory usage, monitoring the performance of services such as HTTP,  MySQL\u2026", "2- Securing the system from external threats by monitoring browsing, ports, login logs \u2026, as well as from internal crashes by monitoring kernel logs", "3- Modeling one\u2019s daily behavior by measuring the frequency/correlations of the usage of applications/services \u2026  "], "date": ["Thursday 26 July"], "tags": ["Scientific Libraries (Numpy/Pandas/SciKit/...)", "Data Science", "Open-Source", "Linux"]},
{"title": ["Fifty Shades of Disaster - Human Error and Complex Systems"], "author": ["Paul Ross"], "description": ["This four part tutorial describes the failures that can happen when humans interact with complex systems. Complete with case studies, this gives valuable lessons for developers, project managers and DevOps engineers. Learn from the mistakes of others as you won\u2019t live long enough to make them all yourself and this talk gives you that opportunity!", "Part 1: Complexity, Coupling and Systems Failures\nA gentle introduction to \u201cmodern accident theory\u201d. We examine the essential characteristics of complex systems and the operators who control them. A life hack is here along with two case studies of software disasters.", "Part 2/4: A Concise History of Civil Aviation\nCivil aviation has moved from very risky to extraordinarily safe. How this was done has valuable lessons for other industries. We looks at the challenges faced by civil aviation, how they were overcome and what we could learn from this.", "Part 3/4: Blame and the Fallacy of Root Cause Analysis\nSo disaster has finally happened, now, how do you go about preventing futures disasters? The obvious ways are wrong. So how do you investigate failure and how do you apply those lessons?", "Part 4/4: Skill, Luck and Sheer Professionalism\nSometimes the human element, the operators, are not hapless perpetrators complicit in the disaster but actively prevent catastrophe. This talk is full of case studies where this happened. An analysis of these case studies will help you to improve your own resilience."], "date": ["Wednesday 25 July"], "tags": ["Operations", "Case Study", "Best Practice", "DevOps general", "failures/mistakes"]},
{"title": ["Cloud-Agnostic Deployment of Distributed TensorFlow"], "author": ["Javier Jorge"], "description": ["In this poster we will see how to deploy the required infrastructure to create a TensorFlow cluster, and then provision the software to train the model. For doing this, we will use the Infrastructure Manager (http://www.grycap.upv.es/im/index.php) that supports API\u2019s from different virtual platforms, making user applications Cloud-agnostic. In addition, it integrates a contextualization system, based on Ansible, to enable the installation and configuration of all the required applications providing a fully functional Deep Learning infrastructure on the Cloud provider that we need.", "Outline: "], "date": ["Thursday 26 July"], "tags": ["Science", "Deep Learning", "Scientific Libraries (Numpy/Pandas/SciKit/...)", "Machine-Learning", "Case Study"]},
{"title": ["Best practices for elegant experimentation in data science projects (case study)"], "author": ["K K"], "description": ["In the course of the project, data scientists face multiple issues. Difficulties with reproducibility, lack of the ability to prepare experiments quickly and dirty data are just three examples. Data science projects involve a lot of experimentation and quick adoption of new ideas and technologies. Such environment makes it difficult to keep the code clean as well as keep track of small changes that makes new experiment successful.", "Here, we use an instance segmentation challenge - called Mapping Challenge - hosted on the crowdAI platform to show: 1) our best practices when working in data science projects, 2) competition results. Our best practices involve usage of the steppy library, which provides minimal interface for building machine learning pipelines. Besides this, we organized our work in a transparent and open way, publishing code, tasks and experiments results.", "On the poster, we share our results regarding pre- and post-processing routines, network architectures and training scheme. We also present technology stack that we use. It is a blend of well established Python packages (like numpy and sklearn) and our own open source initiatives, that is steppy and steppy-toolkit.", "Poster is for Pythonists looking for: 1) example solution to the instance segmentation task, 2) ideas how to organize data science project."], "date": ["Friday 27 July"], "tags": ["Best Practice", "Data Science", "Clean Code", "Open-Source", "Machine-Learning"]},
{"title": ["Asynchronous operations at scale"], "author": ["Hubert Bry\u0142kowski"], "description": ["This talk will cover main purpose, differences, advantages and shortcoming of synchronous and asynchronous operations. Using real life  infrastructure as an example, Hubert will demonstrate how actions like adding a new content can be processed in a non-blocking way. Such approach is more taxing on development time but can be highly beneficial if your application has to sustain high access rate and respond swiftly.\nBy attending the talk you will learn how we build application that support >100M monthly users, what problem arise in such high pace environments and what trade off application developer has to make."], "date": ["Wednesday 25 July"], "tags": ["Performance", "Architecture", "ASYNC / Concurreny", "Multi-Processing", "Microservices"]},
{"title": ["Writing and Running Tests in Docker"], "author": ["Alexandre Figura"], "description": ["\u201cHow to Launch your Tests with Docker Compose: Best Practices and Traps to Avoid\": that would make a great title for a book! Unfortunately, there is no such book available currently. In the meantime, we are all struggling on how to make our applications running in Docker\u2026 Because there is so many ways to do it, it\u2019s often hard to find out what is the best way to do it.", "But with some practice, and many trials/errors, some patterns take shape. That\u2019s what we will see during this training session. We will start by writing some tests for a web application with Pytest. Then, we will automate them with Tox. And to finish, we will run them in Docker Compose. Our development workflow will be managed with Invoke, and our goal will be to have tests independent of the running environment, so they can be run both locally or on a continuous integration server (e.g., GitLab with Kubernetes runners).", "Requirements:"], "date": ["Tuesday 24 July", "Tuesday 24 July"], "tags": ["Best Practice", "Tooling", "Docker", "Deployment/Continuous Integration and Delivery", "Test Libraries (pyTest/node/...)"]},
{"title": ["Technologies to master Parallelism in Python"], "author": ["Shailen Sobhee"], "description": ["Parallelism in Python has been a mysterious pinnacle of language mastery for many years, and with a few advancements in the community it has become even easier to do so.  From easy imported threadpool controls, to advanced multiprocessing affinity and pinning techniques, the options to achieve parallelism are now quite within reach.  In this workshop, learn how to use these frameworks to augment one\u2019s Python code to enable granular control over parallelism workloads and combat oversubscription.", "Slides: https://www.scribd.com/document/384826546/EuroPython-2018-Shailen-Sobhee"], "date": ["Tuesday 24 July", "Tuesday 24 July"], "tags": ["Performance", "Multi-Threading", "Scientific Libraries (Numpy/Pandas/SciKit/...)", "Multi-Processing"]},
{"title": ["Ridiculously Advanced Python"], "author": ["Francesco Pierfederici"], "description": ["If you have been using Python for some time already and want to reach new heights in your language mastery, this training session is for you!", "Python has a number of features which are extremely powerful but, for some reason are not particularly well known in the community. This makes progressing in our Python knowledge quite hard after we reach an intermediate level. Fear not: this session has you covered!", "We will look at some advanced features of the Python language including properties,  class decorators, the descriptor protocol, annotations, data classes and meta-classes. If time allows we will even delve into the abstract syntax tree (AST) itself. ", "We will use Python 3.7 and strongly recommend that attendees install a reasonably recent version of Python 3 to make the most out of the training.", "Warning: some of the topics presented will almost certainly assure an early end to an otherwise successful career in software engineering :-)", "Source code available on GitHub: https://github.com/pythoninside/europython2018"], "date": ["Monday 23 July", "Monday 23 July", "Monday 23 July"], "tags": ["Software Design", "Type-Hinting", "Meta Classes", "Programming", "Python 3"]},
{"title": ["Privacy for Data Scientists"], "author": ["Andreas Dewes"], "description": ["As data and information security become core components of managing user data, data scientists are keen to expand their knowledge and skills relating to data privacy and security basics. As of May 2018, the European General Data Protection Regulation affects how European residents can access and grant consent to use their data. As European data scientists, we now have an obligation as well as distinct motivation, to practice data science with attention to data privacy.", "In this workshop, we will introduce some of the basics in terms of defining privacy within the realm of data collection, modeling and machine learning. A focus on practical knowledge and code, we will cover how one can implement some of these algorithms with Python. Students will be presented with these theories along with recent research on privacy-preserving models, so they can leave with a better understanding of how to apply privacy principles to data science in their work and study."], "date": ["Tuesday 24 July", "Tuesday 24 July"], "tags": ["Security", "Data", "Jupyter/iPython", "Machine-Learning", "Privacy"]},
{"title": ["Introduction to Pandas, Testing and Test-Driven Data Analysis"], "author": ["Nick Radcliffe"], "description": ["This is replacement training for Sandrine\u2019s Intro to Pandas and SciKit Learn, which she sadly won\u2019t be able to present because she has recently broken her nose!", "This training will introduce Pandas (and Numpy) for people who either haven\u2019t used them at all or are just getting started with them. It will then go on to introduce testing in Python (in general), with unittest, and testing analytical code, in particular, with the test-driven data analysis package.", "Planned content:", "Pandas and Numpy:\n  - what they are\n  - why you should used them\n  - how to use them\n  - basic numpy concepts (arrays, dtypes, array operations, zeros, ones, creating new arrays, where, choose, sum, size etc.)\n  - pandas basics: DataFrames, creating DataFrames, loading data, indices\n  - creating new columns, appending DataFrames, merging DataFrames, groupby operations, plotting.\n  - loading and saving data (pickle; csv, feather)", "Testing\n  - the idea of testing and test-driven development\n  - the unittest library basics: unittest.TestCase, unittest.main, verbosity, self.assertEqual and friends.\n  - slightly advanced unittest basics: setUp, tearDown, setUpClass, tearDownClass\n  - unit tests vs. integration and system tests\n  - pytest as an alternative to unittest", "Test-Driven Data Analysis:\n  - making the case for testing analytical processes\n  - extending the ideas from software testing to reference tests for analytical processes with ReferenceTestCase from the TDDA library\n  - Using constraints to test data (input; output; intermediates).\n       - Automatically generating constraints from known good data\n       - Verifying data against generated (or hand-created) constraints \n       - Detecting bad data (and anomalies)", "PREPARATION:", "As a bare minumum, you will need a working Python (preferably 3.6 or 3.7, though 2.7 could be used) with numpy and pandas installed, preferably with JupyterLab. Anaconda is a great way to get all this.", "Ideally, you should also have installed the TDDA library, the feather library and the pmmif library in case the network is overloaded during training.", "All dependencies are available from Github:"], "date": ["Monday 23 July", "Monday 23 July"], "tags": ["Test Driven Development (TDD)", "Data Science", "Testing", "Scientific Libraries (Numpy/Pandas/SciKit/...)"]},
{"title": ["Real-time transcription and sentiment analysis of audio streams"], "author": ["Aaron Bassett"], "description": ["In this training session, we\u2019re going to learn how to create a virtual rapporteur. A digital assistant who can join any conference call; record it and provide participants with real-time insights into the overall tone of the call. Once the call is complete, we\u2019ll look at how we can use the call recording to provide participants with a text transcript as well as meta information about the call such as the most talked about concepts, keywords and entities.", "Attendees", ": you should be familiar with Python and the command line.  You will also need to sign-up for a free ", "Nexmo", " and ", "IBM Watson", " account to access their APIs.", "We\u2019ll be coding the application in Python and JavaScript, with the ", "Hug", ", ", "Tornado", " frameworks; so a knowledge of both languages would be beneficial but is not required. We will be making heavy use of several APIs, so experience with REST and WebSockets will help."], "date": ["Monday 23 July", "Monday 23 July"], "tags": ["Visualization", "JavaScript", "Natural Language Processing", "Machine-Learning", "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)"]},
{"title": ["Get your documentation right"], "author": ["Daniele Procida"], "description": ["This workshop introduces, and helps you implement, an approach that ", "will", " improve your project\u2019s documentation.", "This approach focuses on documentation ", "structure", ". Based on sound, well-established principles concerning a number of topics (including learning, understanding, praxis, pedagogy amongst others) it provides a documentation framework that is easy to understand, straightforward to put into practice, and above all, immediately and enduringly effective.", "In the workshop we\u2019ll use a hypothetical documentation set for examples, but attendees should have some actual documentation - whether already extant or in the planning phase - to apply it.", "The principles used in this workshop are outlined at https://www.divio.com/en/blog/documentation/. This work has been presented in numerous conference talks, such as https://www.youtube.com/watch?v=t4vKPhjcMZg.", "It has been applied successfully to many software projects, making the documentation better for users, and more manageable for its maintainers."], "date": ["Tuesday 24 July", "Tuesday 24 July"], "tags": ["Documentation"]},
{"title": ["Fast native code with Cython"], "author": ["Stefan Behnel"], "description": ["Cython", " is not only an excellent and widely used tool to speed up computational Python code, it\u2019s also a very comfortable way to talk to native code and libraries. The Cython compiler translates Python code to C or C++ code, and supports static type annotations to allow direct use of C/C++ data types and functions. The tight integration of all three languages makes it possible to freely mix Python features like generators and comprehensions with C/C++ features like native data types, pointer arithmetic or manually tuned memory management in the same code.", "This tutorial by a core developer introduces the Cython compiler by interactive code examples, and shows how you can make it generate fast binary modules that talk to native libraries, as easily as Python itself.", "Attendees should make sure they have a C compiler installed and configured to build binary Packages for CPython. We will use CPython 3.6/7, although all examples can also be followed with CPython 2.7. If you\u2019re not on Linux, I recomment using a ", "conda", " environment with gcc.", "Update 2018-07-23", ": Please set up a virtualenv or conda-env with the following tools:"], "date": ["Tuesday 24 July", "Tuesday 24 July"], "tags": ["Cython", "Compiler and Interpreters", "C-Languages", "Performance"]},
{"title": ["Introduction to Big Data Processing using Spark and Python"], "author": ["Raoul-Gabriel Urma"], "description": ["This workshop will provide a hands-on introduction to the Big Data ecosystem, Hadoop and Apache Spark in practice. Through practical activities in Python, you will learn how to apply Apache Spark on a range of datasets to process and analyse data at scale. ", "After taking this workshop you will be able to: ", "SETUP\nDownload / Clone the repository: http://gitlab.cambridgespark.com/pub/bigdata-spark", "Follow the instructions in the SETUP.md file: http://gitlab.cambridgespark.com/pub/bigdata-spark/blob/master/SETUP.md"], "date": ["Monday 23 July", "Monday 23 July"], "tags": ["Data Science", "Big Data", "Jupyter/iPython"]},
{"title": ["Data Wrangling & Visualisation with Pandas & Jupyter"], "author": ["Alexander Hendorf"], "description": ["One of the best tools around for data wrangling and analysis in Python is is Pandas. With Pandas dealing with data-analysis is easy and simple but there are some things you need to get your head around first as Data-Frames and Data-Series. ", "After this tutorial you will be able to work with Pandas and make simple data analytics incl. visualisations. \nPandas is not only useful in data science it\u2019s also a great tool for creating e.g. sales reports or any other data-driven report required in business.\n It\u2019s easy to make fancy analytics while integrating with fellow co-workers used working with Excel.", "Please do come prepared and follow these simple ", " installation instructions", "Pandas features directly accessible, powerful visualisations.", "The workshop will be provided as Jupyter notebook for the attendees to follow along."], "date": ["Tuesday 24 July", "Tuesday 24 July"], "tags": ["Scientific Libraries (Numpy/Pandas/SciKit/...)", "Data Science", "Business", "Analytics"]},
{"title": ["Build, Deploy, Win with Serverless Applications"], "author": ["Kyle Knapp"], "description": ["Serverless applications make it easy for you to run your code without managing servers. Serverless applications can range anywhere from running web applications, to real-time data processing systems, to cron jobs in the cloud. Taking a hands-on approach, this tutorial will teach you how to write and deploy serverless applications in a matter of minutes! No prior experience with serverless applications needed.", "Using AWS Chalice, a Python serverless microframework for AWS, you will be developing serverless applications that run on AWS Lambda, a service run that lets you run code without provisioning or managing servers. In the process of developing these serverless applications, you will learn how to:", "\u2022   Quickly and effectively develop and deploy serverless applications", "\u2022   Utilize best practices in developing serverless applications", "\u2022   Build a wide range of serverless applications by leveraging other AWS services alongside AWS Lambda", "No prior experience in serverless application or AWS is needed, but please make sure your development environment meets the prerequisites of the workshop:", "\u2022   Python 2.7 or 3.6", "\u2022   Virtualenv", "\u2022   AWS credentials", "\u2022   git", "More information on environment setup can be found in the following link: \nhttps://chalice-workshop.readthedocs.io/en/latest/env-setup.html"], "date": ["Monday 23 July", "Monday 23 July"], "tags": ["Public Cloud (AWS/Google/...)", "Web", "Best Practice", "APIs", "Microservices"]},
{"title": ["Building your own sports trading bot"], "author": ["Tomasz Dziopa"], "description": ["In this workshop participants will get a glimpse into the world of automated sports trading. The workshop will start out with an introduction into the realm of betting exchanges, trading bots and the strategies that can be employed to successfully trade sports. After the introduction we will move into a more \u201chands on\u201d session where everyone will get API access to the Smarkets betting exchange and a skeleton of a trading bot which can then be extended with the ultimate goal of creating your first sports trading bot!", "The requirements for this workshop will be basic knowledge of Python and RESTful APIs. Basic knowledge of statistics would also be helpful but is not essential. Last but not least: Do bring your laptops!"], "date": ["Tuesday 24 July", "Tuesday 24 July"], "tags": ["python", "Trading", "APIs"]},
{"title": ["Writing good error messages"], "author": ["Paul Keating"], "description": ["Anyone who has ever conducted an elementary programming course, or even answered a question on StackOverflow, will know that reading error messages is a skill that beginners have to learn. \nIt is less widely appreciated that writing good error messages is also a skill that must be learnt.\nThis talk is in two parts. \nThe first covers the commonest error message gaffes:\n\u2022   Insufficiently explicit messages.\n\u2022   Issuing the same message for two different conditions.\n\u2022   Suppressing the stack trace.\n\u2022   Polluting the stack trace.\nThe second part describes a way to ensure usable, actionable error messages, even when the writer of the message is not a professional coder. This was developed for an environment where superusers code up most of the dozens of data validation rules and the accompanying messages, and the application in which Python is embedded suppresses the stack trace."], "date": ["Friday 27 July"], "tags": ["Python general", "Programming"]},
{"title": ["Best Practices for a Blazing Fast Machine Learning Pipeline"], "author": ["David Liu"], "description": ["Getting through preprocessing to analytics to insights quickly has been the crux of many a Data Scientist.  In this workshop, learn about the best tools, techniques, and frameworks that allow for a fast machine learning pipeline\u2014topics covered will include preprocessing vectorization tricks, distributed dataframe handling, along with tips and tricks to help scale out one\u2019s machine learning code out to cloud or clusters. ", "Workshop Overview:", "-Introduction", "-Tools and Techniques", "-Data preprocessing", "-Break (15 min)", "-Data Visualization", "-Machine Learning", "-Options for scaling and pipelining", "-Break (15 min)", "-Hands-on: Advanced tools", "-Hands-on: Chaining it together", "-Prerequisites are from the two Github repos utilized for the training: (slides in repo)https://github.com/triskadecaepyon/ep_2018_workshop  and https://github.com/IntelPython/workshop"], "date": ["Monday 23 July", "Monday 23 July"], "tags": ["Scientific Libraries (Numpy/Pandas/SciKit/...)", "Data Science", "Machine-Learning"]},
{"title": ["Winning card games with 1000+ CPUs"], "author": ["vincent warmerdam"], "description": ["Vincent was playing a card game against his girlfriend and he kept loosing. So he wanted to train a bot to play on his behalf. This is our story.", "We\u2019re using AWS Lambda to get better at a card game named SushiGO. We make a small genetic algorithm in Python that uses AWS Lambda as a backend. The talk consists of these parts:", "This talk will discuss an algorithm that we\u2019ve tried to improve in three ways:", "We will conclude by discussing whether or not AWS Lambda is suitable for a gridsearch/grid simulation (hint, it\u2019s not meant for this task, but it actually kind of works very well)."], "date": ["Friday 27 July"], "tags": ["Predictions", "Algorithms", "ASYNC / Concurreny", "Command-Line", "Python 3"]},
{"title": ["A Python-flavored Introduction to Containers And Kubernetes"], "author": ["Ruben Orduz"], "description": ["NOTE: This workshop is for very beginners. If you already have had experience with containers and/or Kubernetes, you likely not get much out of this training.", "While not required, if you want to follow along, please follow this link below to set your environment up:\n", "requirements", "Containers have more or less taken over the world of application, web APIs, mobile endpoints and other forms of deployment. They have become the currency, the \u201ctable stakes\u201d and de-facto application deployment unit. Their raise to the fore has brought about a whole host of use cases which weren\u2019t practical or accessible in the world of \u201cclassic\u201d paradigms of infrastructure and virtualization. Containers have also brought application deployment closer and more accessible to developers. ", "But as more use cases, deployment styles and exponential adoption of containers was ongoing, a new set of problems began to surface: how do you manage the ever growing number of containers in a deployment? How do you make sure containers have the right resources, deployed to the right machine, running with the correct parameters, how do you scale in and out without disruption? How do you make sure in a fleet of X containers that they\u2019re all running and in healthy state? Enter Kubernetes.", "The goal of this course is to give the attendees a solid foundation of the core concepts mentioned above both in theory and hand-on practice using docker, kubernetes and friends to deploy a sample multi-tier python web application. All attendees need is a laptop with minikube installed and an Internet connection.", "Full course outline and abstract (because character limit) ", "here", ". ", "This training is an up-to-date version of the training delivered at last year\u2019s EuroPython"], "date": ["Monday 23 July", "Monday 23 July"], "tags": ["Docker", "DevOps general"]},
{"title": ["Why develop a CLI (Command Line Interface) first?"], "author": ["Steve Barnes"], "description": ["One of the core concepts of Application Development, (not just in python), is the separation between the Business Logic and the User Interface. However there is a strong temptation to start with the user interface and add the business logic to it some methodologies emphasize this with the process of prototyping the (G)UI first. The danger is that your business logic code can get too entangled with the UI and a change of platform or framework becomes almost impossible.", "This presentation will show how to maintain a clear separation between the Business Logic and the User Interface by starting with a command line interface using argparse and growing a GUI on top.", "We will cover:\n - Why maintain the seperation\n - Using argparse\n - Adding a GUI layer with wxPython\n - Automating the GUI generation\n - Adding a web interface\n - Testing advantages of this approach\n - Scripting advantages\n - Some packaging models.", "Slides and Samples all uploaded to https://github.com/GadgetSteve/EP2018_Talk"], "date": ["Thursday 26 July"], "tags": ["Software Design", "Development", "Packaging", "Command-Line", "Cross-Platform-Development"]},
{"title": ["When to use Machine Learning: Tips, Tricks and Warnings"], "author": ["Pascal van Kooten"], "description": ["Artificial Intelligence, and machine learning in particular, is one of the hottest topics in tech/business.\nI will explain the core of machine learning, and the main goal of this talk will be to help you judge the success whenever someone yells \u201cI know! let\u2019s solve this using machine learning!\u201d. I will also provide tips and tricks on how to increase the success of such projects. The second part of the talk will be about 2 open-source python projects I\u2019ve created, as well as a project I\u2019m working on regarding the trading of cryptocurrency\u2026 and their relation to machine learning. Specifically, the challenges and findings in making these cases work will be explored."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "failures/mistakes", "Open-Source", "Machine-Learning", "Use Case"]},
{"title": ["What's new in Python 3.7"], "author": ["Stephane Wirtel"], "description": ["Scheduled for release in mid-June before the conference, Python 3.7 is shaping up to be a feature-packed release! \nThis talk will cover all the new features of Python 3.7, including the Data Classes and the Context Variables for the asynchronous programming with asyncio."], "date": ["Wednesday 25 July"], "tags": ["Python general", "ASYNC / Concurreny", "CPython"]},
{"title": ["Descriptors and Metaclasses - Understanding Python's More Advanced Features"], "author": ["Mike M\u00fcller"], "description": ["Descriptors and metaclasses are advanced Python features. While it is possible to write Python programs without active knowledge of them, knowing more about them facilitates a deeper understanding of the language. With examples, you will learn how they work and how to write your own descriptors and metaclasses. Furthermore, you will understand when to use and when better not to use them.", "This tutorial is a systematic introduction to descriptors and metaclasses. It covers all relevant information with a focus on practical applications for common tasks.", "In hand-on sessions you will learn how to write your own descriptors that adapt attribute access to your needs. You will experience how metaclasses can help you to get more insight into a code base.", "Use cases provide working code that can serve as a basis for your own solutions. You will gain a deeper understanding of more advanced concepts that can help to write better programs.", "The training is designed for Python 3 (3.6+ preferred). Most of the material will work with Python 2.7, sometimes requiring minor modifications. I will use  a ", "Jupyter Notebook", " in [Jupyterlab] ( https://github.com/jupyterlab/jupyterlab) in the training. I encourage you to try them out. Otherwise any editor, IDE, or interactive Python environment your prefer works. No other 3rd party libraries to install. Please download the ", "course material", ".\nI\u2019ve been delivering these topics over the last years as a part of numerous advanced corporate trainings and open courses as well as trainings at PyCon US, EuroPython, PyCon PL, PyCon DE, and PyCon IE. The material has been continuously refined based on the  feedback from participants."], "date": ["Tuesday 24 July", "Tuesday 24 July"], "tags": ["Best Practice", "Python general", "Programming", "Use Case"]},
{"title": ["Washing away code smells"], "author": ["Yenny Cheung"], "description": ["Does your code smell? Have a weird fragrance? It turns out code smells are a real thing and an amazing conceptualization of suboptimal design. This talk helps you identify code smells in Python. It also shows you how to wash them away by the technique of refactoring. You will learn the art of writing Pythonic, clean and maintainable code.", "Code smells refer to the symptoms of problematic code design. Identifying different types of code smells is the first step to successful refactoring. I will talk through some classic examples:", "Knowing what to refactor, I will share a few learnings that lead to good quality code:", "I will also share tips on using refactoring at your company, which includes convincing your product manager, looking out for code smells during code reviews, and employing automatic tools.", "The speaker has previously presented on Talk Python To Me Podcast: https://talkpython.fm/episodes/show/150/technical-lessons-learned-from-pythonic-refactoring, and at PyCon.DE: https://www.youtube.com/watch?v=Yq9-b2JKUyU."], "date": ["Wednesday 25 July"], "tags": ["Beginners", "Best Practice", "legacy-code", "Clean Code", "Software Design"]},
{"title": ["What makes coding for MicroPython different?"], "author": ["Andrey Vlasovskikh"], "description": ["A microcontroller unit is a CPU, memory modules, and I/O devices on a single chip. There are tens of billions of microcontrollers in world: they are everywhere from watches to cars. Developers program them mostly in C, since their tiny hardware resources make it very hard to use higher-level langauges such as Python. In 2014 the MicroPython project was started with the goal of making it possible to program microcontrollers in Python.", "Was it hard to make Python work on a device with only 16 KB of RAM? Is MicroPython a Python dialect or is it a different language? I\u2019ll start with the most important optimizations and the key differences in the language implementation to give you an idea of what MicroPython really is.", "Most of us are not contributors to MicroPython though and it\u2019s much more important for us to understand how Python coding for microcontrollers is different from, say, web development or scripting. What do you need to learn in order to program your mictrocontroller-based IoT devices? I\u2019ll talk about several traits of Python coding for microcontrollers that make it different, but exciting to learn."], "date": ["Wednesday 25 July"], "tags": ["Internet of Things (IoT)", "MicroPython", "Programming", "Tooling", "Architecture"]},
{"title": ["Walking the Random Forest and boosting the trees"], "author": ["Kevin Lemagnen"], "description": ["Deep Learning is all the rage, but ensemble models are still in the game. With libraries such as the recent and performant LightGBM, the Kaggle superstar XGboost or the classic Random Forest from scikit-learn, ensembles models are a must-have in a data scientist\u2019s toolbox. They\u2019ve been proven to provide good performance on a wide range of problems, and are usually simpler to tune and interpret. This talk focuses on two of the most popular tree-based ensemble models. You will learn about Random Forest and Gradient Boosting, relying respectively on bagging and boosting. This talk will attempt to  build a bridge between the theory of ensemble models and their implementation in Python.", "Notebook: ", "https://github.com/klemag/europython2018_walking_the_random_forest"], "date": ["Friday 27 July"], "tags": ["Case Study", "Data Science", "Machine-Learning", "Scientific Libraries (Numpy/Pandas/SciKit/...)"]},
{"title": ["Using Pandas and Dask to work with large columnar datasets  in Apache Parquet"], "author": ["Peter Hoffmann"], "description": ["Apache Parquet is a binary, efficient columnar data format. It uses various\ntechniques to store data in a CPU and I/O efficient way like row groups,\ncompression for pages in column chunks or dictionary encoding for columns.\nIndex hints and statistics to quickly skip over chunks of irrelevant data\nenable efficient queries on large amount of data.", "Apache Parquet files can be read into Pandas DataFrames with the two libraries\nfastparquet and Apache Arrow. While Pandas is mostly used to work with data\nthat fits into memory, Apache Dask allows us to work with data larger then memory\nand even larger than local disk space. Data can be split up into partitions\nand stored in cloud object storage systems like Amazon S3 or Azure Storage.", "Using Metadata from the partiton filenames, parquet column statistics and\ndictonary filtering allows faster performance for selective queries without\nreading all data. This talk will show how use partitioning, row group skipping \nand general data layout to speed up queries on large amount of data."], "date": ["Wednesday 25 July"], "tags": ["python", "Scientific Libraries (Numpy/Pandas/SciKit/...)", "Big Data", "NoSQL", "Databases"]},
{"title": ["Using Bonobo, Airflow and Grafana to visualize your business"], "author": ["Romain Dorgueil"], "description": ["Zero-to-one hands-on introduction to building a business dashboard using Bonobo ETL, Airflow, and a bit of Grafana (because graphs are cool).", "There is no need of prior knowledge about any of those tools.", "After a short introduction about the tools, we\u2019ll go through the following topics, using the real data of a small SaaS software:", "One can expect to be able to build a similar system at the end of the talk in a few days (of course, the implementation is only a small part of this process, data is what really matters).", "\u00abMetrics you watch tend to improve over time\u00bb"], "date": ["Wednesday 25 July"], "tags": ["Case Study", "Analytics", "Open-Source", "Business", "Databases"]},
{"title": ["Understanding and Applying CQRS"], "author": ["Vinicius Pacheco"], "description": ["Creating scalable applications has a number of complex variables and one of them is to work with scalability and performance in the database layer. Command Query Responsibility Segregation (CQRS) is a design pattern that helps produce more performance and resilience in applications where data access is intense.\nIn this talk, we will understand when to use and the problems that CQRS solves. We will also apply CQRS in a Python application using the Nameko framework.\u00a0", "The outline talk is:\n        \u25cb (4 minutes) - Present a real problem of a web application, when creating new instances is not a solution, because the database receives an overwrite of writing and unfeasible to read the data, collapsing the application. \n        \u25cb (6 minutes) - Present the CQRS pattern conceptually and how this design pattern solves this type of problem using the structure of Command Stack and Query Stack \n        \u25cb (3 minutes) - Show Nameko as an interesting tool to apply the CQRS. It will demonstrate the use of HTTP, RPC and the possibility of applying pub/sub. \n        \u25cb (6 minutes) - Create (live code) the Command Stack layer using Nameko on a Postgresql database.\n        \u25cb (5 minutes) - Create (live code) the Query Stack layer using Nameko over a MongoDB database. \n        \u25cb (3 minutes) - Explain common myths and mistakes about CQRS \n(3 minutes) - Q & A Session\u00a0"], "date": ["Thursday 26 July"], "tags": ["Software Design", "python", "Architecture"]},
{"title": ["Trust me, I'm a Data Scientist - ethics for builders of data-based applications"], "author": ["Sarah Diot-Girard"], "description": ["Data Science is gonna save the world, right? Or is it? \nMachine Learning epic fails are being largely commented. It\u2019s easy to convince ourselves that they are due to the inconsiderate misuse of Data Science. But is it really so? Is it possible that innocuous choices lead an honnest team to a disaster?", "During the course of this talk, we will build together an (imaginary) application: a disruptive AI-based smart virtual assistant, pledging to help high-schoolers with their university choice. We will see how unintended biaises may creep in at every step, even with the best of intentions. We will explore different topics, such as algorithmic fairness, model interpretability and the handling of minority classes.", "Through this practical example, this talk will present a review of major ethical pitfalls identified in the Machine Learning community along with suggestions on how to avoid them.", "This talk is intended for beginner to intermediate Data Scientists, and people working with Data Scientists, even without specific technical knowledge.", "Slides : https://sdgjlbl.github.io/Presentations/Data%20Science%20and%20Ethics/presentation.html#/"], "date": ["Friday 27 July"], "tags": ["Data Science", "Machine-Learning"]},
{"title": ["Understanding and Implementing Recurrent Neural Networks using Python"], "author": ["Anmol Krishan Sachdeva"], "description": ["Recurrent Neural Networks (RNNs) have become famous over time due to their property of retaining internal memory. These neural nets are widely used in recognizing patterns in sequences of data, like numerical timer series data, images, handwritten text, spoken words, genome sequences, and much more. Since these nets possess memory, there is a certain analogy that we can make to the human brain in order to learn how RNNs work. RNNs can be thought of as a network of neurons with feedback connections, unlike feedforward connections which exist in other types of Artificial Neural Networks.", "The flow of talk will be as follows: - Self Introduction - Introduction to Deep Learning - Artificial Neural Networks (ANNs) - Diving DEEP into Recurrent Neural Networks (RNNs) - Comparing Feedforward Networks with Feedback Networks - Quick walkthrough: Implementing RNNs using Python (Keras) - Understanding Backpropagation Through Time (BPTT) and Vanishing Gradient Problem - Towards more sophisticated RNNs: Gated Recurrent Units (GRUs)/Long Short-Term Memory (LSTMs) - End of talk - Questions and Answers Session"], "date": ["Wednesday 25 July"], "tags": ["Visualization", "Data Science", "Developing with Python Track", "Machine-Learning", "Deep Learning"]},
{"title": ["The Web is Terrifying! Using the PyData stack to spy on the spies."], "author": ["Sarah Bird"], "description": ["We all know the internet can be a scary place. In this talk I\u2019ll focus on two ways I\u2019ve found it positively terrifying. First, digging into tracking technologies, I have learned about the breadth and depth of ways our online activity is monitored, stored, and repackaged. Second, when starting out to learn a new skill, the tidal wave of information available online can be overwhelming.", "Using the PyData stack to explore and visualize different data sources, including a new dataset from Mozilla, we\u2019ll examine some of the many types of online tracking. My goal is to leave the audience with:", "1) A sense of the breadth of tools in the PyData toolbox that can be applied to a real-world analysis\n  2) An understanding of a few methods of online tracking so they can be more informed internet citizens", "In particular, now that the EU\u2019s General Data Protection Regulation (GDPR) has come into force, we can explore the data in light of EU citizens\u2019 new rights, and the new responsibilities of companies worldwide.", "Along the way, I\u2019ll also talk about becoming a software engineer, then a builder of data science tools, and my new journey into data science. Being self-taught can be, lonely, scary, and full of embarrassing pitfalls. I\u2019ll share some stories about my learning journey, and the people and resources that have supported me."], "date": ["Thursday 26 July"], "tags": ["Visualization", "Data Science", "Data", "Web Crawling", "Privacy"]},
{"title": ["The rise of Python in the data communities"], "author": ["Alexys Jacob"], "description": ["A retrospective and prospective of Python\u2019s adoption in the ", "data-driven industries", " and how it has and should influence its ecosystem and communities.", "Thanks to its versatility, Python\u2019s usage and adoption has changed a lot over the last decade to go beyond the very act of software programming.", "From Developers to SysOps, closely followed by Scientists and Data analysts, Python has spread to become a common tongue for a wide range of people.", "We will start by looking at how this increased adoption impacted Python ecosystem and is still shaping it today. While ", "this talk is not walk through all the Python technologies around data", ", some of them will be outlined so you will hear words like Numpy, Pandas or Jupyter.", "Then we will try to project ourselves in the future and by ", "highlighting the pitfalls Python has to overcome", " to keep up with its pace and mature in its ability to ", "scale", "!", "Draft of the agenda"], "date": ["Thursday 26 July"], "tags": ["Big Data", "Engineering", "Data Science", "Community", "DevOps general"]},
{"title": ["The na\u00efve programmer"], "author": ["Daniele Procida"], "description": ["Since Picasso encountered Henri Rousseau over a century ago, modern art has been acutely aware of the value of the contributions that the na\u00efve artist can make. Art negotiates the relationship between sophistication and na\u00efvety with care and intelligence.", "What does our programming culture make of the na\u00efve programmer?  What can programming gain or learn from this encounter? ", "The na\u00efve programmer is simply an unsophisticated programmer. Nobody is born sophisticated. Even the most sophisticated programmers were once na\u00efve programmers. What\u2019s more, the adoption of programming simply as a tool to solve immediate problems, by ever more people without any formal training, means that the number of na\u00efve programmers will become greater, not less. Are we ready for this?", "This talk will explore the relationship, illuminating it with examples from the world of painting, art and music, and will offer some lessons that our own industry and culture should be ready to learn from.", "(This talk will already have been presented as a keynote at DjangoCon Europe 2018)"], "date": ["Wednesday 25 July"], "tags": ["Beginners", "Best Practice", "Education", "Learning"]},
{"title": ["Trio: A pythonic way to do async programming"], "author": ["Emmanuel Leblond"], "description": ["Concurrent programs are super useful: think of web apps juggling lots\nof simultaneous downloads and websocket connections, chat bots\ntracking multiple concurrent conversations, or web spiders fetching\npages in parallel. But writing concurrent programs is complicated,\nintimidating to newcomers, and often challenging even for experts.", "Does it have to be? Python is famous for being simple and\nstraightforward; can Python make concurrent programming simple and\nstraightforward too?\nTrio is an attempt to address this question by the positive !", "By taking advantage of new Python 3 features (async/await keywords,\nasync loops and context managers etc.) while dropping legacy concepts that\nolder asynchronous frameworks has to maintain, Trio defines a new set of\nprimitives that make it dramatically easier to write correct concurrent programs.", "In this talk, we will describe those primitives, and demonstrate how to\nuse them to implement a basic algorithm for speeding up TCP connections.\nCompared to the best previous Python implementation, our version turns out to\nbe easier to understand, more correct, and dramatically shorter."], "date": ["Wednesday 25 July"], "tags": ["Open-Source", "Programming", "ASYNC / Concurreny", "Architecture"]},
{"title": ["The Challenges of Maintaining a Popular Open-Source Project"], "author": ["Raphael Pierzina"], "description": ["In this talk, I will give an insight into what it means to maintain a popular project for me personally, what it involves and what we as a community can do to help out and finally why I think it\u2019s an important discussion to have.", "Cookiecutter is a command-line utility that creates projects from templates. It is free and open-source software distributed under the terms of a permissive BSD-3 license. With around 180 individual contributors, more than 1000 public templates on GitHub alone, and multiple talks at conferences, it is fair to say that there is a small community around it.", "But who are the people behind the project and what is it that they are doing?", "It\u2019s been three years since I was granted the commit bit by the core team. I have learned a lot about FOSS communities and also about myself. At times I struggle with balancing my day job as a full-time Software Engineer and maintaining Cookiecutter and other FOSS projects in my spare time. By now I\u2019m OK with not responding to issues immediately and closing pull requests. However it took me quite a while to get to this point.", "Maintaining FOSS projects can be incredibly rewarding and fun, but it can also be quite frustrating. It involves so much more than writing code or merging PRs, and yet sometimes it feels like that\u2019s what most people think. The goal of this talk is to start a conversation around this topic and hear what other EuroPython attendees think about it and their challenges as contributors or maintainers."], "date": ["Friday 27 July"], "tags": ["Open-Source", "Community"]},
{"title": ["System testing with Pytest, Docker, and Flask"], "author": ["Neil Gall"], "description": ["The composability of fixtures in pytest is an improvement over traditional\nxUnit setup/teardown, reducing the incentive to commit testing crimes such as\nmulti-stage and stepwise tests. This is great out of the box for unit tests,\nbut I\u2019m going to show how to combine the power of pytest fixtures with Docker\nto build high-level integration tests for microservices or other complex\nsystems with multiple components. I\u2019ll then build on that to show how to embed\nmock web services written with Flask right into the test code.", "With a sample Java application that makes use of some external resources to\noffer a data processing service I\u2019ll first quick an overview of Pytest, Docker,\nand Flask. Then I\u2019ll mix some pre-built code with live test coding to\ndemonstrate how to build high-level system tests which spin up the application\nand its dependencies in Docker. I\u2019ll then mock one of the external dependencies\nusing Flask, allowing the test to control and verify interaction between the\nsystem components. Finally I\u2019ll show how to wrap the Flask application in a\nWSGI middleware that lets the test inspect interaction with the mocked service.", "From a learning and development point of view, building your own is better than\nre-using someone else\u2019s code so I\u2019ll show how the support code for these\nfeatures is relatively simple and how the audience can build it themselves to\nexactly meet their own needs. And I\u2019ll do it all with a sense of fun, a joke\nor two and maybe a little storytelling."], "date": ["Friday 27 July"], "tags": ["python", "Docker", "Test Libraries (pyTest/node/...)", "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)"]},
{"title": ["The Boring Python Office Talk - Automate Powerpoint, Excel, and PDF with Python"], "author": ["Stefan Baerisch"], "description": ["We will have a quick tour of the many ways Python gives us to handle DOCX, XLSX, PPTX, and PDF and automate some boring office tasks.", "Many things are more interesting than office file formats like DOCX, XLSX, PPTX, and PDF. Still, while working with office formats does not seem to be the most fun, it is useful. But we can do better than just useful. With the Python and some great libraries, it is possible to have Python do much of the work you would have to do otherwise:", "In this talk, we will have a look at a usual working day for Bob and Ann, two fictional office works. Both Bob and Ann work office jobs, but while Bob does all of his work by hand, but Ann knows Python. We will look at different tasks that Bob wants to do, such as preparing an Excel report, building a Powerpoint presentation, or rearranging a PDF. Then, we will look how Ann use Python and some exciting libraries to automate these task.", "During the talk, we will use Bob and Ann to consider different task related to office file formats. We will then look at the Python libraries that are available. Then, using this library, we will see how an otherwise boring task can be automated. \nThe goal of the task is to showcase the libraries to Python offers to work with standard office formats and provide you with a starting point for your own office automation.", "After this talk, you will know how to automate at least some of your daily office tasks. You may also be bored because Python is doing so much of your work for you.  If you know basic Python programming, you will be right at home. There will be some use of Pandas,  but it is not required."], "date": ["Friday 27 July"], "tags": ["Python general", "Python 3"]},
{"title": ["Succinct data structures for python"], "author": ["Konstantin Ignatov"], "description": ["This is a presentation of and call for participation in development and testing of Python bindings to Succinct Data Structure Library.", "From Wikipedia: Succinct data structures can represent an object (such as a bitvector or a tree) in space close to the information-theoretic lower bound of the object while supporting operations of the original object efficiently. The theoretical time complexity of an operation performed on the classical data structure and the equivalent succinct data structure are (most of the time) identical.", "Currently bindings are provided for:", "Original library:  https://github.com/simongog/sdsl-lite\nMost of examples from SDSL cheat sheet and SDSL tutorial are implemented."], "date": ["Thursday 26 July"], "tags": ["Algorithms", "Data", "Science Track", "Structures", "C-Languages"]},
{"title": [" Standardize Testing in Python"], "author": ["Bernat Gabor"], "description": ["In this talk, Bernat will introduce tox, an open source tool with the bold vision of standardizing testing. From a CIs point of view, testing contains much more than just unit and/or integration tests; other things like code style checks, packaging, testing under various versions of Python, and checking that documentation still generates, are just as important. Things quickly start to spiral out of control once you add into the mix that there are many tools and ways to accomplish each of these tasks. In this talk, we will learn how tox tries to abstract away all this complexity, how to easily run CI tests on your local machine, and how one can use this tool inside your CI frameworks to ensure high quality and easily maintainable packages."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Agile", "Testing", "Python general", "Open-Source"]},
{"title": ["SSLError, now what?"], "author": ["Christian Heimes"], "description": ["TLS/SSL is the most important and widely-used protocol for secure and encrypted communication, e.g. HTTPS. It offers more than just encryption. TLS also ensures data integrity and strong authentication with X.509 certificates. But it provides merely a false sense of security, if you use it wrong.", "Have you ever encountered ssl.SSLError: [SSL: CERTIFICATE", "VERIFY", "FAILED], while connecting to a server, but you didn\u2019t understand what is going on? Are you running production code without TLS/SSL protection or with certificate validation disabled, because you couldn\u2019t figure out how to make it work correctly?", "I\u2019ll give you the rundown of the basic cryptographic building blocks, protocol handshake, inner structure of certificates, and PKI. You\u2019ll learn about the best practices, debugging tools and tips how to diagnose TLS/SSL and how to deal with certificates."], "date": ["Wednesday 25 July"], "tags": ["Security", "Infrastructure", "HTTP", "failures/mistakes", "Internet"]},
{"title": ["Type annotations with larger codebases"], "author": ["Stephan Jaensch"], "description": ["You\u2019ve heard about type annotations, you know they help reduce bugs and improve documentation especially for large codebases, and you\u2019ve attended an introductory talk or read a tutorial about using them. But how do you get started using them with your big, existing codebase? How do you make sure your colleagues will be annotating new code they write - or existing code they\u2019re changing? And how do you get around some of the issues you might run into when using the still-beta type checker mypy on your codebase?", "This talk will start where the typical introductory Python type annotation talks end and discuss the real-world challenges when starting to annotate types with an existing codebase of tens or hundreds of thousands of lines of code. I\u2019ll walk you through best practices learned from doing just that at Yelp, telling you about some of the roadblocks we hit (and how we got past them).", "We\u2019ll also take a look at:\n- how you can get the most out of type annotations even with non-annotated third-party libraries\n- how to deal with code patterns that currently don\u2019t always work well with annotations\n- when the only way to get proper type checking is through refactoring your code."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Type-Hinting", "Python 3"]},
{"title": ["reno: A New Way to Manage Release Notes"], "author": ["Doug Hellmann"], "description": ["reno is a tool for managing release notes in projects that support multiple branches of development, and releases, simultaneously. It solves the problem of managing release notes within patches that fix bugs, and makes it easier to cherry-pick changes between branches (allowing backports or forward ports). This talk will cover the requirements, and constraints, that led us to design and build reno. I will also show how to use it to create notes and publish them in your packages and via Sphinx-based documentation. Then I will talk about the impact reno, and the release notes publishing automation, had on our project and release processes."], "date": ["Wednesday 25 July"], "tags": ["Tooling", "Open-Source"]},
{"title": ["Rust and Python - Oxidize Your Snake"], "author": ["Sven-Hendrik Haase"], "description": ["Rust is a safe and modern systems programming language that is easily able to call and be called from Python. As such, it is a prime candidate for replacing C for writing Python modules that have to be fast or that have to interact with other native code. Rust is extremely fast and makes it very hard to get concurrency wrong.", "Many ways of making Python call into lower level have appeared over the years such as CFFI, ctypes, boost.python, cython, SWIG. All of them are cumbersome in their own ways. PyO3 is a Rust library that makes it easy and simple to write native Python modules with minimal glue code and no crazy tooling required. It even works cross-platform without problems.", "The talk shows some sample code of PyO3-based modules and compares it with the code of the alternatives as well as the alternative\u2019s cross-platform support and tooling.", "The goal is for the audience to be informed about a new safe and modern way of writing native Python modules.", "The audience doesn\u2019t need any prerequisites except for a healthy interest in native code and Python modules. C knowledge is optional."], "date": ["Friday 27 July"], "tags": ["Performance", "Python general", "All Other Programming Languages", "C-Languages", "Compiler and Interpreters"]},
{"title": ["Reliability in distributed systems"], "author": ["Jiri Benes"], "description": ["Is your system stable? Do you know what happens if any of your system\u2019s dependency will start failing? Do you even know what exactly each part of your system does or did any time in the past? Or how fast you will identify root of the problem in case your system goes down at 2am?", "The talk focuses on distributed systems (microservices, APIs that communicate with databases, memory, third party services, etc.), monitoring, their failures and recovery in order to help you answer yourself questions above.", "First part aims on importance of monitoring such systems on several levels - monitoring of hardware, application monitoring, monitoring from outside of the systems, detecting malfunctions based on anomalies within system\u2019s data flows.", "Second part presents several standard techniques for preventing system failure in case of outage of dependency and technique how to recover from inconsistent state after outage.", "Content of presentation is helpful and interesting for beginners and intermediates. Senior developers and developers working on reliable distributed systems should bear in mind content of this presentation and master shown techniques."], "date": ["Wednesday 25 July"], "tags": ["Best Practice", "Microservices", "Engineering", "Architecture", "failures/mistakes"]},
{"title": ["Recursion, Fractals, and the Python Turtle Module"], "author": ["Hayley Denbraver"], "description": ["To understand recursion you must first understand recursion. Alternatively, you could come to a talk that will demonstrate the basics of recursion, using fractals drawn by the python turtle module! ", "What are fractals? Fractals are psychedelic designs that appear basically the same regardless of scale. They also appear all over nature\u2013consider how a tree trunk and branches is similar in structure to branches and twigs or how a wave is made of mini waves. Best of all, fractals can be constructed using recursive functions. ", "What is the turtle module? It is part of the standard python library that can be used to draw amazing things and is commonly used as a tool for learning to code. ", "Come for the recursion, stay for the amazing fractals, and leave knowing that no turtles were harmed in the making of this talk.", "This talk is suitable for all python enthusiasts. Those who love mathematics will love this talk. Advanced developers will learn more about a tool that can be used to teach people to code. There is something for everyone. "], "date": ["Wednesday 25 July"], "tags": ["Beginners", "Fun and Humor", "Education", "Python general"]},
{"title": ["Rehabilitating Pickle"], "author": ["Alex Willmer"], "description": ["Pickle is a compact serialisation protocol for Python objects.  It could be a convenient way for Python programs and distributed systems to communicate. Unfortunately pickle is widely considered to be unsafe, and it has lead to several vulnerabilities over the years. As the Python manual warns", "The pickle module is not secure against erroneous or maliciously \n  constructed data. Never unpickle data received from an untrusted\n  or unauthenticated source.", "Does this have to be the case? Can we use Pickle safely?", "This talk will be a deep dive into what an attacker can do with a maliciously constructed pickles. I\u2019ll show what defences you can implement against the common attacks, especially those that gain arbitrary code execution. I will present new research into other attacks, and mitigations. Finally I will review a few less known alternatives to pickle.", "This talk will expand on a ", "PyLondinium 2018 lightning talk"], "date": ["Friday 27 July"], "tags": ["Configuration Management (Ansible/Fabric/Chef/...)", "Security", "Python general", "Messaging and Job Queues (RabbitMQ/Redis/...)", "Distributed Systems"]},
{"title": ["Recipe for text analysis in social media:"], "author": ["Eulalia Veny"], "description": ["The analysis of text data in social media is gaining more and more importance every day. The need for companies to know what people think and want is key to invest money in providing customers what they want. The first approach to text analysis was mainly statistical, but adding linguistic information has been proven to work well for improving the results.", "One of the problems that you need to address when analyzing social media is time. People are constantly exchanging information, users write comments every day about what they think of a product, what they do or the places they visit. It is difficult to keep track of everything that happens. Moreover, information is sometimes expressed in short sentences, keywords, or isolated ideas, such as in Tweets. Language is usually unstructured because it is composed of isolated ideas, or without context.", "I will talk about the problem of text analysis in social media. I will also explain briefly Na\u00efve Bayes classifiers, and how you can easily take advantage of them to analyse sentiment in social media, and I will use an example to show how linguistic information can help improve the results. I will also evaluate the pros and cons of supervised vs unsupervised learning.", "Finally, I will introduce opinion lexicons, both dictionary based and corpus-based, and how lexicons can be used in semi-supervised learning and supervised learning. If I have time left, I will explain about other use cases of text analysis."], "date": ["Wednesday 25 July"], "tags": ["Case Study", "Notebook", "Natural Language Processing"]},
{"title": ["Pythonic code vs. performance"], "author": ["\u0141ukasz K\u0105kol"], "description": ["Idiomatic Python is beautiful. If you\u2019re new to Python, this talk is for you because I\u2019m going to reveal the charm of python in front of you. I\u2019ll present how boilerplate code can be replaced with idiomatic python. If you\u2019re experienced python developer, this talk is also for you because I\u2019ll compare the performance of the idiomatic code, both from CPU and memory point of view. Some of these results may surprise you."], "date": ["Wednesday 25 July"], "tags": ["python", "Performance", "Best Practice", "Programming", "failures/mistakes"]},
{"title": ["Quantum Computing: a Very Gentle Glimpse into a Possible Future"], "author": ["Nick Radcliffe"], "description": ["This talk will aim to demystify quantum computing and will assume no prior knowledge. The speaker, while having studied Quantum Field Theory many years ago, has only relatively recently started learning properly about  Quantum Computing, and is going to try to take advantage of the fact that the ideas are relatively new to him to explain the key concepts simply, to an audience (probably) consisting mostly of non-experts in quantum computing.", "Key questions I will try to cover are likely to include\n  * What is quantum mechanics anyway?\n  * What are quantum computers? Are they real? And are they really faster/more powerful than classical computers?\n  * What is a qubit (the quantum computing analogue of a bit)\n  * What problems are likely to be solved well by quantum computers?\n  * How do you program a quantum computer?\n  * How do you get results out of a quantum computer? What kind of results are they anyway? Do you have to visit other universes to get them?\n  * Can you get access to quantum computers online and use Python to program them (kind-of!)\n  * Will quantum computers break all encryption?\n  * What are Shor\u2019s and Grover\u2019s algorithms and (just possibly) how do they work?\n  * What are the challenges with building practical quantum computers?\n  * What is the Python story with Quantum Computing?"], "date": ["Wednesday 25 July"], "tags": ["Other Hardware", "Universe", "Mind Bending", "Physics", "Cryptography"]},
{"title": ["Quart a asyncio alternative to Flask"], "author": ["Philip Jones"], "description": ["Flask is a great web mirco-framework, that is best utilised with\nevent-loop concurrency. Sadly with Flask the event-loop framework\ncan\u2019t be asyncio, although some extensions (Flask-Aiohttp) have\ntried. Quart is the solution as it shares the Flask API and is\nbased on asyncio. In addition Quart goes beyond Flask adding\nHTTP/2 and websockets.", "This talk will outline why event-loop concurrency is a good\nchoice for web servers, why asyncio is a good choice and then\ngive an overview of Quart, demonstrating features that go beyond\nthe Flask framework."], "date": ["Friday 27 July"], "tags": ["HTTP"]},
{"title": ["Python on Windows is Okay, Actually"], "author": ["Steve Dower"], "description": ["Packages that won\u2019t install, encodings that don\u2019t work, installers that ask too many questions, and having to own a PC are all great reasons to just ignore Windows. Or they would be, if they were true.\nDespite community perception, more than half of Python usage still happens on Windows, including web development, system administration, and data science, just like on Linux and Mac. And for the most part, Python works the same regardless of what operating system you happen to be using. Still, many library developers will unnecessarily exclude half of their potential audience by not even attempting to be compatible.\nThis session will walk through the things to be aware of when creating cross-platform libraries. From simple things like using pathlib rather than bytestrings, through to all the ways you can get builds and tests running on Windows for free, by the end of this session you will have a checklist of easy tasks for your project that will really enable the whole Python world to benefit from your work."], "date": ["Wednesday 25 July"], "tags": ["Windows", "Best Practice", "Cross-Platform-Development", "CPython"]},
{"title": ["Python in scientific computing: what works and what doesn't"], "author": ["Michele Simionato"], "description": ["There is no want of technologies for doing scientific calculations in Python. In this talk I will share some hard-learned knowledge about what works and what doesn\u2019t with the libraries we are using at GEM (the Global Earthquake Model foundation).\nI will show how the following libraries fare with respect to our main concerns of performance, simplicity, reliability and portability", "and I will talk about several library bugs we found and had to work around. I will also talk about some libraries that we do not use (such as cython, numba, dask, pytables, \u2026) and the reason why we do not use them.\nHopefully this will be useful to people using or planning to use a similar software stack.", "My slides are here: https://gitpitch.com/micheles/papers/europython2018"], "date": ["Wednesday 25 July"], "tags": ["Science", "Scientific Libraries (Numpy/Pandas/SciKit/...)", "Case Study"]},
{"title": ["Python, Docker, Kubernetes, and beyond ?"], "author": ["Peter Babics"], "description": ["Have you ever tried to manage deployment of multiple python applications through various\nlinux distributions ? If so, you must have heard of Docker and maybe also Kubernetes.\nDistributing python applications using docker is simple and allows to create static packages\ncontaining everything required for them to run. Also it allows to freeze everything, packages, available\nlibraries, files on filesystem.\nIn my speech I would like to tell you about our brief journey, of moving our trading platform\nfrom standalone application directly on host system, through deploying it in docker and latter\nmoving it to kubernetes. I will explain our struggles with implementing stable and fast CI using Gitlab CI and Docker,\nimage (package) storage and cleanup of old images and finally I will tell you how we are deploying\nour platform to kubernetes, with nothing more than yaml-s and templating."], "date": ["Wednesday 25 July"], "tags": ["Docker", "Infrastructure", "Deployment/Continuous Integration and Delivery"]},
{"title": ["Python Decorators: Gift or Poison?"], "author": ["Anastasiia Tymoshchuk"], "description": ["Why would you ever need to use decorators in Python? ", "\nHave you ever had the task when you need to use one function in few places and you really wanted to avoid of code duplicating? For example to add some logging into functions or timers, etc. Decorators in Python are super powerful with these tasks, but at the same time they are super complicated, sometimes even magical. When I started learning Python, Decorators were really like a magic: how to use them, how are they working, lots of questions. The goal is to make the things easier and clear to answer a question: to use or not to use Decorators in your project. ", "\nWhat\u2019s in the Talk: ", "\n- Functions nature in Python ", "\n- Magic of a Decorator ", "\n- Basics ", "\n- When to use Decorators ", "\n- Examples ", "\n- Even more Python magic", "My slides are here: https://atymo.me/projects/presentations/GiftOrPoison/ ", "\nCode examples: https://github.com/atymoshchuk/python_tutorials"], "date": ["Wednesday 25 July"], "tags": ["Best Practice", "Python general", "Clean Code", "failures/mistakes", "Use Case"]},
{"title": ["Python 3: ten years later"], "author": ["Victor Stinner"], "description": ["Draft of the talk:", "Growing populary of the Python programming language", "Port Python 2 code to Python 3", "Port Python 2 code to Python 3", "No: \u201cAdd support for Python 3\u201d, don\u2019t loose Python 2 support", "Port Python 3 code to Python 2", "Python changes to make the transition smoother:", "PEP 414: u\"syntax\u201d reintroduced in Python 3.3", "Analysis of the transition", "Bugs that won\u2019t be fixed in Python 2 anymore", "Performance", "Evolutions of the Python language", "Python 3.5", "PEP 492: async/await \u201ckeywords\u201d for asyncio.\n(Really keywords in Python 3.7.)", "PEP 448: Generalized unpacking:\n", "head, *tail = list", "\n", "mylist = [1, 2, **other_list]", "\n", "mydict = {\"key\": \"value\", **other_dict}", "Python 3.6", "PEP 515: ", "million = 1_000_000", "Bury Python 2?"], "date": ["Friday 27 July"], "tags": ["Python 2", "Python 3", "CPython"]},
{"title": ["Python and GraphQL"], "author": ["Alec MacQueen"], "description": ["GraphQL query language is gaining popularity and seeing more adoption.\nThis is mainly due to the efficiency with which consumers can get their data, the ease with which you can document and explore your API and the powerful tooling that has been built around the query language.", "This talk is for novices and experts of GraphQL alike and aims to cover the basics of the query language, how to implement it using Flask and SQLAlchemy and to take a deeper dive into how Python\u2019s type-hinting can be used to generate your GraphQL schema. ", "I\u2019ll also be talking about some of the tooling that can be used to provide consumers and developers working on your API with a great development experience. Next I\u2019ll cover some ways you can use these tools to empower your development process and get you developing \u2018API First\u2019. ", "To get the most out of this talk you should have a general understanding of APIs, Python frameworks and Python ORMs. However, my aim is to make it as accessible as possible for developers of all experience levels."], "date": ["Friday 27 July"], "tags": ["Web", "Python 3", "APIs"]},
{"title": ["Python and Web Sockets"], "author": ["Anton Caceres"], "description": ["Modern web-apps require bi-directional communication, reacting not only to user actions but also to server events. This can be achieved elegantly using Web Sockets, a protocol standardized by W3C to be a default tool for full-duplex connections on the Web.", "Although most web-frameworks do not support Web Socket integration out of the box, Python has multiple options available making it a piece of cake. This talk showcases integrating Web Sockets in Python web-apps, focusing on situations that can make good use of it and presenting implementations with most popular frameworks: Tornado and Django. We will explore a similar style but different underlying technologies of both, and finish with a live demo."], "date": ["Thursday 26 July"], "tags": ["Web", "Web Track", "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)", "ASYNC / Concurreny", "Django"]},
{"title": ["Python 2 is dead! Drag your old code into the modern age."], "author": ["Becky Smith"], "description": ["The clock is ticking on Python 2.7, with support to be dropped in January 2020.  With major dependencies such as Django, NumPy and pandas moving to Python 3 only, the time has come for even big established codebases to consider upgrading.  Many organisations are still postponing for various reasons; we will attempt to demonstrate that with a bit of planning and perseverance, and the assistance of some handy tools, we can embrace the future!", "This session will provide a first-hand perspective on how we upgraded a large (~65,000 lines of python code) 8-year-old Django project with multiple external dependencies from Python 2.7 to Python 3.6.  ", "We will briefly discuss the benefits of upgrading to Python 3, and architectural considerations.  The session will primarily focus on the practicalities of upgrading the code itself.  We will not try to provide a single \u201cbest\u201d solution for upgrading to Python 3, but rather will introduce some of the available tools, provide an insight into how we used them, and their advantages and disadvantages from our experience.  We will discuss preparatory steps and approaches, strategies for dealing with external dependencies, and \u201cgotchas\u201d that we encountered during the process.", "The aim of this session is to provide an example of how a Python 3 upgrade on an established commercial product can be successfully completed, and to furnish audience members with a set of tools and strategies to help them with their own projects.  ", "Prerequisites: basic knowledge of Python. "], "date": ["Wednesday 25 July"], "tags": ["Case Study", "GEO and GIS", "Python 3", "Django"]},
{"title": ["PyPI: Past, Present and Future"], "author": ["Nicole Harris"], "description": ["The Python Package Index (PyPI) is the principal repository of software packages for the Python programming language.", "In May 2018, PyPI served 12.3 billion HTTP requests, with 1.4 million people visiting pypi.org via their web browser.", "The Python community depends on PyPI for the ongoing functioning of the entire Python ecosystem."], "date": ["Thursday 26 July"], "tags": ["PyPi"]},
{"title": ["Proper Django Testing"], "author": ["Martin Angelov"], "description": ["I\u2019m currently working in a Django project, We have a lot of tests (~ 2000) and a fair amount of code coverage currently. The system and the requirements of the client grows everyday (like in every other project these days). I\u2019ve convinced that the effort we put in making each of these tests pays off daily.", "Speaking with other Django and Python developers I\u2019ve noticed that people often \u201coverengineer\u201d their unit tests and they usually tend to break their principles.", "In this presentation I will talk mainly about unit tests. - what packages we use and how and when to use them (properly). We will take a look on how we structure our projects and how this structure actually helps us write proper unit tests. I will start with the very basic tests and continue with the mocking technique. In the end I\u2019m going to refer to other testing methods (integration, E2E, validation testing,  visual regression, etc.).", "The goal of this talk is to make people better in testing and to show them how these skills will fasten the development process and  help them maintain their project and it\u2019s quality."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Django", "clients", "Testing", "APIs"]},
{"title": ["Programming paradigms for physical computing and IoT"], "author": ["Ben Nuttall"], "description": ["A look at the GPIO Zero library for Raspberry Pi yields the blueprint for a Pythonic API for programming the behaviour of interconnected devices.", "GPIO Zero provides a multi-paradigm programming interface to GPIO devices:\n- procedural (polling)\n- procedural (blocking)\n- event-driven (callbacks)\n- declarative", "Start with simple scripts to control LEDs and buttons on a breadboard, learn to prototype ideas and move on to declaring interaction between more advanced devices in the home and beyond.", "These options for device programming, along with the extensibility of the library, provide the means to program complex behaviour using simple Pythonic code. "], "date": ["Friday 27 July"], "tags": ["Gadgets", "Internet of Things (IoT)", "Sensors", "Raspberry PI", "Hardware/IoT Track"]},
{"title": ["Productionizing your ML code seamlessly"], "author": ["Lauris Jullien"], "description": ["Data science and Machine Learning are hot topics right now for Software Engineers and beyond. And there are a lot of python tools that allow you to hack together a notebook to quickly get insight on your data, or train a model to predict, or classify. Or you might have inherited some data wrangling and modeling {Jupyter/Zeppelin} notebook code from someone else, like the resident data scientist. ", "The code works on test data, when you run the cells in the right order (skipping cell 22), and you believe that the insight gained from this work would be a valuable game changer. But now how do you take this experimental code into production, and keep it up-to-date with a regular retraining schedule? And what do you need to do after that, to ensure that it remains reliable and brings value in the long term?", "These will be the questions this talk will answer, focusing on 2 main themes:\n     1. What does running an ML model in production involve?\n     2. How to improve your development workflow to make the path to production easier?", "This talk will draw examples from real projects at Yelp, like migrating a pandas/sklearn classification project into production with pyspark, while aiming to give advice that is not dependent on specific frameworks, or tools, and is useful for listeners from all backgrounds."], "date": ["Friday 27 July"], "tags": ["Best Practice", "Scientific Libraries (Numpy/Pandas/SciKit/...)", "Data Science", "Notebook", "Machine-Learning"]},
{"title": ["Processing Geodata using Python and Open Source Modules"], "author": ["Martin Christen"], "description": ["The need for processing small-scale to large-scale spatial data is huge. In this talk, it is shown how to analyze, manipulate and visualize geospatial data by using Python and various open source modules.", "The following modules will be covered:", "Github repo: https://github.com/martinchristen/EP2018_Geo"], "date": ["Friday 27 July"], "tags": ["Visualization", "Data", "Big Data", "Jupyter/iPython", "Science"]},
{"title": ["My Story with Python and Open Source"], "author": ["Nicola Iarocci"], "description": ["This is the story of how I (and with me, my company) went from lonely, introvert, C# developer to open-source Python author and maintainer, speaker, trainer, consultant, and all-around community junkie. With some luck, in the process, you will also hear a few hints on how to become a good open source contributor and have a chance to ponder on the pros and cons (yes there are cons too) of going full monty with open source. We will also look at what changed in my company as we slowly switched from closed, in-house eco-systems to the open source field."], "date": ["Wednesday 25 July"], "tags": ["python", "Open-Source"]},
{"title": ["PEP 557* versus the world"], "author": ["Guillaume Gelin"], "description": ["Python 3.7 will ship with a new module called ", "dataclasses", ", which has been defined in PEP 557.", "This talk will deeply cover ", "dataclasses", ", but also ", "attrs", ", ", "box", ", ", "thingy", ", and others.", "Post-conference notes:\n- Slides: https://slides.com/ramnes/pep-557\n- Implementations and micro-benchmark: https://github.com/ramnes/pep-557-vs-the-world"], "date": ["Thursday 26 July"], "tags": ["Software Design", "Data Structures", "Clean Code", "Python 3", "Developing with Python Track"]},
{"title": ["More Than You Ever Wanted To Know About Python Functions"], "author": ["Mark Smith"], "description": ["What exactly ", "are", " functions? Let\u2019s talk about functions, methods, callables and closures - what they are, what you can give them, what they can give you, what you can do with them \u2026 and what\u2019s inside.", "You probably think you already know everything about functions, but you probably don\u2019t!", "Input & Output", ": How do you get things in and out of functions? I\u2019ll cover parameters and the myriad of ways they can be specified, provided and accessed - including helpful hints to avoid common mistakes! I\u2019ll cover return values, briefly, along with variable scopes and exceptions.", "Closures", ": What are they, how do they work and how they can affect memory usage.", "Methods", ": How does a method differ from a function, when are they made, how do they work (where does ", "self", " come from?) and how to access the function inside every method.", "__magic__", ":Make your own callables from any object!", "Introspection", ": Using modern Python techniques, what can you find out about a function, and what can you do with that information?", "Bytecode", ": What happens if you open up a function and look at its insides? Can you change it and put it back together again? (Spoiler: Yes, you can.)", "By the end of this talk, I guarantee* you\u2019ll know more about callables than when you walked in, along with techniques both practical and so extreme your colleagues will never let you merge them to master.", "(*This guarantee is legally non-binding and cannot be redeemed in any way.)"], "date": ["Thursday 26 July"], "tags": ["Type-Hinting", "Mind Bending", "Programming", "Functional Programming"]},
{"title": ["Postgres at any scale"], "author": ["Craig Kerstiens"], "description": ["We\u2019ll start with the basics you need to know as an app developer about interacting with your database, then dig into how you can start to analyze performance. We\u2019ll look at things you need to know for a small application, then the things you should be cautious of as you start to layer in other items you need to be aware of for performance including:"], "date": ["Wednesday 25 July"], "tags": ["PostgreSQL", "Databases"]},
{"title": ["Mocks, fakes, dummies, stubs and spies: Successfully isolating the snake"], "author": ["Mario Corchero"], "description": ["Ever wonder what mocks, fakes, dummies stubs or spies are? Or what the differences are between them and when one should be used instead of another? We will take a deep look into these concepts, what they mean and examples on how to use/create them in Python.", "In this talk, we will quickly explore the reasons for using mock and how it works, quickly jumping into the different concepts of testing doubles and how they can be used in Python. The talk will include as part of the examples from some features in mock coming in Python 3.7 that might change how usual mocking is performed. The talk builds on the writings of Gerard Meszaros and Martin Fowler about testing doubles, focusing on how to apply them to Python.", "This session, which will review test isolation concepts and the unittest.mock module, is structured in a way that both beginners and intermediate developers will learn from it. A basic knowledge of testing is recommended. Intermediate developers will leave the room with a clear understanding of the tools - further than just using simple mocks - to successfully fake dependencies. Multiple \u201cnot so well known\u201d features of unittest.mock will be presented so we can shape those objects to behave functionally different.\nUnittest.mock is an extremely useful library which is commonly underused, this talk aims to bring clarity into stubbing in general and into medium/advanced mock features to ease and remove pain when users work with it.", "Outline: ", "\u2022 Intro (1\u2019)\n\u2022 Why doubles are important (1\u2019)\n\u2022 Main qualities of a double (2\u2019)\n\u2022 Overview of unittest.mock (5\u2019)\n\u2022 Testing doubles (15\u2019)\n    o   Doubles (1\u2019)\n    o   Stubs (2\u2019)\n    o   Spies (3\u2019)\n    o   Mocks (5\u2019)\n    o   Fakes (2\u2019)\n\u2022 Wrap up, conclusion and pointers (2\u2019)\n\u2022 Q&A (Expected 5\u2019)"], "date": ["Thursday 26 July"], "tags": ["python", "Testing", "Python general"]},
{"title": ["Microservices and Serverless in Python projects"], "author": ["Jose Manuel Ortega"], "description": ["Monoliths, microservices and now Serverless. Function as a Service (FaaS) platforms give us new ways to attack old problems. The possibility of executing functions as a service allows designing scalable and highly parallel applications, but on the other hand, this kind of applications require a particular programming style. For example, bundling dependencies and managing state is not trivial.", "However, there are plenty of tools and frameworks to help you code serverless applications with Python, and once you get started it is not complicated.", "In this talk we will mention the advantages of Serverless and we will focus on the situations in which we can introduce it into our Python projects. We will use AWS Lambda for the examples.", "These could be the main talking points:", "Introducing Serverless and Function as a Service (FaaS) in Python projects\nAdvantages of Microservices and Serverless \nAWS Lambda functions with chalice\nTesting AWS lambda with docker"], "date": ["Thursday 26 July"], "tags": ["Public Cloud (AWS/Google/...)", "Microservices", "Docker", "Architecture", "DevOps general"]},
{"title": ["May the Fuzz be with you"], "author": ["Heidi Thorpe"], "description": ["This talk will explore how Long short-term memory (LSTM) recurrent neural networks combined with Python can use Artificial Intelligence to provide invalid, unexpected, or random data as inputs for testing software and finding network security vulnerabilities. The technique of machine generated test inputs is an established testing approach and is sometimes referred to as fuzzing. I will take this idea further by presenting how various types of machine learning can provide novel outlier test cases to harden software and networks in a way that is superior to using only randomness. Instead, I will discuss how to train neural networks to produce better fuzzing data.This is a natural progression from my work with machine learning and image processing using support vector machines (SVM) and Generative Adversarial Networks (GAN) which I have applied to this new domain of software testing.\nThis a beginner level talk aimed at all software developers and testers with a goal to giving attendees a basic understanding of fuzz testing.", "Timing of presentation\n1 Introduction 0-5 minutes \n2 What is a neural fuzzing 5-10 minutes \n3 How does fuzzing work 10-15 minutes \n4 Steps to train a deep neural network 15-20 minutes \n5 Implementing a basic LSTM neural network for security testing 20-25 minutes \n6 Conclusion and Questions 25-30 minutes"], "date": ["Thursday 26 July"], "tags": ["python", "Security", "Testing", "Programming", "Data Science"]},
{"title": ["Marge: A bot for better Git'ing"], "author": ["Mika Bostr\u00f6m"], "description": ["Over the past decade, development workflows across industries have converged towards Continuous Integration (CI) with pull requests (PR). Automated testing and artifact generation is useful, but the logic is often flawed: test are run against the source branch, and side effects from successful merges are not accounted for. Marge-bot improves this workflow by allowing to test the PR against the target branch while providing a host of other conveniences."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Development", "Deployment/Continuous Integration and Delivery", "Git", "Tooling"]},
{"title": ["Lies, damned lies, and statistics"], "author": ["Marco Bonzanini"], "description": ["Statistics show that eating ice cream causes death by drowning.", "If this sounds baffling, this talk will help you to understand correlation, bias, statistical significance and other statistical techniques that are commonly (mis)used to support an argument that leads, by accident or on purpose, to drawing the wrong conclusions.", "The casual observer is exposed to the use of statistics and probability in everyday life, but it is extremely easy to fall victim of a statistical fallacy, even for professional users.", "The purpose of this talk is to help the audience understand how to recognise and avoid these fallacies, by combining an introduction to statistics with examples of lies and damned lies, in a way that is approachable for beginners. ", "Agenda:"], "date": ["Friday 27 July"], "tags": ["Beginners", "Education"]},
{"title": ["Let\u2019s Build a Python Profiler in 25 LOC"], "author": ["Noam Elfanbaum"], "description": ["A profile is a set of statistics that describes how often and for how long various parts of the program executed. Most profilers run inside your Python process.  If you\u2019re inside a Python program you generally have pretty easy access to its stack, hence we can gather information about time spent in each level.", "In this talk we\u2019ll build a Python profiler from scratch and so learn about the dynamic nature of Python and how do well-known profilers such as cProfile. ", "We\u2019ll also learn the difference between a tracing and a sampling profiler and which one to use in what circumstance."], "date": ["Wednesday 25 July"], "tags": ["Performance", "CPython"]},
{"title": ["Leadership of Technical Teams"], "author": ["Owen Campbell"], "description": ["Over the years, I\u2019ve led, and been a member of, numerous technical teams on a wide variety of projects. Based on that experience, this talk will describe my personal observations on the role of the leader in that sort of team.", "The talk will be in 5 sections:", "There is no prior knowledge or experience required whatsoever. The talk is aimed equally at anyone  considering a leadership role for the first time or who has been doing so for many years."], "date": ["Wednesday 25 July"], "tags": ["Best Practice", "Business"]},
{"title": ["Let\u2019s embrace WebAssembly!"], "author": ["Almar Klein"], "description": ["WebAssembly (WASM) is an open, low level binary format designed to be compact and run at native speed, while being memory-safe. WASM is primarily intended to run code in browsers, but its by no means limited to this. This makes it an interesting intermediate language (IR); code that compiles to WASM will (in the future) run basically anywhere. In short: WASM is coming and its great!", "Unsurprisingly, WASM is being embraced by many communities, such as C++, Rust, Lua, and .NET. Sadly, there does not seem to be a lot of enthusiasm from the Python community yet\u2026", "Perhaps this is because Python is interpreted and can therefore not (easily) use WASM as a compilation target. It should be possible to compile a Python interpreter (like CPython or Pypy) to WASM and thereby run Python code in a browser. But the result would be pretty heavy-weight, so it would arguably not be a very practical.", "Within the PPCI project (a pure Python compiler infrastructure) tooling has been developed to load, inspect, compile and even run WASM modules. This allows combining WASM and Python in new ways. In this talk we discuss two approaches by which the Python community might embrace WASM. ", "Firstly, various projects already exist that compile Python functions to other languages (e.g. Numba, PScript), and we have type annotations. If Python functions would be compiled to WASM, the resulting code would run in any WASM runtime (e.g. the browser). This will be demonstrated with an example, for which the resulting code can be run either in a browser or inside Python itself. In either case, it\u2019s pretty darn fast.", "Secondly, rather than ", "using", " WASM, it might be interesting for Python to function as a platform to ", "run", " and ", "bind", " WASM modules. Two of Python\u2019s greater strengths are its rich ecosystem and its ability to glue things together. Let\u2019s build on that! Imagine creating an application that consists of multiple WASM modules, perhaps compiled from different languages, and binding these together into a single Python app.", "This will be demonstrated with a game, which is written in Rust, compiled to WASM, and running inside a Python process. The WASM module consumes a drawing API, which is in this case provided by Python, and Python feeds the WASM module with user input.", "I hope that this talk inspires other Pythonistas to think about the advantages that WASM can bring to our ecosystem, and also about the role that Python can play in the growing WASM ecosystem."], "date": ["Wednesday 25 July"], "tags": ["Web", "All Other Programming Languages", "Community"]},
{"title": ["Iteration Inside Out - Python's Iteration Protocol"], "author": ["Naomi Ceder"], "description": ["Using for loops and list comprehensions in Python is basic and quite common, right? But how does iteration in Python actually work \u201cunder the hood\u201d? The words \u201citerator\u201d and \u201citerable\u201d each occur over 500 times in the Python documentation, but what does an iterator actually ", "do", ", as opposed to an iterable? And how do they do it? Learn the details as we turn the iteration protocol inside out, with live coded demonstrations along the way.", "This talk will start from the way Python iterates of over a sequence, in comparison with iterating by index, like C. The key point of iterating over a sequence is that something needs to track which item in the sequence is next, which is something that Python\u2019s  iteration protocol manages.", "The iterable section will demonstrate creating a simple object that returns items by index (e.g., a fibonacci series), showing that ", "getitem", " is really all you need for an iterable, since an iterator is created for such objects when iterated upon. BUT, this doesn\u2019t answer the question of how Python keeps track of which item is next.", "The iterator section answers that question by converting the iterable just created to an iterator - adding ", "iter", " and ", "next", " methods and showing how the iterator saves state and essentially drives the iteration protocol. ", "Having an accurate understanding of iteration protocol will help developing Pythonistas reason better about both iterating over existing objects and creating their own iterables and iterators."], "date": ["Thursday 26 July"], "tags": ["Python general", "Programming", "Python 2", "Python 3"]},
{"title": ["JavaScript for Python Developers"], "author": ["\u017dan Anderle"], "description": ["Having a hard time keeping track of where the modern JavaScript is going? Are you familiar only with jQuery and you want to know more? Or maybe you\u2019re not familiar with JavaScript at all and want to learn it but you don\u2019t know where to start? Then this talk is for you!", "You\u2019ll learn about modern JavaScript from a perspective of a Python developer. By the end of the talk you\u2019ll know everything you need to know about the language, its ecosystem, and different tools and frameworks. You\u2019ll be able to start using JavaScript more confidently and be familiar with different tools that are at your disposal.", "We\u2019ll go over all the things I wish I\u2019d known when I first got started with JavaScript.:"], "date": ["Thursday 26 July"], "tags": ["Web", "JavaScript", "Web General", "JavaScript Web Frameworks (AngularJS/ReactJS/...)"]},
{"title": ["Is your code tainted? Finding security vulnerabilities using taint-tracking."], "author": ["Mark Shannon"], "description": ["\u201cTaint tracking\u201d is a technique used in code analysis to find security vulnerabilities and other problems.", "Any data that comes from an untrusted source, for example a HTTP request, is treated as \u201ctainted\u201d.\nIf that \u201ctainted\u201d data is able to reach a vulnerable part of your code, then you have a problem.\nSophisticated code analysis tools can track this data, and reveal potential security problems.\nExamples of the sort of problem that can be found include  cross-site scripting (XSS), code injection, SQL injection and others.", "In this talk I will show how taint tracking analysis works in practice, introducing the concepts of source, sink and sanitizer.\nI will then demonstrate using taint tracking to find a XSS vulnerability in a django app.\n(We will chose a project that is designed to teach django security, where the vulnerability is deliberate.)", "I will also explain how thinking in terms of \u201ctaint\u201d can help you write safer code,\neven without access to code analysis.", "During this talk I will use the code analysis tools on lgtm.com to demonstrate the analysis.\nlgtm.com is free to use for open-source projects. A paid version is available."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Security", "Code Analysis"]},
{"title": ["Introduction to sentiment analysis with spaCy"], "author": ["Thomas Aglassinger"], "description": ["Sentiment analysis aims at extracting opinions from texts written in natural language, typically reviews or comments on social sites and forums. SpaCy already provides mechanisms for dealing with natural languages in general but does not offer means for sentiment analysis.", "This talk gives a short introduction to sentiment analysis in general and shows how to extract topics and ratings by utilizing spaCy\u2019s basic tools and extending them with a lexicon based approach and simple Python code to consolidate sentiments spread over multiple words.", "Topic covered are:", "Code examples are introduced and explained using a Jupyter notebook that can be used as basis for your own analysis.", "As additional twist the analyzed texts are not in English but German to show that this approach can be used for multiple languages. No knowledge of German is required though because translations of the short examples sentences are provided."], "date": ["Thursday 26 July"], "tags": ["Beginners", "Notebook", "Programming", "Natural Language Processing"]},
{"title": ["Interoperability Rules for an European API Ecosystem: do we still need SOAP?"], "author": ["Roberto Polli"], "description": ["Italy is introducing a new API Ecosystem because the complexity of the old SOAP-based protocol was now a barrier for the creation of newer services.", "This talk presents the Digital Transformation Team  ongoing work on an interoperability framework based on (REST) API, including:"], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Scaling", "Privacy", "RESTful", "APIs"]},
{"title": ["How to write Rust instead of C, and get away with it (yes, it's a Python talk)"], "author": ["Antonio Verardi"], "description": ["Have you ever tried optimizing a super-slow Python application and thought: \u201cOh! I wish I could just write this bit it in Rust\u201d? Well, turns out you can!\nWe will show you how Rust is a better alternative than C to make your programs lightning fast, and how to get away with it; without your users even noticing.", "As Infrastructure Engineers at Yelp, the challenge we face everyday is: scale. Yelp is mostly a Python shop and while this is great for development velocity, our work often revolves around making Python applications run faster. Until now, we have been using different techniques: faster interpreters, or, more often, C code.", "Given its safety guarantees, performance and promise of better tooling than C, we decided we had to give Rust a try. The initial results helped reinforce that there was a lot of opportunity for Rust to play an important role in our production code.", "Yelp heavily relies on the Apache Avro (https://avro.apache.org/) serialization format for its internal infrastructure. During the talk, we will show how we implemented an Avro serialization/deserialization library in Rust, how we were able to call it from Python (and in theory from any other language) with very little code, using tools such as cbindgen (https://github.com/eqrion/cbindgen/), CFFI (https://cffi.readthedocs.io/en/latest/) and Milksnake (https://github.com/getsentry/milksnake/).", "This talk would outline how easy it is to write performant code in a language like Rust and call it from Python applications without users even realizing it, making this a great solution for production services."], "date": ["Wednesday 25 July"], "tags": ["Performance", "CPython", "C-Languages"]},
{"title": ["How to Write Deployment-friendly Applications"], "author": ["Hynek Schlawack"], "description": ["The DevOps movement gave us many ways to put Python applications into production. But should your application care? Should it need to know whether it\u2019s running on your notebook, on a server, in a Docker container, or in some cloud platform as a service?", "It should not, because environment-agnostic applications are easier to test, easier to deploy, easier to handle, and easier to scale.", "But how can you practically structure and configure your applications to make them indifferent to the environment they run in? How do secrets fit into the picture? And where do you put that log file?", "By the end of this talk you\u2019ll know the tools and techniques that enable you to write such Python applications and you\u2019ll be ready for the next big change. "], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Scaling", "Deployment/Continuous Integration and Delivery", "Architecture", "DevOps general"]},
{"title": ["Integration Tests with Super Powers"], "author": ["Alexandre Figura"], "description": ["You are maybe like me: I never learned at school how to write tests. My teachers gave me at first a broad overview of computer history. Then, they explained me some basic design patterns. And to finish, I often had to write more or less basic programs, to validate and demonstrate my skills. Not the kind of code I would be really proud of today: the procrastinator monkey living in my head at this time was more thinking about planning my summer holidays, rather than writing Ninja code!", "And to make things worse, my studies focused on network and system engineering. Not software architecture. Funny story, because I decided to become programmer a couple of years later\u2026", "What I realize now is that I don\u2019t have as much time as before to learn. And in a world driven by business, where time is money, and where tradeoffs are the rule, there is rarely enough money to write both shiny new features and a complete test suite.", "People who practice Test-Driven Development know how complicated it can be to write proper tests. TDD is often discouraging at first: the learning curve is steep. But this problem also exists in the testing world in general. Because writing good tests is hard, many beginners get headaches trying to reach this goal. How to convince project managers to have more time for writing tests in these conditions\u2026", "But \u201cle jeu en vaut la chandelle\u201d as we say in French (\"the juice is worth the squeeze\"). Well tested applications are not only easier to maintain and extend. They also have in general a better API. That\u2019s what we will see in this talk, by focusing on how to write integration tests. Our journey will begin with a presentation of different testing strategies. We will then jump to the practical part, using Pytest, interface testing , dependency injections and stubs, amongst many others. And because we want to add nice buzzwords on our resume after EuroPython, we will finish this talk by automating the whole with Docker Compose."], "date": ["Friday 27 July"], "tags": ["Docker", "Testing", "Tooling", "Test Libraries (pyTest/node/...)"]},
{"title": ["Industrial Machine Learning Pipelines with Python & Airflow"], "author": ["Alejandro Saucedo"], "description": ["This talk will provide key insights on the learnings I have obtained throughout my career building & deploying machine learning systems in critical environments across several sectors. I will provide a deep dive on how to build scalable and distributed machine learning data pipelines using Airflow with a Celery backend. I will also compare Airflow with other technologies available out there and how it differentiates, such as Luigi, Chronos, Pinball, etc. If you attend the talk, you will obtain an understanding on the solid fundamentals of Airflow, together with its caveats and walk-arounds for more complex use-cases. As we proceed with the examples, I will cover the challenges that you will run into when scaling Machine Learning systems, and how Airflow can be used to address these using a manager-worker-queue architecture for distributed processing with Celery.  By the end of this talk you will have the knowledge required to build your own industry-ready machine learning pipelines to process data at scale, and I will provide further reading resources so people are able to implement the knowledge obtained almost right away."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Deep Learning", "Distributed Systems", "Big Data", "Machine-Learning"]},
{"title": ["How to make money using Python - Unused potential in the Enterprise World"], "author": ["Marc-Andre Lemburg"], "description": ["Python has gained quite some traction in the web development world and more recently as the goto language for anything that has to do with data science. However, it\u2019s use in the enterprise world of applications is rather limited.", "Based on the author\u2019s many years experience in working in enterprise environments, the talk will demonstrate areas in the business application space where Python has significant advantages over other languages, but which are currently dominated by applications written in Java, C++ or C#.", "There are huge opportunities out there for companies to excel at and use the Python advantage to their benefit. If you are looking for a lead idea to kick start your Python business (and you have the resources to invest into marketing), this talk is for you."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Python general", "Business", "Use Case"]},
{"title": ["EduBlocks - Making the transition to Python easier!"], "author": ["Joshua Lowe"], "description": ["Looking for ways to make the transition from block based programming to Python easier, then look no further!  In this talk 14 year old Josh will introduce you to his project called EduBlocks, which is a drag and drop version of Python 3 that he has created to help teachers introduce programming languages, like Python, to children at an earlier age.\nThe goal of the project is to make the transition from block based programs like Scratch to Python easier for students and teachers, as presently there is no drop-in solution that bridges this gap. Josh will share his journey so far with you, from how he came up with the idea when he was only 11 years old, the developments along the way, the exciting plans for the future and how schools today in over 72 different countries  around the world are making use of EduBlocks on the Raspberry Pi and micro:bit. "], "date": ["Friday 27 July"], "tags": ["MicroPython", "Education", "Python 3", "Community", "Open-Source"]},
{"title": ["How to develop your project from an idea to architecture design in 50 minutes"], "author": ["Anastasiia Tymoshchuk"], "description": ["Have you ever asked yourself: ", "\n- how and where to start developing a new project from the scratch, ", "\n- how to choose main components of a new software or how to develop a new feature, ", "\n- how to decide whether your project needs refactoring, ", "\n- how to avoid repeating the same issues? ", "\nThis talk will answer all these questions.  ", "You will learn:\n- how to develop the idea from scratch, ", "\n- how to use principles of Object Oriented Analysis and Design, ", "\n- how to show amazing architecture design.  ", "You will get better understanding where and how to start, analyze and decouple the system, create a clean, clear and extendable architecture.", "My slides are here: https://atymo.me/projects/presentations/FromIdeaToDesign/"], "date": ["Wednesday 25 July"], "tags": ["Software Design", "Data Structures", "Architecture", "Code Analysis", "Use Case"]},
{"title": ["Domain-Driven Design Patterns in Python"], "author": ["Robert Smallshire"], "description": ["Domain-Driven Design (DDD) is an approach to software development that emphasises high-fidelity modelling of the problem domain, and which uses a software implementation of the domain model as a foundation for system design. This approach helps organize and minimize the essential complexity of your software.  DDD has been used with success within the traditional enterprise programming ecosystems of Java and .NET, but has seen only limited adoption in the Python community.", "In this talk we introduce Python programmers to the core tactical patterns of DDD and show how they can be realised in idiomatic Python, freeing the most valuable parts of your system \u2013 the domain model \u2013 from onerous dependencies on particular databases or application frameworks.", "In this talk we share what we\u2019ve learned from applying DDD in Python to large projects."], "date": ["Friday 27 July"], "tags": ["Software Design", "Abstractions", "Programming", "Architecture", "Databases"]},
{"title": ["Easy interactive data applications with Dash"], "author": ["Matteo Guzzo"], "description": ["Plotly Dash is a Python  framework for building interactive dashboards and web data applications, based on Flask, React.js, and Plotly. It allows a python-only approach to something that previously required knowledge of Javascript, heavily reducing the overhead required to create a web application. I\u2019ll show how easy it is to set up a small interactive web app using data from the Twitch API and to expand it at will, using only Python. "], "date": ["Friday 27 July"], "tags": ["Web", "Visualization", "Data Science", "Scientific Libraries (Numpy/Pandas/SciKit/...)", "Web Servers and MicroFWs (Flask/Tornado/Nginx/...)"]},
{"title": ["Django structure for scale and longevity"], "author": ["Radoslav Georgiev"], "description": ["Django is great.", "But as we add new features, as our dev team grows & the software needs to be stable on production, things can get quite messy.", "We are going to look at some common patterns, derived from experience, on how to structure your Django project for scale and longevity.", "Main topics are:", "We are going to talk about when to rely on existing abstraction so it\u2019s actually helpful & when to avoid existing abstraction, and code things ourselves.", "The examples showed in this talk are derived from working with Django in the last 5 years on projects with:", "Key takeaways from the talk:", "The talk is great for all levels of Django knowledge - from beginners to advanced users & teams.", "The main way of getting the point across is going to be by showing regular code, talking how it can get messy & then following up with examples of improving that code. Hopefully this talk will start a lot of discussion afterwards.", "Breakdown of the talk:"], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Clean Code", "Python 3", "failures/mistakes", "Django"]},
{"title": ["Developing in a black hole: vim, tmux, httpie and jq"], "author": ["Francisco Javier Aceituno Lapido"], "description": ["\u201cProductivity depends on the knowledge you have of the tools used.\u201d", "Do you feel that the development tools you use are heavy? \nDo you think that they make you less productive?\nDo you want to have maximum productivity without lifting your hands from the keyboard? ", "If so, this talk is for you.", "In this talk, I will show what are the tools I use every day in software development at OnTruck and how you can integrate", "the text editor, vim\nthe terminal multiplexer, tmux\nthe HTTP client, httpie\nand the json processor, jq", "to get a very productive development environment, all running on a simple terminal."], "date": ["Thursday 26 July"], "tags": ["Development", "Agile", "Unix", "Tooling", "Command-Line"]},
{"title": ["Deep Learning with PyTorch for Fun and Profit"], "author": ["Alexander Hendorf"], "description": ["There are all these great blog posts about Deep Learning describing all that awesome stuff.  - Is it all that easy? Let\u2019s check!", "We\u2019ll look into: style transfer (making a picture look like painting), speech generation (like Siri or Alexa) and text generation (writing a story).\nIn this talk I\u2019ll describe the whole journey: A fun ride from the idea to the very end including all the struggles, failures and successes.", "Steps, we\u2019ll cover:", "The data challenge: get the data ready", "Have it run on your Mac with PyTorch and an eGPU", "Creating a character-level language models with an Recurrent Neural Network", "Creating a text generator", "Creating artwork"], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Case Study", "Natural Language Processing", "failures/mistakes", "Deep Learning"]},
{"title": ["Django queries optimization"], "author": ["Ivaylo Donchev"], "description": ["Collecting data from multiple Models is a common flow in Django development. In most of the cases ", "prefetch_related", " and ", "select_related", " do all of the job for optimizing the queries.", "When the models structure become complicated enough and we\u2019ve put our logic for collecting these items in models\u2019 properties we suddenly cannot use ", "prefetch_related", " or ", "select_related", " anymore. Our View \u2018s queries count depends on selected items count with high complexity. The problem is in the selection logic: we\u2019ve implemented an algorithm which calculates something and we cannot prefetch or select all of the objects. ", "So this talk\u2019s purpose is: To show how to use Django ORM to move the selection logic, the calculations, the aggregations over group of objects from our python code to our database and moving all of the logic for this in one place - the queryset and test it easily."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Django", "Databases", "PostgreSQL", "APIs"]},
{"title": ["Data is not flat"], "author": ["Alisa Dammer"], "description": ["Feature engineering and model training often comes hand in hand. Some tasks have an overwhelming amount of high dimensional data, some tasks have little data or very low-dimension data. \nThis talk targets the latter problem: what can be done with the data itself to significantly improve the model performance and when manual feature engineering does make sense. ", "\nA sample case of Classification problem with NN will be presented\nThe goal of the talk is to remind about something every person working with the data thinks and probably uses.\n Slides, Jupyter notebook with the example, test and train sets, NN configuration file are available on:\nhttps://github.com/Alisa-lisa/conferences"], "date": ["Thursday 26 July"], "tags": ["Algorithms", "Data Science", "Data", "Machine-Learning"]},
{"title": ["Debugging Your Code with Data Visualization"], "author": ["James Saryerwinnie"], "description": ["Let\u2019s face it.  Sometimes our code just isn\u2019t working how we expect it to work.\nWhen this happens, we fall back to our trusty tools to help us\ndebug: pdb, the logging module, or even simple print statements.  But sometimes\nthat just isn\u2019t enough, we still can\u2019t figure out why our code is broken.\nWe need something more.", "There are a number of fantastic libraries in python for\ncreating data visualizations.  These libraries are commonly used for\nanalyzing and visualizing large sets of data, but don\u2019t see as much\nusage when it comes to helping us write and debug our code.", "What if we could combine the two?  What if we could leverage data\nvisualization tools to understand what our program is doing?  Sometimes, by\nseeing a visual representation of what our code is doing, it becomes much\neasier to understand why our code is not working.  We don\u2019t need to create\npublication quality graphs and charts, we just need to generate quick, one-off\nvisualizations to understand what our code is doing.  What we want is the \u201cdata\nvisualization\u201d equivalent to print() statements.", "To help illustrate this point, I will walk through some of the hardest\nbugs I\u2019ve had to track down while working on projects such as the AWS CLI and\nboto3, the AWS SDK for Python.  For each bug, I\u2019ll show you how I was able to\nleverage data visualization techniques to troubleshoot and fix these bugs.\nCome learn how to debug more efficiently by leveraging data visualization."], "date": ["Thursday 26 July"], "tags": ["Public Cloud (AWS/Google/...)", "Visualization", "Debugging", "Case Study"]},
{"title": ["Cython to speed up your Python code"], "author": ["Stefan Behnel"], "description": ["Cython", " is not only a very fast and comfortable way to talk to native code and libraries, it is also a widely used tool for speeding up Python code. The Cython compiler translates Python code to C or C++ code, and applies many static optimisations that make Python code run visibly faster than in the interpreter. But even better, it supports static type annotations that allow direct use of C/C++ data types and functions, which the compiler uses to convert and optimise the code into fast, native C. The tight integration of all three languages, Python, C and C++, makes it possible to freely mix Python features like generators and comprehensions with C/C++ features like native data types, pointer arithmetic or manually tuned memory management in the same code.", "This talk by a core developer introduces the Cython compiler by interactive code examples, and shows how you can use it to speed up your Python code. You will learn how you can profile a Python module and use Cython to compile and optimise it into a fast binary extension module. All of that, without losing the ability to run it through common development tools like static analysers or coverage test tools."], "date": ["Thursday 26 July"], "tags": ["Cython", "Compiler and Interpreters", "C-Languages", "Performance"]},
{"title": ["Creating Solid APIs"], "author": ["Rivo Laks"], "description": ["Increasingly, our apps are used not by humans but by other apps - via their APIs. Thus it is increasingly important that your APIs are well-designed and easy to consume for other developers.", "Adding a few API endpoints to your application for internal consumption is easy. Creating APIs that other developers will love to use is a much harder problem.\nYou\u2019ll need to think about solving variety of topics such as versioning, authentication, response structure, documentation and more. There are existing good practices for each of them, but often developers who haven\u2019t done a lot of API work aren\u2019t familiar with them.", "My talk will show how to find reasonable solutions for those problems.\nI will talk about importance and intricacies of good documentation and why auto-generating it from your code is useful. I\u2019ll show how to make use of familiarity by using standards such as JSON API and show benefits brought by its standardized response structure that makes lives of 3rd-party developers easier.", "Authentication will be discussed, including introduction to OAuth2. I\u2019ll talk about when OAuth2 is a good choice and when not, as well as dig into some trickier parts of it.\nWe\u2019ll then move on to versioning and how you can change your API without breaking all existing apps.\nFinally we\u2019ll wrap it all up by looking at some major APIs that are using the same principles."], "date": ["Friday 27 July"], "tags": ["Best Practice", "RESTful", "Web General", "APIs"]},
{"title": ["Creating a Culture of Software Craftsmanship\u202f"], "author": ["Keith Harrison"], "description": ["This time it\u2019ll be different. It\u2019s a green field project and you\u2019ve learned from your mistakes. You\u2019re not going to make the same ones again.", "Fast forward several months and you\u2019re in a mess. A change in one place causes bugs in a completely different place. Adding a simple feature means making changes all over your application. Progress is getting slower and slower. You\u2019re lost in complexity.", "Why does this keep happening and what can we do about it? ", "This talk will try to answer those questions.", "I\u2019ll show how complex software really is, define the different types of complexity found in software, explain the issues complexity causes and discuss different techniques we can use to manage it.", "This talk is suitable for anyone who has worked or will work on a software development project. No development experience is required."], "date": ["Friday 27 July"], "tags": ["Best Practice", "Agile", "Clean Code"]},
{"title": ["Code Review Skills for Pythonistas"], "author": ["Nina Zakharenko"], "description": ["As teams and projects grow, code review becomes increasingly important to support the maintainability of complex codebases. In this talk, I\u2019ll cover guidelines for writing consistent python code beyond pep8, how to look out for common python gotchas, and what python tools are available to automate various parts of the review process. Most importantly, I\u2019ll cover the human aspect of code reviews - how we can be better at approaching reviews with empathy and understanding from the perspective of both a reviewer and a submitter. Following these successful code review practices will lead to happier teams and healthier code bases.", "This talk is useful for python developers with any amount of experience. No prerequisite knowledge is necessary. \n- For those who are just starting out, it will be a great general overview.\n- Intermediate developers may not know about the wide variety of tooling that\u2019s available.\n- Advanced developers will learn techniques for performing code reviews with empathy.", "This talk will enable you to have better code reviews on your teams at work, and a better approach to code reviews in open source projects. You\u2019ll leave with 3 main takeaways:\n 1. Code Reviews are most effective when conducted with empathy. If you do reviews with growth and learning in mind, they become tools for sharing knowledge instead of an opportunity to bruise egos or show off esoteric knowledge.\n 2. Python has powerful tooling available for code reviews such as pep8 as a style guide, pylint as a linter, coverage.py to identify test coverage, and vulture to identify dead code.\n 3. That python style guides beyond pep8 have clear benefits in terms of producing more consistent code that\u2019s easier to review and easier to maintain."], "date": ["Thursday 26 July"], "tags": ["Development", "Clean Code", "Programming", "Open-Source", "Code Analysis"]},
{"title": ["Change music in two epochs"], "author": ["Marcel Raas"], "description": ["This talk is about applying deep learning to music. We will look at the raw music data and discover the following:", "Instead of applying it to existing music we will generate our own music using some simple musical rules. The benefit of this is that we are in control of the complexity and we know exactly what is being played. We start out simple and then start adding more instruments, different timbres, etc. As we go up in complexity, we shall see how to adapt our models to be able to deal with it. This gives interesting insights in what structures in deep nets work well.", "I will show:", "For more info, see the github repository at https://github.com/marcelraas/music-generator"], "date": ["Friday 27 July"], "tags": ["Deep Learning", "Algorithms", "Machine-Learning", "Scientific Libraries (Numpy/Pandas/SciKit/...)"]},
{"title": ["Building new NLP solutions with spaCy and Prodigy"], "author": ["Matthew Honnibal"], "description": ["Commercial machine learning projects are currently like start-ups: many projects fail, but some are extremely successful, justifying the total investment. While some people will tell you to \u201cembrace failure\u201d, I say failure sucks \u2014 so what can we do to fight it? In this talk, I will discuss how to address some of the most likely causes of failure for new Natural Language Processing (NLP) projects. My main recommendation is to take an iterative approach: don\u2019t assume you know what your pipeline should look like, let alone your annotation schemes or model architectures. I will also discuss a few tips for figuring out what\u2019s likely to work, along with a few common mistakes. To keep the advice well-grounded, I will refer specifically to our open-source library spaCy, and our commercial annotation tool Prodigy."], "date": ["Thursday 26 July"], "tags": ["Deep Learning", "Data Science", "Natural Language Processing"]},
{"title": ["CatBoost - the new generation of Gradient Boosting"], "author": ["Anna Veronika Dorogush"], "description": ["Gradient boosting is a powerful machine-learning technique that achieves state-of-the-art results\nin a variety of practical tasks. For a number of years, it has remained the primary method for\nlearning problems with heterogeneous features, noisy data, and complex dependencies: web search,\nrecommendation systems, weather forecasting, and many others.\nCatBoost (http://catboost.yandex) is a new open-source gradient boosting library, that outperforms existing publicly available implementations of gradient boosting in terms of quality. It has a set of addional advantages.", "CatBoost is able to incorporate categorical features in your data (like music genre, URL, search query, etc.) in predictive models with no additional preprocessing. For more details on our approach please refer to our NIPS 2017 ML Systems Workshop paper (http://learningsys.org/nips17/assets/papers/paper_11.pdf).", "CatBoost inference is 20-60 times faster then in other open-source gradient boosting libraries, which makes it possible to use CatBoost for latency-critical tasks.", "CatBoost has the fastest GPU and multi GPU training implementations of all the openly available gradient boosting libraries.", "CatBoost requires no hyperparameter tunning in order to get a model with good quality.", "CatBoost is highly scalable and can be efficiently trained using hundreds of machines", "The talk will cover a broad description of gradient boosting and its areas of usage and the differences between CatBoost and other gradient boosting libraries. We will also briefly explain the details of the proprietary algorithm that leads to a boost in quality."], "date": ["Thursday 26 July"], "tags": ["Big Data", "Data Science", "Open-Source", "Machine-Learning"]},
{"title": ["Bytecodes and stacks: A look at CPython\u2019s compiler and its execution model"], "author": ["Petr Viktorin"], "description": ["So, you wrote some Python code. What needs to happen before it starts running? And once it\u2019s running, how does Python keep track of what it\u2019s doing?", "I\u2019ll talk about CPython\u2019s tokenization, parsing, bytecode and its serialization and cache, the stack-based virtual machine, line number tables, and code, frame and function objects.", "Don\u2019t worry if you\u2019ve never heard of these concepts. While even experts should learn something new, the talk is aimed at anyone who\u2019s worked on a Python project or two."], "date": ["Friday 27 July"], "tags": ["Compiler and Interpreters", "CPython"]},
{"title": ["Bridging the Gap: from Data Science to Production"], "author": ["Florian Wilhelm"], "description": ["A recent but quite common observation in industry is that although there is an overall high adoption of data science, many companies struggle to get it into production. Huge teams of well-payed data scientists often present one fancy model after the other to their managers but their proof of concepts never manifest into something business relevant. The frustration grows on both sides, managers and data scientists.", "In my talk I elaborate on the many reasons why data science to production is such a hard nut to crack. I start with a taxonomy of data use cases in order to easier assess technical requirements. Based thereon, my focus lies on overcoming the two-language-problem which is Python/R loved by data scientists vs. the enterprise-established Java/Scala. From my project experiences I present three different solutions, namely 1) migrating to a single language, 2) reimplementation and 3) usage of a framework. The advantages and disadvantages of each approach is presented and general advices based on the introduced taxonomy is given. ", "Additionally, my talk also addresses organisational as well as problems in quality assurance and deployment. Best practices and further references are presented on a high-level in order to cover all facets of data science to production.", "With my talk I hope to convey the message that breakdowns on the road from data science to production are rather the rule than the exception, so you are not alone. At the end of my talk, you will have a better understanding of why your team and you are struggling and what to do about it.    "], "date": ["Wednesday 25 July"], "tags": ["Best Practice", "Data Science", "Clean Code", "DevOps general", "Business"]},
{"title": ["Building a Naive Bayes Text Classifier with scikit-learn"], "author": ["Obiamaka Agbaneje"], "description": ["Machine learning algorithms used in the classification of text are Support Vector Machines, k Nearest Neighbors but the most popular algorithm to implement is Naive Bayes because of its simplicity based on Bayes Theorem.", "The Naive Bayes classifier is able to memorise the relationships between the training attributes and the outcome and predicts by multiplying the conditional probabilities of the attributes with the assumption that they are independent of the outcome.  It is popularly used in classifying data sets that have a large number of features that are sparse or nearly independent such as text documents.", "In this talk, I will describe how to build a model using the Naive Bayes algorithm with the scikit-learn library using the spam/ham youtube comment dataset from the UCI repository.  Preprocessing techniques such as Text normalisation and Feature extraction will be also be discussed."], "date": ["Thursday 26 July"], "tags": ["Scientific Libraries (Numpy/Pandas/SciKit/...)", "Data", "Natural Language Processing"]},
{"title": ["Building a Question Answering System using Deep Learning Techniques "], "author": ["Rricha Jalota"], "description": ["Question Answering is an active area of research where the goal is to provide brief and crisp answers to natural language questions. Given a question and a text passage, the task is to answer the question based on the information given in the passage. Traditionally, NLP techniques like noise removal, tokenization,  dependency parsing, named entity recognition etc. are used to extract an answer from the passage. With Deep Learning techniques gaining traction, the focus has now shifted to how neural network architectures can improve the accuracy of Question Answering Systems. \nThis talk will help the audience understand how QA systems work and enable them to build one on their own! \nTalk Outline :\n1. Introduction to Question Answering(Reading Comprehension, in particular)\n2. Discuss available datasets\n3. Baseline Approach to solving the problem using NLP techniques\n4. Walk through the pipeline of deploying Deep Learning models (i.e. preprocessing dataset, generating  word embeddings, building an encoder-decoder model using LSTMs, attention networks and evaluating it) ", "Pre-requisites: Python, Basics of Neural Networks and NLP, Keras   "], "date": ["Friday 27 July"], "tags": ["Scientific Libraries (Numpy/Pandas/SciKit/...)", "Data Science", "Natural Language Processing", "Jupyter/iPython", "Deep Learning"]},
{"title": ["Autism in development"], "author": ["Ed Singleton"], "description": ["Autism is a condition that correlates with engineering.  Many people in the industry are diagnosed autistic, undiagnosed autistic, or near autistic.  There are many lessons that can be learned from how to deal with autistic people that are very useful in our industry.  These lessons are often also useful when dealing with non-autistic people.  There are many lessons on how to deal with your own autism that are useful to undiagnosed autistic people and near autistic people.", "We will cover the basics of autism, and related conditions.  We will cover simple tricks that can make discussions and changes easier in workplaces (\"10 Simple tricks to make your autistic colleagues shout less!\").  We will also cover techniques you can use for dealing with your own autistic tendencies (\"100 coping mechanisms to pretend that you are normal!\").", "I am a late diagnosis autistic person myself, and will discuss the difference between knowing and not knowing that you are autistic.  "], "date": ["Wednesday 25 July"], "tags": ["The Answer to Life the Universe and Everything Else", "Diversity", "workforce", "Community"]},
{"title": ["Bad hotel again? Find your perfect match!"], "author": ["Elisabetta Bergamini"], "description": ["For most travellers, online reviews play a major role when it comes to choosing which hotel to stay in. But can we actually trust a hotel review? And if yes, how can we select which are the most meaningful and interesting for us among the billions available in platforms such as Booking.com, Tripadvisor, Facebook (just to mention a few)?\nFor 10 years now, at TrustYou we have built processes that analyze terabytes of hotel reviews at a global scale, and strive to understand what people complain about or like in the hotels worldwide.\nDealing with a huge amount of reviews written in tens of different languages - each having its own subtle shades of meanings - is the challenge we work on everyday. In this talk, we will show what goes on behind the scenes of the TrustYou Metareview and dive into the technologies and the algorithms that allow us to provide travellers with all the information they need to find the perfect hotel. "], "date": ["Wednesday 25 July"], "tags": ["Data Science", "Machine-Learning", "Natural Language Processing"]},
{"title": ["Asyncio in Python 3.7 and 3.8."], "author": ["Yury Selivanov"], "description": ["The talk is aimed to give attendees a clear picture of new asyncio features in Python 3.7 and give an idea of what to expect in Python 3.8.  As a CPython core developer and the lead asyncio maintainer I believe I have a unique perspective to share with EuroPython guests.", "Python 3.7 boasts a number of new amazing features: ", "The first part of the talk will be focusing on new APIs to explain them and give ideas how they can be used in production.", "The second part of the talk will be focused on what to expect to see in asyncio in Python 3.8:", "Some of these ideas are borrowed from Trio and Curio (two other popular async/await Python frameworks), many are borrowed from languages like Erlang and Scala. One thing I can say for certain is that 3.8 will be the biggest and most interesting asyncio release ever!"], "date": ["Wednesday 25 July"], "tags": ["Best Practice", "Distributed Systems", "ASYNC / Concurreny", "failures/mistakes", "Use Case"]},
{"title": ["Automating testing and deployment with Github and Travis"], "author": ["Alex Gr\u00f6nholm"], "description": ["Maintaining an open source project can be a drag. Especially when you have dozens of them. Besides being tedious , making a new release can be a very error prone process. Maybe you forgot to run the full test suite, forgot to update the release version or tag the release on VCS or maybe you bungled up the upload to PyPI. Fortunately there are things you can do to eliminate entire categories of human errors in the release process \u2013 by automating them.", "This talk uses a trivial project as an example to present a release pipeline, from packaging and testing to deployment, that only requires you to push a git tag to your Github repository. Automation then takes care of the rest and you end up with a new release on PyPI (yay!).", "This talk is mostly useful for open source developers using Github to house their projects, as it heavily leans on Travis, its continuous integration provider . You also need to be at least somewhat familiar with Python packaging and testing in order to follow along. Familiarity with common tools like pytest and tox helps but is not strictly required."], "date": ["Friday 27 July"], "tags": ["Best Practice", "Packaging", "Deployment/Continuous Integration and Delivery", "Tooling"]},
{"title": ["asyncio in Practice: We Did It Wrong"], "author": ["Lynn Root"], "description": ["This talk is aimed at those that have at least intermediate experience in Python and have played around with asynchronous Python using asyncio or other libraries. I want the audience to learn from my mistakes! For instance, how easy it is to get into \u201ccallback hell\u201d (and how to avoid/get out of it), how to screw up thread safety and deadlock yourself, and making code async but not actually concurrent.", "I\u2019ll talk through some anti-patterns and best practices that I learned the hard way. This includes proper concurrency, calling coroutines from synchronous code, working with threads and threadsafety, properly shutting down an async programs, and hidden \u201cgotchas\u201d."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "ASYNC / Concurreny", "failures/mistakes", "Multi-Threading"]},
{"title": ["All You Need is Pandas: Unexpected Success Stories"], "author": ["Dimiter Naydenov"], "description": ["Learning to use the awesome Pandas toolkit helped me immensely in lots of ways. Finding novel,\nefficient solutions to complex day-to-day problems with Pandas not only saves time, but can be fun\nand rewarding experience.", "In this talk I\u2019ll present use cases I had to solve, but the \u201ctraditional\u201d approach proved tough\nand/or otherwise frustrating implement nicely. Since I was just starting to learn Pandas, decided to\ntry an alternative solution with it. What I learned changed the way I think about data processing\nwith Python, and it only got better since!", "The use cases deals with extracting pen strokes from handwritten SVG samples, and recomposing them\ninto reusable letters and numbers. When you need to compare each stroke to all others, often more\nthan once, resulted in inefficient, slow, and hard to maintain code. Even a naive Pandas approach\nwith loops helped to reduce both the memory footprint, and improve the performance considerably!\nImproving the implementation further, vectorizing inner loops, and taking advantage of multi-index\noperations, I managed to get the same results, using less memory and a lot faster (by orders of\nmagnitude)."], "date": ["Wednesday 25 July"], "tags": []},
{"title": ["Asyncio in production"], "author": ["Hrafn Eiriksson"], "description": ["Much has been written about asynchronous programming in Python, especially after the introduction of asyncio into the standard library of the language. We\u2019ve all seen the benchmarks that tell us how asyncio-powered web servers massively outperform their non-asyncio counterparts for trivial routes and we\u2019ve seen the articles that tell us how to make the move from flask to aiohttp and why we should. ", "Despite all of this, the question remains: How is it to use asyncio in a production setting? What are the pain points of migrating a large application to use asyncio? How does the performance of this real-world application differ after the migration? Is it still just unicorns and fairy tales? The goal of this talk is to address these questions. ", "If you are curious about taking the step from asyncio-dabbling to creating actual mission critical software systems in asyncio; this is the talk for you!"], "date": ["Wednesday 25 July"], "tags": ["Python 3", "ASYNC / Concurreny"]},
{"title": ["Air Quality & Python: Developing Online Analysis Tools"], "author": ["Douglas Finch"], "description": ["Poor surface air quality has a range of implications for human health and the economy. Without concerted mitigation efforts, trends in urbanisation and aspirations for progressive economic growth will result in poorer levels of air quality. Analysing and interpreting the incoming data streams from heterogeneous air quality measurement stations is critical for tackling the problem and for developing early warning systems. I am using Python to develop a set of online analysis tools (ukatmos.org) to enable the public to quickly and easily plot air quality data in many ways, effectively freeing up information that is already publicly available but in awkward formats and often involves development of code. We anticipate these tools will also support data science classes at school, and can speed up scientific research by minimizing effort in repeating analyses. ", "This talk will cover how the tools integrate numerous Python libraries (e.g. Pandas and NumPy), the Django web framework, the Plot.ly tools for creating interactive graphs, and SQL to address the large data volumes. Developing these Python tools in an adaptive and scalable way allows it to grow as more data become available, e.g. satellite observations. Adaptability also includes evolving user requirements. This project will also be developed into a Python library allowing the user to easily use the online analysis tools from an offline Python environment. "], "date": ["Friday 27 July"], "tags": ["Case Study", "Data Science", "Django", "Web", "Science"]},
{"title": ["Addressing multithreading and multiprocessing in transparent and Pythonic ways"], "author": ["David Liu"], "description": ["With the increase in computing power, harnessing and controlling one\u2019s code out of the single-threaded realm becomes an ever-increasing problem, coupled with the desire to stay in the Python layer. With the recent tools and frameworks that have been published, escaping the GIL cleanly is much easier than before, allow one\u2019s Python code to effectively utilize multi-core and many core architectures in the most Pythonic ways possible. In this talk, learn about how to utilize static multiprocessing for process pinning, and effectively balancing thread pools with a monkey-patched import of threading modules.", "Overview:", "Introduction to multithreading and multiprocessing in Python", "History of multithreading+multiprocessing in Python, classic frameworks ", "Problems that can occur (oversubscription, nested parallelism issues, process hopping, pool resource on shared machines) ", "Python accessing bigger hardware over the last few years (28+ cores, etc) ", "When to stay in the GIL, and when to escape it ", "The advantages and safety of the GIL", "Python-level exiting of the GIL; analysis of when to return to single-threaded, and when threading is a deceivingly bad idea", "Accountability of frameworks that natively exit the GIL", "The new multithreading and multiprocessing libraries and techniques", "static multiprocessing module (smp) (and monkey patching of multiprocessing)", "thread pool control with command line calls of Python ( python -m tbb -p 8)", "Putting it all together", "Examples of using static multiprocessing on a large machine to stop oversubscription", "Example of pseudo-daemon process on 4-core machine by processor pinning", "Thread pool control on a simple NumPy example", "Summary - Best practices for using above methods to control multithreading+multiprocessing", "What needs to be done in the space (frameworks and things that need to be exposed)", "Problems that still exist in the area", "Q&A"], "date": ["Friday 27 July"], "tags": ["Best Practice", "Multi-Processing", "Scientific Libraries (Numpy/Pandas/SciKit/...)", "CPython", "Multi-Threading"]},
{"title": ["A Taxonomy of Decorators: A-E"], "author": ["Andy Fundinger"], "description": ["This talk will briefly go over the various decorator syntaxes before breaking up the common usages of decorators into 5 categories. Effectively, these are design patterns for decorators. The usages to be considered are:"], "date": ["Friday 27 July"], "tags": ["Software Design", "Development", "Programming", "Python general"]},
{"title": ["A Python implementation in Rust?"], "author": ["Windel Bouwman"], "description": ["Rust is a fairly new programming language aimed as a competitor of C.\nThere are already attempts to write extension modules in rust and load\nthem into CPython. A whole new approach would be to re-implement the Python\nlanguage in rust.", "This is what the rspython project is about: implementing\na python interpreter in rust. Rust already has many features such as vectors,\nhashmaps and strings as unicode. There also exist already modules for\nregular expressions and dealing with files, so a lot can be re-used in\nthis area.", "During this talk we will dive into rust and python and the design of\nthe rspython. We will present some challenges and opportunities. Also\nwe will show the current state of this project in a demo."], "date": ["Thursday 26 July"], "tags": ["Compiler and Interpreters", "Python 3"]},
{"title": ["A tale of refactoring"], "author": ["Emmanuelle Delescolle"], "description": ["A couple years ago I was approached by a client to help them improve the performance and maintainability of their code.", "That code was filled with very long functions, some of them with very similar code and the project was really hard to understand as a whole.", "My first reflex was to refactor this code code to make it more understandable. In my opinion, it did fit part of my assignment as understandable code is easier to maintain but it was also very helpful later in letting me make small changes with full knowledge of what was going to be affected by those changes.", "Large methods and functions is something that creeps into our code whether we plan for it or not. This talk is about one way to deal with it.", "This talk will be based on code provided by the GildedRose Refcatoring Kata: https://github.com/emilybache/GildedRose-Refactoring-Kata", "Prerequisites:\n- Basic knowledge of Python\n- Basic knowledge of OOP", "Goals:\n- Demonstrate one approach for refactoring code\n- Show how to leverage Python\u2019s dynamic nature to make code simpler"], "date": ["Friday 27 July"], "tags": ["Case Study", "Programming", "failures/mistakes", "Code Analysis", "Clean Code"]},
{"title": ["Adventures in compatibility: emulating CPython's C API in PyPy"], "author": ["Ronan Lamy"], "description": ["PyPy is a fast and compliant implementation of Python. In other words, it\u2019s an interpreter for the Python language that can act as a full replacement for the reference interpreter, CPython. It\u2019s optimised to enable efficient just-in-time compilation of Python code to machine code, and has releases matching versions 2.7, 3.5 and soon(ish) 3.6. The PyPy project also developed cffi as a clean and efficient way of interfacing with C code.", "However, many libraries in the Python ecosystem are implemented as C extensions, which target CPython\u2019s C API. Many others use Cython, which builds C extensions under the hood. Therefore, PyPy needs an emulation layer for the C API. ", "This emulation needs to bridge the differences between the implementation languages and the object models of CPython and PyPy. The solution is called cpyext. It\u2019s implemented in a mixture of RPython and C, with most of the API functions and macros implemented in RPython. cpyext exposes PyObjects to the extension code that appear similar to CPython objects (as long as extension writers stay within the fuzzily defined boundaries of the public API) but are merely \u2018shadows\u2019 of the real PyPy objects.", "After a brief presentation of PyPy, its goals, and its current statuts and roadmap, this talk will dive into the vexed topic of its handling of C extensions.  By the end of it, the audience should understand the operating principles of cpyext and have a clearer understanding of what happens when you install and run numpy, for instance, on top of PyPy. Some basic familiarity with CPython internals and how C extensions are made will be assumed."], "date": ["Wednesday 25 July"], "tags": ["PyPy", "Compiler and Interpreters", "C-Languages", "Scientific Libraries (Numpy/Pandas/SciKit/...)"]},
{"title": ["A Jupyter Enhancement Proposal Story"], "author": ["Raniere Silva"], "description": ["Python users should be familiar with the concept of Python Enhancement Proposals (PEPs), the way that the Python language evolves over time. In a similar fashion, the Jupyter project has Jupyter Enhancement Proposals (JEPs). This talk with cover the proposer first-hand experience when submiting JEP 23 - Add Template as Metatada enhancement proposal from it\u2019s beginning, during EuroPython 2017, up to its current status. We will, in addition, present efforts made as part of the OpenDreamKit project to perform Jupyter notebooks conversions using custom metadata, templates, and exporters, in a programmatic way. ", "Outline", "0:00 - 0:05 Who are we? We are impostors!\n0:05 - 0:10 Our previous experience with Jupyter Notebook. We will talk about the time that Software Carpentry used Jupyter Notebook for their lesson creation and OpenDreamKit Jupyter notebook programmatic notebooks conversion.\n0:10 - 0:15 You are not alone. We will talk how the idea for the Jupyter Enhancement Proposals (JEPs) borned at EuroPython 2017 Help Desk\n0:15 - 0:20 Writing our first Jupyter Enhancement Proposals. We will cover our steps to create the pull request required by the Jupyter Project.\n0:20 - 0:25 What is the current status of the Jupyter Enhancement Proposals? We will cover any progress from the time of this talk proposal submission and the date of it presentation.\n0:25 - 0:30 Time for questions "], "date": ["Wednesday 25 July"], "tags": ["Case Study", "Community", "Jupyter/iPython"]},
{"title": ["10 years of EuroPython and the Python community"], "author": ["Dougal Matthews"], "description": ["This talk will take you on a journey from Birmingham to Edinburgh via Florence, Berlin, Bilbao and Rimini. The last 10 years of EuroPython.", "This will be a trip down memory lane where we look at how the language, community and conference have evolved with some personal anecdotes along the way.", "This will be in part a retrospective, where we will look at what we have done well and where we can do better. Finally, we will look at some aspirations and ideas for the coming years."], "date": ["Thursday 26 July"], "tags": ["EuroPython", "Community"]},
{"title": ["White Mars: living far away from any form of life"], "author": ["Marco Buttu"], "description": ["Concordia Station is a French/Italian facility located inside Antarctica, in a plateau called Dome-C, in the middle of nowhere. A dark and cold place: no Sun from May to August, temperatures around -80 Celsius degress, no life. Here I am living and performing scientific research with other 12 collegues from Italy, France and Austria. We are the most isolated people on Earth, more than the austronauts in the International Space Station. There is no way to move from Concordia until November, and no one can come. It is like to live in another planet, and that is why the European Space Agency is interested in making bio-medical research on us, in order to better understand how the human body behaves in a such extraterrestrial environment. We will introduce our studies, describe this place and our life here, and of course also speak about Python."], "date": ["Wednesday 25 July"], "tags": ["Science", "Case Study"]},
{"title": ["How to Ignore Most Startup Advice and Build a Decent Software Business"], "author": ["Ines Montani"], "description": ["It\u2019s a great time to be a software developer. Platforms are steadily becoming more mature, useful tools are released almost daily and things that seemed hopelessly futuristic only a few years ago are suddenly commercially viable. Despite this, the software world is awash with bullshit. The success of the largest technology companies has led to a very skewed set of lessons. This narrow focus is amplified by the venture capital industry and the fact that nobody really knows what\u2019s going to happen next.", "The good news is, none of this actually matters. The basics of creating something useful and selling it for money remain the same. In this talk, I\u2019m not going to give you \u201cone weird trick\u201d or tell you to ~* just follow your dreams *~. But I\u2019ll share some of the things we\u2019ve learned from building a successful software company around commercial developer tools and our open-source library spaCy."], "date": ["Thursday 26 July"], "tags": ["Best Practice", "Natural Language Processing", "Business", "failures/mistakes", "Use Case"]},
{"title": ["Die Threads"], "author": ["David Beazley"], "description": ["In the brave new world of async, threads are now a thing of the past. Or are they not?"], "date": ["Wednesday 25 July"], "tags": ["Python general", "ASYNC / Concurreny", "Multi-Threading"]}
]